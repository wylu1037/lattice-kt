[{"name":"class InvalidPasswordException : Exception","description":"com.example.wallet.InvalidPasswordException","location":"wallet/com.example.wallet/-invalid-password-exception/index.html","searchKeys":["InvalidPasswordException","class InvalidPasswordException : Exception","com.example.wallet.InvalidPasswordException"]},{"name":"constructor()","description":"com.example.wallet.InvalidPasswordException.InvalidPasswordException","location":"wallet/com.example.wallet/-invalid-password-exception/-invalid-password-exception.html","searchKeys":["InvalidPasswordException","constructor()","com.example.wallet.InvalidPasswordException.InvalidPasswordException"]},{"name":"constructor(address: String?, cipher: Cipher, uuid: String, isGM: Boolean)","description":"com.example.wallet.model.Wallet.Wallet","location":"wallet/com.example.wallet.model/-wallet/-wallet.html","searchKeys":["Wallet","constructor(address: String?, cipher: Cipher, uuid: String, isGM: Boolean)","com.example.wallet.model.Wallet.Wallet"]},{"name":"constructor(aes: Aes, ciphertext: String, kdf: Kdf, mac: String)","description":"com.example.wallet.model.Cipher.Cipher","location":"wallet/com.example.wallet.model/-cipher/-cipher.html","searchKeys":["Cipher","constructor(aes: Aes, ciphertext: String, kdf: Kdf, mac: String)","com.example.wallet.model.Cipher.Cipher"]},{"name":"constructor(cipher: String, ciphertext: String? = null, iv: String)","description":"com.example.wallet.model.Aes.Aes","location":"wallet/com.example.wallet.model/-aes/-aes.html","searchKeys":["Aes","constructor(cipher: String, ciphertext: String? = null, iv: String)","com.example.wallet.model.Aes.Aes"]},{"name":"constructor(dkLen: Int, n: Int, p: Int, r: Int, salt: String)","description":"com.example.wallet.model.KdfParams.KdfParams","location":"wallet/com.example.wallet.model/-kdf-params/-kdf-params.html","searchKeys":["KdfParams","constructor(dkLen: Int, n: Int, p: Int, r: Int, salt: String)","com.example.wallet.model.KdfParams.KdfParams"]},{"name":"constructor(kdf: String, kdfParams: KdfParams)","description":"com.example.wallet.model.Kdf.Kdf","location":"wallet/com.example.wallet.model/-kdf/-kdf.html","searchKeys":["Kdf","constructor(kdf: String, kdfParams: KdfParams)","com.example.wallet.model.Kdf.Kdf"]},{"name":"data class Aes(val cipher: String, val ciphertext: String? = null, val iv: String)","description":"com.example.wallet.model.Aes","location":"wallet/com.example.wallet.model/-aes/index.html","searchKeys":["Aes","data class Aes(val cipher: String, val ciphertext: String? = null, val iv: String)","com.example.wallet.model.Aes"]},{"name":"data class Cipher(val aes: Aes, val ciphertext: String, val kdf: Kdf, val mac: String)","description":"com.example.wallet.model.Cipher","location":"wallet/com.example.wallet.model/-cipher/index.html","searchKeys":["Cipher","data class Cipher(val aes: Aes, val ciphertext: String, val kdf: Kdf, val mac: String)","com.example.wallet.model.Cipher"]},{"name":"data class Kdf(val kdf: String, val kdfParams: KdfParams)","description":"com.example.wallet.model.Kdf","location":"wallet/com.example.wallet.model/-kdf/index.html","searchKeys":["Kdf","data class Kdf(val kdf: String, val kdfParams: KdfParams)","com.example.wallet.model.Kdf"]},{"name":"data class KdfParams(val dkLen: Int, val n: Int, val p: Int, val r: Int, val salt: String)","description":"com.example.wallet.model.KdfParams","location":"wallet/com.example.wallet.model/-kdf-params/index.html","searchKeys":["KdfParams","data class KdfParams(val dkLen: Int, val n: Int, val p: Int, val r: Int, val salt: String)","com.example.wallet.model.KdfParams"]},{"name":"data class Wallet(val address: String?, val cipher: Cipher, val uuid: String, val isGM: Boolean)","description":"com.example.wallet.model.Wallet","location":"wallet/com.example.wallet.model/-wallet/index.html","searchKeys":["Wallet","data class Wallet(val address: String?, val cipher: Cipher, val uuid: String, val isGM: Boolean)","com.example.wallet.model.Wallet"]},{"name":"fun ECKeyPair.newWallet(password: String, isGM: Boolean = true): Wallet","description":"com.example.wallet.newWallet","location":"wallet/com.example.wallet/new-wallet.html","searchKeys":["newWallet","fun ECKeyPair.newWallet(password: String, isGM: Boolean = true): Wallet","com.example.wallet.newWallet"]},{"name":"fun Wallet.decrypt(password: String): ECKeyPair","description":"com.example.wallet.decrypt","location":"wallet/com.example.wallet/decrypt.html","searchKeys":["decrypt","fun Wallet.decrypt(password: String): ECKeyPair","com.example.wallet.decrypt"]},{"name":"fun fromFileKey(json: String): Wallet","description":"com.example.wallet.model.Wallet.Companion.fromFileKey","location":"wallet/com.example.wallet.model/-wallet/-companion/from-file-key.html","searchKeys":["fromFileKey","fun fromFileKey(json: String): Wallet","com.example.wallet.model.Wallet.Companion.fromFileKey"]},{"name":"fun fromPrivateKey(privateKeyHex: String, isGM: Boolean = true, password: String): Wallet","description":"com.example.wallet.model.Wallet.Companion.fromPrivateKey","location":"wallet/com.example.wallet.model/-wallet/-companion/from-private-key.html","searchKeys":["fromPrivateKey","fun fromPrivateKey(privateKeyHex: String, isGM: Boolean = true, password: String): Wallet","com.example.wallet.model.Wallet.Companion.fromPrivateKey"]},{"name":"object Companion","description":"com.example.wallet.model.Wallet.Companion","location":"wallet/com.example.wallet.model/-wallet/-companion/index.html","searchKeys":["Companion","object Companion","com.example.wallet.model.Wallet.Companion"]},{"name":"open override val message: String","description":"com.example.wallet.InvalidPasswordException.message","location":"wallet/com.example.wallet/-invalid-password-exception/message.html","searchKeys":["message","open override val message: String","com.example.wallet.InvalidPasswordException.message"]},{"name":"val address: String?","description":"com.example.wallet.model.Wallet.address","location":"wallet/com.example.wallet.model/-wallet/address.html","searchKeys":["address","val address: String?","com.example.wallet.model.Wallet.address"]},{"name":"val aes: Aes","description":"com.example.wallet.model.Cipher.aes","location":"wallet/com.example.wallet.model/-cipher/aes.html","searchKeys":["aes","val aes: Aes","com.example.wallet.model.Cipher.aes"]},{"name":"val cipher: Cipher","description":"com.example.wallet.model.Wallet.cipher","location":"wallet/com.example.wallet.model/-wallet/cipher.html","searchKeys":["cipher","val cipher: Cipher","com.example.wallet.model.Wallet.cipher"]},{"name":"val cipher: String","description":"com.example.wallet.model.Aes.cipher","location":"wallet/com.example.wallet.model/-aes/cipher.html","searchKeys":["cipher","val cipher: String","com.example.wallet.model.Aes.cipher"]},{"name":"val ciphertext: String","description":"com.example.wallet.model.Cipher.ciphertext","location":"wallet/com.example.wallet.model/-cipher/ciphertext.html","searchKeys":["ciphertext","val ciphertext: String","com.example.wallet.model.Cipher.ciphertext"]},{"name":"val ciphertext: String? = null","description":"com.example.wallet.model.Aes.ciphertext","location":"wallet/com.example.wallet.model/-aes/ciphertext.html","searchKeys":["ciphertext","val ciphertext: String? = null","com.example.wallet.model.Aes.ciphertext"]},{"name":"val dkLen: Int","description":"com.example.wallet.model.KdfParams.dkLen","location":"wallet/com.example.wallet.model/-kdf-params/dk-len.html","searchKeys":["dkLen","val dkLen: Int","com.example.wallet.model.KdfParams.dkLen"]},{"name":"val isGM: Boolean","description":"com.example.wallet.model.Wallet.isGM","location":"wallet/com.example.wallet.model/-wallet/is-g-m.html","searchKeys":["isGM","val isGM: Boolean","com.example.wallet.model.Wallet.isGM"]},{"name":"val iv: String","description":"com.example.wallet.model.Aes.iv","location":"wallet/com.example.wallet.model/-aes/iv.html","searchKeys":["iv","val iv: String","com.example.wallet.model.Aes.iv"]},{"name":"val kdf: Kdf","description":"com.example.wallet.model.Cipher.kdf","location":"wallet/com.example.wallet.model/-cipher/kdf.html","searchKeys":["kdf","val kdf: Kdf","com.example.wallet.model.Cipher.kdf"]},{"name":"val kdf: String","description":"com.example.wallet.model.Kdf.kdf","location":"wallet/com.example.wallet.model/-kdf/kdf.html","searchKeys":["kdf","val kdf: String","com.example.wallet.model.Kdf.kdf"]},{"name":"val kdfParams: KdfParams","description":"com.example.wallet.model.Kdf.kdfParams","location":"wallet/com.example.wallet.model/-kdf/kdf-params.html","searchKeys":["kdfParams","val kdfParams: KdfParams","com.example.wallet.model.Kdf.kdfParams"]},{"name":"val mac: String","description":"com.example.wallet.model.Cipher.mac","location":"wallet/com.example.wallet.model/-cipher/mac.html","searchKeys":["mac","val mac: String","com.example.wallet.model.Cipher.mac"]},{"name":"val n: Int","description":"com.example.wallet.model.KdfParams.n","location":"wallet/com.example.wallet.model/-kdf-params/n.html","searchKeys":["n","val n: Int","com.example.wallet.model.KdfParams.n"]},{"name":"val p: Int","description":"com.example.wallet.model.KdfParams.p","location":"wallet/com.example.wallet.model/-kdf-params/p.html","searchKeys":["p","val p: Int","com.example.wallet.model.KdfParams.p"]},{"name":"val r: Int","description":"com.example.wallet.model.KdfParams.r","location":"wallet/com.example.wallet.model/-kdf-params/r.html","searchKeys":["r","val r: Int","com.example.wallet.model.KdfParams.r"]},{"name":"val salt: String","description":"com.example.wallet.model.KdfParams.salt","location":"wallet/com.example.wallet.model/-kdf-params/salt.html","searchKeys":["salt","val salt: String","com.example.wallet.model.KdfParams.salt"]},{"name":"val uuid: String","description":"com.example.wallet.model.Wallet.uuid","location":"wallet/com.example.wallet.model/-wallet/uuid.html","searchKeys":["uuid","val uuid: String","com.example.wallet.model.Wallet.uuid"]},{"name":"BACK_OFF","description":"com.example.lattice.Strategy.BACK_OFF","location":"lattice/com.example.lattice/-strategy/-b-a-c-k_-o-f-f/index.html","searchKeys":["BACK_OFF","BACK_OFF","com.example.lattice.Strategy.BACK_OFF"]},{"name":"CHAOS","description":"com.example.lattice.model.TxVersionEnum.CHAOS","location":"lattice/com.example.lattice.model/-tx-version-enum/-c-h-a-o-s/index.html","searchKeys":["CHAOS","CHAOS","com.example.lattice.model.TxVersionEnum.CHAOS"]},{"name":"CONTRACT","description":"com.example.lattice.model.TxTypeEnum.CONTRACT","location":"lattice/com.example.lattice.model/-tx-type-enum/-c-o-n-t-r-a-c-t/index.html","searchKeys":["CONTRACT","CONTRACT","com.example.lattice.model.TxTypeEnum.CONTRACT"]},{"name":"CREATE","description":"com.example.lattice.model.TxTypeEnum.CREATE","location":"lattice/com.example.lattice.model/-tx-type-enum/-c-r-e-a-t-e/index.html","searchKeys":["CREATE","CREATE","com.example.lattice.model.TxTypeEnum.CREATE"]},{"name":"EXECUTE","description":"com.example.lattice.model.TxTypeEnum.EXECUTE","location":"lattice/com.example.lattice.model/-tx-type-enum/-e-x-e-c-u-t-e/index.html","searchKeys":["EXECUTE","EXECUTE","com.example.lattice.model.TxTypeEnum.EXECUTE"]},{"name":"FIXED_INTERVAL","description":"com.example.lattice.Strategy.FIXED_INTERVAL","location":"lattice/com.example.lattice/-strategy/-f-i-x-e-d_-i-n-t-e-r-v-a-l/index.html","searchKeys":["FIXED_INTERVAL","FIXED_INTERVAL","com.example.lattice.Strategy.FIXED_INTERVAL"]},{"name":"GENESIS","description":"com.example.lattice.model.TxTypeEnum.GENESIS","location":"lattice/com.example.lattice.model/-tx-type-enum/-g-e-n-e-s-i-s/index.html","searchKeys":["GENESIS","GENESIS","com.example.lattice.model.TxTypeEnum.GENESIS"]},{"name":"HTTP","description":"com.example.lattice.provider.Protocol.HTTP","location":"lattice/com.example.lattice.provider/-protocol/-h-t-t-p/index.html","searchKeys":["HTTP","HTTP","com.example.lattice.provider.Protocol.HTTP"]},{"name":"LATEST","description":"com.example.lattice.model.TxVersionEnum.LATEST","location":"lattice/com.example.lattice.model/-tx-version-enum/-l-a-t-e-s-t/index.html","searchKeys":["LATEST","LATEST","com.example.lattice.model.TxVersionEnum.LATEST"]},{"name":"NUWA","description":"com.example.lattice.model.TxVersionEnum.NUWA","location":"lattice/com.example.lattice.model/-tx-version-enum/-n-u-w-a/index.html","searchKeys":["NUWA","NUWA","com.example.lattice.model.TxVersionEnum.NUWA"]},{"name":"PANGU","description":"com.example.lattice.model.TxVersionEnum.PANGU","location":"lattice/com.example.lattice.model/-tx-version-enum/-p-a-n-g-u/index.html","searchKeys":["PANGU","PANGU","com.example.lattice.model.TxVersionEnum.PANGU"]},{"name":"RANDOM_INTERVAL","description":"com.example.lattice.Strategy.RANDOM_INTERVAL","location":"lattice/com.example.lattice/-strategy/-r-a-n-d-o-m_-i-n-t-e-r-v-a-l/index.html","searchKeys":["RANDOM_INTERVAL","RANDOM_INTERVAL","com.example.lattice.Strategy.RANDOM_INTERVAL"]},{"name":"RECEIVE","description":"com.example.lattice.model.TxTypeEnum.RECEIVE","location":"lattice/com.example.lattice.model/-tx-type-enum/-r-e-c-e-i-v-e/index.html","searchKeys":["RECEIVE","RECEIVE","com.example.lattice.model.TxTypeEnum.RECEIVE"]},{"name":"SEND","description":"com.example.lattice.model.TxTypeEnum.SEND","location":"lattice/com.example.lattice.model/-tx-type-enum/-s-e-n-d/index.html","searchKeys":["SEND","SEND","com.example.lattice.model.TxTypeEnum.SEND"]},{"name":"Secp256k1","description":"com.example.lattice.Curve.Secp256k1","location":"lattice/com.example.lattice/-curve/-secp256k1/index.html","searchKeys":["Secp256k1","Secp256k1","com.example.lattice.Curve.Secp256k1"]},{"name":"Sm2p256v1","description":"com.example.lattice.Curve.Sm2p256v1","location":"lattice/com.example.lattice/-curve/-sm2p256v1/index.html","searchKeys":["Sm2p256v1","Sm2p256v1","com.example.lattice.Curve.Sm2p256v1"]},{"name":"UNKNOWN","description":"com.example.lattice.provider.Protocol.UNKNOWN","location":"lattice/com.example.lattice.provider/-protocol/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","com.example.lattice.provider.Protocol.UNKNOWN"]},{"name":"UPDATE","description":"com.example.lattice.model.TxTypeEnum.UPDATE","location":"lattice/com.example.lattice.model/-tx-type-enum/-u-p-d-a-t-e/index.html","searchKeys":["UPDATE","UPDATE","com.example.lattice.model.TxTypeEnum.UPDATE"]},{"name":"WS","description":"com.example.lattice.provider.Protocol.WS","location":"lattice/com.example.lattice.provider/-protocol/-w-s/index.html","searchKeys":["WS","WS","com.example.lattice.provider.Protocol.WS"]},{"name":"abstract class BaseTransactionBuilder<T : BaseTransactionBuilder<T>>(type: TxTypeEnum) : TransactionBuilder<T> ","description":"com.example.lattice.BaseTransactionBuilder","location":"lattice/com.example.lattice/-base-transaction-builder/index.html","searchKeys":["BaseTransactionBuilder","abstract class BaseTransactionBuilder<T : BaseTransactionBuilder<T>>(type: TxTypeEnum) : TransactionBuilder<T> ","com.example.lattice.BaseTransactionBuilder"]},{"name":"abstract fun build(): Transaction","description":"com.example.lattice.TransactionBuilder.build","location":"lattice/com.example.lattice/-transaction-builder/build.html","searchKeys":["build","abstract fun build(): Transaction","com.example.lattice.TransactionBuilder.build"]},{"name":"abstract fun callContract(contractAddress: String, data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): String","description":"com.example.lattice.Lattice.callContract","location":"lattice/com.example.lattice/-lattice/call-contract.html","searchKeys":["callContract","abstract fun callContract(contractAddress: String, data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): String","com.example.lattice.Lattice.callContract"]},{"name":"abstract fun callContractWaitReceipt(contractAddress: String, data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0, retryPolicy: RetryPolicy<Throwable> = RetryStrategy.defaultFixedIntervalRetry()): Receipt","description":"com.example.lattice.Lattice.callContractWaitReceipt","location":"lattice/com.example.lattice/-lattice/call-contract-wait-receipt.html","searchKeys":["callContractWaitReceipt","abstract fun callContractWaitReceipt(contractAddress: String, data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0, retryPolicy: RetryPolicy<Throwable> = RetryStrategy.defaultFixedIntervalRetry()): Receipt","com.example.lattice.Lattice.callContractWaitReceipt"]},{"name":"abstract fun deployContract(data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): String","description":"com.example.lattice.Lattice.deployContract","location":"lattice/com.example.lattice/-lattice/deploy-contract.html","searchKeys":["deployContract","abstract fun deployContract(data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): String","com.example.lattice.Lattice.deployContract"]},{"name":"abstract fun deployContractWaitReceipt(data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0, retryPolicy: RetryPolicy<Throwable> = RetryStrategy.defaultFixedIntervalRetry()): Receipt","description":"com.example.lattice.Lattice.deployContractWaitReceipt","location":"lattice/com.example.lattice/-lattice/deploy-contract-wait-receipt.html","searchKeys":["deployContractWaitReceipt","abstract fun deployContractWaitReceipt(data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0, retryPolicy: RetryPolicy<Throwable> = RetryStrategy.defaultFixedIntervalRetry()): Receipt","com.example.lattice.Lattice.deployContractWaitReceipt"]},{"name":"abstract fun getBalanceWithPending(address: Address): Balance","description":"com.example.lattice.provider.HttpApi.getBalanceWithPending","location":"lattice/com.example.lattice.provider/-http-api/get-balance-with-pending.html","searchKeys":["getBalanceWithPending","abstract fun getBalanceWithPending(address: Address): Balance","com.example.lattice.provider.HttpApi.getBalanceWithPending"]},{"name":"abstract fun getGenesis(): TBlock","description":"com.example.lattice.provider.HttpApi.getGenesis","location":"lattice/com.example.lattice.provider/-http-api/get-genesis.html","searchKeys":["getGenesis","abstract fun getGenesis(): TBlock","com.example.lattice.provider.HttpApi.getGenesis"]},{"name":"abstract fun getLatestBlock(address: Address): CurrentTDBlock","description":"com.example.lattice.provider.HttpApi.getLatestBlock","location":"lattice/com.example.lattice.provider/-http-api/get-latest-block.html","searchKeys":["getLatestBlock","abstract fun getLatestBlock(address: Address): CurrentTDBlock","com.example.lattice.provider.HttpApi.getLatestBlock"]},{"name":"abstract fun getLatestTDBlockWithCatch(address: Address): CurrentTDBlock","description":"com.example.lattice.provider.HttpApi.getLatestTDBlockWithCatch","location":"lattice/com.example.lattice.provider/-http-api/get-latest-t-d-block-with-catch.html","searchKeys":["getLatestTDBlockWithCatch","abstract fun getLatestTDBlockWithCatch(address: Address): CurrentTDBlock","com.example.lattice.provider.HttpApi.getLatestTDBlockWithCatch"]},{"name":"abstract fun getReceipt(hash: String): Receipt","description":"com.example.lattice.provider.HttpApi.getReceipt","location":"lattice/com.example.lattice.provider/-http-api/get-receipt.html","searchKeys":["getReceipt","abstract fun getReceipt(hash: String): Receipt","com.example.lattice.provider.HttpApi.getReceipt"]},{"name":"abstract fun preCallContract(contractAddress: String, data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): Receipt","description":"com.example.lattice.Lattice.preCallContract","location":"lattice/com.example.lattice/-lattice/pre-call-contract.html","searchKeys":["preCallContract","abstract fun preCallContract(contractAddress: String, data: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): Receipt","com.example.lattice.Lattice.preCallContract"]},{"name":"abstract fun preCallContract(unsignedTx: Transaction): Receipt","description":"com.example.lattice.provider.HttpApi.preCallContract","location":"lattice/com.example.lattice.provider/-http-api/pre-call-contract.html","searchKeys":["preCallContract","abstract fun preCallContract(unsignedTx: Transaction): Receipt","com.example.lattice.provider.HttpApi.preCallContract"]},{"name":"abstract fun refreshTimestamp(): T","description":"com.example.lattice.TransactionBuilder.refreshTimestamp","location":"lattice/com.example.lattice/-transaction-builder/refresh-timestamp.html","searchKeys":["refreshTimestamp","abstract fun refreshTimestamp(): T","com.example.lattice.TransactionBuilder.refreshTimestamp"]},{"name":"abstract fun refreshToken(newToken: String)","description":"com.example.lattice.provider.HttpApi.refreshToken","location":"lattice/com.example.lattice.provider/-http-api/refresh-token.html","searchKeys":["refreshToken","abstract fun refreshToken(newToken: String)","com.example.lattice.provider.HttpApi.refreshToken"]},{"name":"abstract fun send(payload: JsonRpcPayload, headers: Map<String, String>): String","description":"com.example.lattice.provider.Client.send","location":"lattice/com.example.lattice.provider/-client/send.html","searchKeys":["send","abstract fun send(payload: JsonRpcPayload, headers: Map<String, String>): String","com.example.lattice.provider.Client.send"]},{"name":"abstract fun sendRawTBlock(signedTx: Transaction): String","description":"com.example.lattice.provider.HttpApi.sendRawTBlock","location":"lattice/com.example.lattice.provider/-http-api/send-raw-t-block.html","searchKeys":["sendRawTBlock","abstract fun sendRawTBlock(signedTx: Transaction): String","com.example.lattice.provider.HttpApi.sendRawTBlock"]},{"name":"abstract fun setAmount(amount: Long): T","description":"com.example.lattice.TransactionBuilder.setAmount","location":"lattice/com.example.lattice/-transaction-builder/set-amount.html","searchKeys":["setAmount","abstract fun setAmount(amount: Long): T","com.example.lattice.TransactionBuilder.setAmount"]},{"name":"abstract fun setBlock(latest: CurrentTDBlock): T","description":"com.example.lattice.TransactionBuilder.setBlock","location":"lattice/com.example.lattice/-transaction-builder/set-block.html","searchKeys":["setBlock","abstract fun setBlock(latest: CurrentTDBlock): T","com.example.lattice.TransactionBuilder.setBlock"]},{"name":"abstract fun setCode(data: String): T","description":"com.example.lattice.TransactionBuilder.setCode","location":"lattice/com.example.lattice/-transaction-builder/set-code.html","searchKeys":["setCode","abstract fun setCode(data: String): T","com.example.lattice.TransactionBuilder.setCode"]},{"name":"abstract fun setJoule(joule: Long): T","description":"com.example.lattice.TransactionBuilder.setJoule","location":"lattice/com.example.lattice/-transaction-builder/set-joule.html","searchKeys":["setJoule","abstract fun setJoule(joule: Long): T","com.example.lattice.TransactionBuilder.setJoule"]},{"name":"abstract fun setLinker(linker: Address): T","description":"com.example.lattice.TransactionBuilder.setLinker","location":"lattice/com.example.lattice/-transaction-builder/set-linker.html","searchKeys":["setLinker","abstract fun setLinker(linker: Address): T","com.example.lattice.TransactionBuilder.setLinker"]},{"name":"abstract fun setOwner(owner: Address): T","description":"com.example.lattice.TransactionBuilder.setOwner","location":"lattice/com.example.lattice/-transaction-builder/set-owner.html","searchKeys":["setOwner","abstract fun setOwner(owner: Address): T","com.example.lattice.TransactionBuilder.setOwner"]},{"name":"abstract fun setPayload(payload: String): T","description":"com.example.lattice.TransactionBuilder.setPayload","location":"lattice/com.example.lattice/-transaction-builder/set-payload.html","searchKeys":["setPayload","abstract fun setPayload(payload: String): T","com.example.lattice.TransactionBuilder.setPayload"]},{"name":"abstract fun transfer(linker: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): String","description":"com.example.lattice.Lattice.transfer","location":"lattice/com.example.lattice/-lattice/transfer.html","searchKeys":["transfer","abstract fun transfer(linker: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0): String","com.example.lattice.Lattice.transfer"]},{"name":"abstract fun transferWaitReceipt(linker: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0, retryPolicy: RetryPolicy<Throwable> = RetryStrategy.defaultFixedIntervalRetry()): Receipt","description":"com.example.lattice.Lattice.transferWaitReceipt","location":"lattice/com.example.lattice/-lattice/transfer-wait-receipt.html","searchKeys":["transferWaitReceipt","abstract fun transferWaitReceipt(linker: String, payload: String = \"0x\", amount: Long = 0, joule: Long = 0, retryPolicy: RetryPolicy<Throwable> = RetryStrategy.defaultFixedIntervalRetry()): Receipt","com.example.lattice.Lattice.transferWaitReceipt"]},{"name":"class CallContractTXBuilder : BaseTransactionBuilder<CallContractTXBuilder> ","description":"com.example.lattice.CallContractTXBuilder","location":"lattice/com.example.lattice/-call-contract-t-x-builder/index.html","searchKeys":["CallContractTXBuilder","class CallContractTXBuilder : BaseTransactionBuilder<CallContractTXBuilder> ","com.example.lattice.CallContractTXBuilder"]},{"name":"class DeployContractTXBuilder : BaseTransactionBuilder<DeployContractTXBuilder> ","description":"com.example.lattice.DeployContractTXBuilder","location":"lattice/com.example.lattice/-deploy-contract-t-x-builder/index.html","searchKeys":["DeployContractTXBuilder","class DeployContractTXBuilder : BaseTransactionBuilder<DeployContractTXBuilder> ","com.example.lattice.DeployContractTXBuilder"]},{"name":"class HTTPClient(url: URL, options: Map<String, String> = emptyMap()) : Client","description":"com.example.lattice.provider.HTTPClient","location":"lattice/com.example.lattice.provider/-h-t-t-p-client/index.html","searchKeys":["HTTPClient","class HTTPClient(url: URL, options: Map<String, String> = emptyMap()) : Client","com.example.lattice.provider.HTTPClient"]},{"name":"class HttpApiImpl(params: HttpApiParams) : HttpApi","description":"com.example.lattice.provider.HttpApiImpl","location":"lattice/com.example.lattice.provider/-http-api-impl/index.html","searchKeys":["HttpApiImpl","class HttpApiImpl(params: HttpApiParams) : HttpApi","com.example.lattice.provider.HttpApiImpl"]},{"name":"class LatticeImpl(chainConfig: ChainConfig, connectingNodeConfig: ConnectingNodeConfig, credentialConfig: CredentialConfig, options: Options? = null) : Lattice","description":"com.example.lattice.LatticeImpl","location":"lattice/com.example.lattice/-lattice-impl/index.html","searchKeys":["LatticeImpl","class LatticeImpl(chainConfig: ChainConfig, connectingNodeConfig: ConnectingNodeConfig, credentialConfig: CredentialConfig, options: Options? = null) : Lattice","com.example.lattice.LatticeImpl"]},{"name":"class RetryStrategy","description":"com.example.lattice.RetryStrategy","location":"lattice/com.example.lattice/-retry-strategy/index.html","searchKeys":["RetryStrategy","class RetryStrategy","com.example.lattice.RetryStrategy"]},{"name":"class TransferTXBuilder : BaseTransactionBuilder<TransferTXBuilder> ","description":"com.example.lattice.TransferTXBuilder","location":"lattice/com.example.lattice/-transfer-t-x-builder/index.html","searchKeys":["TransferTXBuilder","class TransferTXBuilder : BaseTransactionBuilder<TransferTXBuilder> ","com.example.lattice.TransferTXBuilder"]},{"name":"class WSClient(url: URL, options: Map<String, String>) : Client","description":"com.example.lattice.provider.WSClient","location":"lattice/com.example.lattice.provider/-w-s-client/index.html","searchKeys":["WSClient","class WSClient(url: URL, options: Map<String, String>) : Client","com.example.lattice.provider.WSClient"]},{"name":"const val ZERO_ADDRESS: String","description":"com.example.lattice.ZERO_ADDRESS","location":"lattice/com.example.lattice/-z-e-r-o_-a-d-d-r-e-s-s.html","searchKeys":["ZERO_ADDRESS","const val ZERO_ADDRESS: String","com.example.lattice.ZERO_ADDRESS"]},{"name":"const val ZERO_HASH: String","description":"com.example.lattice.model.ZERO_HASH","location":"lattice/com.example.lattice.model/-z-e-r-o_-h-a-s-h.html","searchKeys":["ZERO_HASH","const val ZERO_HASH: String","com.example.lattice.model.ZERO_HASH"]},{"name":"const val ZERO_LTC_ADDR: String","description":"com.example.lattice.model.ZERO_LTC_ADDR","location":"lattice/com.example.lattice.model/-z-e-r-o_-l-t-c_-a-d-d-r.html","searchKeys":["ZERO_LTC_ADDR","const val ZERO_LTC_ADDR: String","com.example.lattice.model.ZERO_LTC_ADDR"]},{"name":"constructor()","description":"com.example.lattice.CallContractTXBuilder.CallContractTXBuilder","location":"lattice/com.example.lattice/-call-contract-t-x-builder/-call-contract-t-x-builder.html","searchKeys":["CallContractTXBuilder","constructor()","com.example.lattice.CallContractTXBuilder.CallContractTXBuilder"]},{"name":"constructor()","description":"com.example.lattice.DeployContractTXBuilder.DeployContractTXBuilder","location":"lattice/com.example.lattice/-deploy-contract-t-x-builder/-deploy-contract-t-x-builder.html","searchKeys":["DeployContractTXBuilder","constructor()","com.example.lattice.DeployContractTXBuilder.DeployContractTXBuilder"]},{"name":"constructor()","description":"com.example.lattice.RetryStrategy.RetryStrategy","location":"lattice/com.example.lattice/-retry-strategy/-retry-strategy.html","searchKeys":["RetryStrategy","constructor()","com.example.lattice.RetryStrategy.RetryStrategy"]},{"name":"constructor()","description":"com.example.lattice.TransferTXBuilder.TransferTXBuilder","location":"lattice/com.example.lattice/-transfer-t-x-builder/-transfer-t-x-builder.html","searchKeys":["TransferTXBuilder","constructor()","com.example.lattice.TransferTXBuilder.TransferTXBuilder"]},{"name":"constructor(accountAddress: String, privateKey: String, passphrase: String? = null)","description":"com.example.lattice.CredentialConfig.CredentialConfig","location":"lattice/com.example.lattice/-credential-config/-credential-config.html","searchKeys":["CredentialConfig","constructor(accountAddress: String, privateKey: String, passphrase: String? = null)","com.example.lattice.CredentialConfig.CredentialConfig"]},{"name":"constructor(balance: String, pending: String, total: String)","description":"com.example.lattice.model.Balance.Balance","location":"lattice/com.example.lattice.model/-balance/-balance.html","searchKeys":["Balance","constructor(balance: String, pending: String, total: String)","com.example.lattice.model.Balance.Balance"]},{"name":"constructor(chainConfig: ChainConfig, connectingNodeConfig: ConnectingNodeConfig, credentialConfig: CredentialConfig, options: Options? = null)","description":"com.example.lattice.LatticeImpl.LatticeImpl","location":"lattice/com.example.lattice/-lattice-impl/-lattice-impl.html","searchKeys":["LatticeImpl","constructor(chainConfig: ChainConfig, connectingNodeConfig: ConnectingNodeConfig, credentialConfig: CredentialConfig, options: Options? = null)","com.example.lattice.LatticeImpl.LatticeImpl"]},{"name":"constructor(chainId: Int, curve: Curve, tokenLess: Boolean = true)","description":"com.example.lattice.ChainConfig.ChainConfig","location":"lattice/com.example.lattice/-chain-config/-chain-config.html","searchKeys":["ChainConfig","constructor(chainId: Int, curve: Curve, tokenLess: Boolean = true)","com.example.lattice.ChainConfig.ChainConfig"]},{"name":"constructor(code: Int, message: String)","description":"com.example.lattice.model.JsonRpcError.JsonRpcError","location":"lattice/com.example.lattice.model/-json-rpc-error/-json-rpc-error.html","searchKeys":["JsonRpcError","constructor(code: Int, message: String)","com.example.lattice.model.JsonRpcError.JsonRpcError"]},{"name":"constructor(id: JsonRpcId, jsonRpc: JsonRpcIdentifier, result: T?, error: JsonRpcError?)","description":"com.example.lattice.model.JsonRpcResponse.JsonRpcResponse","location":"lattice/com.example.lattice.model/-json-rpc-response/-json-rpc-response.html","searchKeys":["JsonRpcResponse","constructor(id: JsonRpcId, jsonRpc: JsonRpcIdentifier, result: T?, error: JsonRpcError?)","com.example.lattice.model.JsonRpcResponse.JsonRpcResponse"]},{"name":"constructor(interval: Int)","description":"com.example.lattice.Options.Options","location":"lattice/com.example.lattice/-options/-options.html","searchKeys":["Options","constructor(interval: Int)","com.example.lattice.Options.Options"]},{"name":"constructor(jsonRpc: JsonRpcIdentifier = version, id: JsonRpcId = 1, method: String, params: Array<Any>)","description":"com.example.lattice.model.JsonRpcPayload.JsonRpcPayload","location":"lattice/com.example.lattice.model/-json-rpc-payload/-json-rpc-payload.html","searchKeys":["JsonRpcPayload","constructor(jsonRpc: JsonRpcIdentifier = version, id: JsonRpcId = 1, method: String, params: Array<Any>)","com.example.lattice.model.JsonRpcPayload.JsonRpcPayload"]},{"name":"constructor(number: Long, parentHash: String, daemonHash: String, timestamp: Long = Instant.now().epochSecond, owner: Address, linker: Address? = Address(ZERO_LTC_ADDR), type: TxTypeEnum, hub: Array<String> = emptyArray(), code: String? = null, codeHash: String? = null, payload: String? = \"0x\", amount: Long = 0, income: Long? = null, joule: Long = 0, sign: String? = null, proofOfWork: String? = null, version: Int = TxVersionEnum.LATEST.version(), difficulty: Int? = 0)","description":"com.example.lattice.model.Transaction.Transaction","location":"lattice/com.example.lattice.model/-transaction/-transaction.html","searchKeys":["Transaction","constructor(number: Long, parentHash: String, daemonHash: String, timestamp: Long = Instant.now().epochSecond, owner: Address, linker: Address? = Address(ZERO_LTC_ADDR), type: TxTypeEnum, hub: Array<String> = emptyArray(), code: String? = null, codeHash: String? = null, payload: String? = \"0x\", amount: Long = 0, income: Long? = null, joule: Long = 0, sign: String? = null, proofOfWork: String? = null, version: Int = TxVersionEnum.LATEST.version(), difficulty: Int? = 0)","com.example.lattice.model.Transaction.Transaction"]},{"name":"constructor(params: HttpApiParams)","description":"com.example.lattice.provider.HttpApiImpl.HttpApiImpl","location":"lattice/com.example.lattice.provider/-http-api-impl/-http-api-impl.html","searchKeys":["HttpApiImpl","constructor(params: HttpApiParams)","com.example.lattice.provider.HttpApiImpl.HttpApiImpl"]},{"name":"constructor(type: TxTypeEnum)","description":"com.example.lattice.BaseTransactionBuilder.BaseTransactionBuilder","location":"lattice/com.example.lattice/-base-transaction-builder/-base-transaction-builder.html","searchKeys":["BaseTransactionBuilder","constructor(type: TxTypeEnum)","com.example.lattice.BaseTransactionBuilder.BaseTransactionBuilder"]},{"name":"constructor(url: String)","description":"com.example.lattice.ConnectingNodeConfig.ConnectingNodeConfig","location":"lattice/com.example.lattice/-connecting-node-config/-connecting-node-config.html","searchKeys":["ConnectingNodeConfig","constructor(url: String)","com.example.lattice.ConnectingNodeConfig.ConnectingNodeConfig"]},{"name":"constructor(url: URL, body: Map<String, Any> = emptyMap(), headers: Map<String, String>? = null)","description":"com.example.lattice.model.BaseRequest.BaseRequest","location":"lattice/com.example.lattice.model/-base-request/-base-request.html","searchKeys":["BaseRequest","constructor(url: URL, body: Map<String, Any> = emptyMap(), headers: Map<String, String>? = null)","com.example.lattice.model.BaseRequest.BaseRequest"]},{"name":"constructor(url: URL, chainId: Int, token: String? = null)","description":"com.example.lattice.provider.HttpApiParams.HttpApiParams","location":"lattice/com.example.lattice.provider/-http-api-params/-http-api-params.html","searchKeys":["HttpApiParams","constructor(url: URL, chainId: Int, token: String? = null)","com.example.lattice.provider.HttpApiParams.HttpApiParams"]},{"name":"constructor(url: URL, options: Map<String, String> = emptyMap())","description":"com.example.lattice.provider.HTTPClient.HTTPClient","location":"lattice/com.example.lattice.provider/-h-t-t-p-client/-h-t-t-p-client.html","searchKeys":["HTTPClient","constructor(url: URL, options: Map<String, String> = emptyMap())","com.example.lattice.provider.HTTPClient.HTTPClient"]},{"name":"constructor(url: URL, options: Map<String, String>)","description":"com.example.lattice.provider.WSClient.WSClient","location":"lattice/com.example.lattice.provider/-w-s-client/-w-s-client.html","searchKeys":["WSClient","constructor(url: URL, options: Map<String, String>)","com.example.lattice.provider.WSClient.WSClient"]},{"name":"constructor(value: String)","description":"com.example.lattice.provider.URL.URL","location":"lattice/com.example.lattice.provider/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(value: String)","com.example.lattice.provider.URL.URL"]},{"name":"data class Balance(val balance: String, val pending: String, val total: String)","description":"com.example.lattice.model.Balance","location":"lattice/com.example.lattice.model/-balance/index.html","searchKeys":["Balance","data class Balance(val balance: String, val pending: String, val total: String)","com.example.lattice.model.Balance"]},{"name":"data class BaseRequest(val url: URL, val body: Map<String, Any> = emptyMap(), val headers: Map<String, String>? = null)","description":"com.example.lattice.model.BaseRequest","location":"lattice/com.example.lattice.model/-base-request/index.html","searchKeys":["BaseRequest","data class BaseRequest(val url: URL, val body: Map<String, Any> = emptyMap(), val headers: Map<String, String>? = null)","com.example.lattice.model.BaseRequest"]},{"name":"data class ChainConfig(val chainId: Int, val curve: Curve, val tokenLess: Boolean = true)","description":"com.example.lattice.ChainConfig","location":"lattice/com.example.lattice/-chain-config/index.html","searchKeys":["ChainConfig","data class ChainConfig(val chainId: Int, val curve: Curve, val tokenLess: Boolean = true)","com.example.lattice.ChainConfig"]},{"name":"data class ConnectingNodeConfig(val url: String)","description":"com.example.lattice.ConnectingNodeConfig","location":"lattice/com.example.lattice/-connecting-node-config/index.html","searchKeys":["ConnectingNodeConfig","data class ConnectingNodeConfig(val url: String)","com.example.lattice.ConnectingNodeConfig"]},{"name":"data class CredentialConfig(val accountAddress: String, val privateKey: String, val passphrase: String? = null)","description":"com.example.lattice.CredentialConfig","location":"lattice/com.example.lattice/-credential-config/index.html","searchKeys":["CredentialConfig","data class CredentialConfig(val accountAddress: String, val privateKey: String, val passphrase: String? = null)","com.example.lattice.CredentialConfig"]},{"name":"data class HttpApiParams(val url: URL, val chainId: Int, var token: String? = null)","description":"com.example.lattice.provider.HttpApiParams","location":"lattice/com.example.lattice.provider/-http-api-params/index.html","searchKeys":["HttpApiParams","data class HttpApiParams(val url: URL, val chainId: Int, var token: String? = null)","com.example.lattice.provider.HttpApiParams"]},{"name":"data class JsonRpcError(val code: Int, val message: String)","description":"com.example.lattice.model.JsonRpcError","location":"lattice/com.example.lattice.model/-json-rpc-error/index.html","searchKeys":["JsonRpcError","data class JsonRpcError(val code: Int, val message: String)","com.example.lattice.model.JsonRpcError"]},{"name":"data class JsonRpcPayload(val jsonRpc: JsonRpcIdentifier = version, val id: JsonRpcId = 1, val method: String, val params: Array<Any>)","description":"com.example.lattice.model.JsonRpcPayload","location":"lattice/com.example.lattice.model/-json-rpc-payload/index.html","searchKeys":["JsonRpcPayload","data class JsonRpcPayload(val jsonRpc: JsonRpcIdentifier = version, val id: JsonRpcId = 1, val method: String, val params: Array<Any>)","com.example.lattice.model.JsonRpcPayload"]},{"name":"data class JsonRpcResponse<T>(val id: JsonRpcId, val jsonRpc: JsonRpcIdentifier, val result: T?, val error: JsonRpcError?)","description":"com.example.lattice.model.JsonRpcResponse","location":"lattice/com.example.lattice.model/-json-rpc-response/index.html","searchKeys":["JsonRpcResponse","data class JsonRpcResponse<T>(val id: JsonRpcId, val jsonRpc: JsonRpcIdentifier, val result: T?, val error: JsonRpcError?)","com.example.lattice.model.JsonRpcResponse"]},{"name":"data class Options(val interval: Int)","description":"com.example.lattice.Options","location":"lattice/com.example.lattice/-options/index.html","searchKeys":["Options","data class Options(val interval: Int)","com.example.lattice.Options"]},{"name":"data class Transaction(var number: Long, var parentHash: String, var daemonHash: String, var timestamp: Long = Instant.now().epochSecond, var owner: Address, var linker: Address? = Address(ZERO_LTC_ADDR), val type: TxTypeEnum, var hub: Array<String> = emptyArray(), var code: String? = null, val codeHash: String? = null, var payload: String? = \"0x\", var amount: Long = 0, var income: Long? = null, var joule: Long = 0, var sign: String? = null, var proofOfWork: String? = null, var version: Int = TxVersionEnum.LATEST.version(), var difficulty: Int? = 0)","description":"com.example.lattice.model.Transaction","location":"lattice/com.example.lattice.model/-transaction/index.html","searchKeys":["Transaction","data class Transaction(var number: Long, var parentHash: String, var daemonHash: String, var timestamp: Long = Instant.now().epochSecond, var owner: Address, var linker: Address? = Address(ZERO_LTC_ADDR), val type: TxTypeEnum, var hub: Array<String> = emptyArray(), var code: String? = null, val codeHash: String? = null, var payload: String? = \"0x\", var amount: Long = 0, var income: Long? = null, var joule: Long = 0, var sign: String? = null, var proofOfWork: String? = null, var version: Int = TxVersionEnum.LATEST.version(), var difficulty: Int? = 0)","com.example.lattice.model.Transaction"]},{"name":"data class URL(val value: String)","description":"com.example.lattice.provider.URL","location":"lattice/com.example.lattice.provider/-u-r-l/index.html","searchKeys":["URL","data class URL(val value: String)","com.example.lattice.provider.URL"]},{"name":"enum Curve : Enum<Curve> ","description":"com.example.lattice.Curve","location":"lattice/com.example.lattice/-curve/index.html","searchKeys":["Curve","enum Curve : Enum<Curve> ","com.example.lattice.Curve"]},{"name":"enum Protocol : Enum<Protocol> ","description":"com.example.lattice.provider.Protocol","location":"lattice/com.example.lattice.provider/-protocol/index.html","searchKeys":["Protocol","enum Protocol : Enum<Protocol> ","com.example.lattice.provider.Protocol"]},{"name":"enum Strategy : Enum<Strategy> ","description":"com.example.lattice.Strategy","location":"lattice/com.example.lattice/-strategy/index.html","searchKeys":["Strategy","enum Strategy : Enum<Strategy> ","com.example.lattice.Strategy"]},{"name":"enum TxTypeEnum : Enum<TxTypeEnum> ","description":"com.example.lattice.model.TxTypeEnum","location":"lattice/com.example.lattice.model/-tx-type-enum/index.html","searchKeys":["TxTypeEnum","enum TxTypeEnum : Enum<TxTypeEnum> ","com.example.lattice.model.TxTypeEnum"]},{"name":"enum TxVersionEnum : Enum<TxVersionEnum> ","description":"com.example.lattice.model.TxVersionEnum","location":"lattice/com.example.lattice.model/-tx-version-enum/index.html","searchKeys":["TxVersionEnum","enum TxVersionEnum : Enum<TxVersionEnum> ","com.example.lattice.model.TxVersionEnum"]},{"name":"fun ChainConfig.isGM(): Boolean","description":"com.example.lattice.isGM","location":"lattice/com.example.lattice/is-g-m.html","searchKeys":["isGM","fun ChainConfig.isGM(): Boolean","com.example.lattice.isGM"]},{"name":"fun HttpApiParams.chainIdAsString(): String","description":"com.example.lattice.provider.chainIdAsString","location":"lattice/com.example.lattice.provider/chain-id-as-string.html","searchKeys":["chainIdAsString","fun HttpApiParams.chainIdAsString(): String","com.example.lattice.provider.chainIdAsString"]},{"name":"fun JsonRpcPayload.toBody(): Map<String, Any>","description":"com.example.lattice.model.toBody","location":"lattice/com.example.lattice.model/to-body.html","searchKeys":["toBody","fun JsonRpcPayload.toBody(): Map<String, Any>","com.example.lattice.model.toBody"]},{"name":"fun Transaction.calculateTransactionHash(isGM: Boolean = true, useProofOfWork: Boolean = false): String","description":"com.example.lattice.model.calculateTransactionHash","location":"lattice/com.example.lattice.model/calculate-transaction-hash.html","searchKeys":["calculateTransactionHash","fun Transaction.calculateTransactionHash(isGM: Boolean = true, useProofOfWork: Boolean = false): String","com.example.lattice.model.calculateTransactionHash"]},{"name":"fun Transaction.getPow(codeHash: String, chainId: Int, isGM: Boolean = true): String","description":"com.example.lattice.model.getPow","location":"lattice/com.example.lattice.model/get-pow.html","searchKeys":["getPow","fun Transaction.getPow(codeHash: String, chainId: Int, isGM: Boolean = true): String","com.example.lattice.model.getPow"]},{"name":"fun Transaction.hash(isGM: Boolean = true, chainId: Int = 1, useProofOfWork: Boolean = false): Pair<String, ByteArray>","description":"com.example.lattice.model.hash","location":"lattice/com.example.lattice.model/hash.html","searchKeys":["hash","fun Transaction.hash(isGM: Boolean = true, chainId: Int = 1, useProofOfWork: Boolean = false): Pair<String, ByteArray>","com.example.lattice.model.hash"]},{"name":"fun Transaction.hashSeal(codeHash: String, pow: String, chainId: Int, isGM: Boolean = true, useProofOfWork: Boolean = false, isSign: Boolean = false): ByteArray","description":"com.example.lattice.model.hashSeal","location":"lattice/com.example.lattice.model/hash-seal.html","searchKeys":["hashSeal","fun Transaction.hashSeal(codeHash: String, pow: String, chainId: Int, isGM: Boolean = true, useProofOfWork: Boolean = false, isSign: Boolean = false): ByteArray","com.example.lattice.model.hashSeal"]},{"name":"fun Transaction.sign(privateKey: String, isGM: Boolean = true, chainId: Int = 1, useProofOfWork: Boolean = false): Pair<String, SignatureData>","description":"com.example.lattice.model.sign","location":"lattice/com.example.lattice.model/sign.html","searchKeys":["sign","fun Transaction.sign(privateKey: String, isGM: Boolean = true, chainId: Int = 1, useProofOfWork: Boolean = false): Pair<String, SignatureData>","com.example.lattice.model.sign"]},{"name":"fun Transaction.toSendTBlock(): SendTBlock","description":"com.example.lattice.model.toSendTBlock","location":"lattice/com.example.lattice.model/to-send-t-block.html","searchKeys":["toSendTBlock","fun Transaction.toSendTBlock(): SendTBlock","com.example.lattice.model.toSendTBlock"]},{"name":"fun TxTypeEnum.type(): String","description":"com.example.lattice.model.type","location":"lattice/com.example.lattice.model/type.html","searchKeys":["type","fun TxTypeEnum.type(): String","com.example.lattice.model.type"]},{"name":"fun TxVersionEnum.version(): Int","description":"com.example.lattice.model.version","location":"lattice/com.example.lattice.model/version.html","searchKeys":["version","fun TxVersionEnum.version(): Int","com.example.lattice.model.version"]},{"name":"fun URL.detectProtocol(): Protocol","description":"com.example.lattice.provider.detectProtocol","location":"lattice/com.example.lattice.provider/detect-protocol.html","searchKeys":["detectProtocol","fun URL.detectProtocol(): Protocol","com.example.lattice.provider.detectProtocol"]},{"name":"fun URL.newClient(): Client","description":"com.example.lattice.provider.newClient","location":"lattice/com.example.lattice.provider/new-client.html","searchKeys":["newClient","fun URL.newClient(): Client","com.example.lattice.provider.newClient"]},{"name":"fun builder(): CallContractTXBuilder","description":"com.example.lattice.CallContractTXBuilder.Companion.builder","location":"lattice/com.example.lattice/-call-contract-t-x-builder/-companion/builder.html","searchKeys":["builder","fun builder(): CallContractTXBuilder","com.example.lattice.CallContractTXBuilder.Companion.builder"]},{"name":"fun builder(): DeployContractTXBuilder","description":"com.example.lattice.DeployContractTXBuilder.Companion.builder","location":"lattice/com.example.lattice/-deploy-contract-t-x-builder/-companion/builder.html","searchKeys":["builder","fun builder(): DeployContractTXBuilder","com.example.lattice.DeployContractTXBuilder.Companion.builder"]},{"name":"fun builder(): TransferTXBuilder","description":"com.example.lattice.TransferTXBuilder.Companion.builder","location":"lattice/com.example.lattice/-transfer-t-x-builder/-companion/builder.html","searchKeys":["builder","fun builder(): TransferTXBuilder","com.example.lattice.TransferTXBuilder.Companion.builder"]},{"name":"fun compile(filename: String, proto: String): String","description":"com.example.lattice.proto.Compiler.compile","location":"lattice/com.example.lattice.proto/-compiler/compile.html","searchKeys":["compile","fun compile(filename: String, proto: String): String","com.example.lattice.proto.Compiler.compile"]},{"name":"fun defaultBackOffRetry(): RetryPolicy<Throwable>","description":"com.example.lattice.RetryStrategy.Companion.defaultBackOffRetry","location":"lattice/com.example.lattice/-retry-strategy/-companion/default-back-off-retry.html","searchKeys":["defaultBackOffRetry","fun defaultBackOffRetry(): RetryPolicy<Throwable>","com.example.lattice.RetryStrategy.Companion.defaultBackOffRetry"]},{"name":"fun defaultFixedIntervalRetry(): RetryPolicy<Throwable>","description":"com.example.lattice.RetryStrategy.Companion.defaultFixedIntervalRetry","location":"lattice/com.example.lattice/-retry-strategy/-companion/default-fixed-interval-retry.html","searchKeys":["defaultFixedIntervalRetry","fun defaultFixedIntervalRetry(): RetryPolicy<Throwable>","com.example.lattice.RetryStrategy.Companion.defaultFixedIntervalRetry"]},{"name":"fun defaultRandomIntervalRetry(): RetryPolicy<Throwable>","description":"com.example.lattice.RetryStrategy.Companion.defaultRandomIntervalRetry","location":"lattice/com.example.lattice/-retry-strategy/-companion/default-random-interval-retry.html","searchKeys":["defaultRandomIntervalRetry","fun defaultRandomIntervalRetry(): RetryPolicy<Throwable>","com.example.lattice.RetryStrategy.Companion.defaultRandomIntervalRetry"]},{"name":"fun makeFileDescriptor(stream: InputStream): Descriptors.FileDescriptor","description":"com.example.lattice.proto.makeFileDescriptor","location":"lattice/com.example.lattice.proto/make-file-descriptor.html","searchKeys":["makeFileDescriptor","fun makeFileDescriptor(stream: InputStream): Descriptors.FileDescriptor","com.example.lattice.proto.makeFileDescriptor"]},{"name":"fun marshallMessage(fileDescriptor: Descriptors.FileDescriptor, json: String): ByteArray","description":"com.example.lattice.proto.marshallMessage","location":"lattice/com.example.lattice.proto/marshall-message.html","searchKeys":["marshallMessage","fun marshallMessage(fileDescriptor: Descriptors.FileDescriptor, json: String): ByteArray","com.example.lattice.proto.marshallMessage"]},{"name":"fun post(request: BaseRequest): Response","description":"com.example.lattice.provider.post","location":"lattice/com.example.lattice.provider/post.html","searchKeys":["post","fun post(request: BaseRequest): Response","com.example.lattice.provider.post"]},{"name":"fun unmarshallMessage(fileDescriptor: Descriptors.FileDescriptor, data: ByteArray): String","description":"com.example.lattice.proto.unmarshallMessage","location":"lattice/com.example.lattice.proto/unmarshall-message.html","searchKeys":["unmarshallMessage","fun unmarshallMessage(fileDescriptor: Descriptors.FileDescriptor, data: ByteArray): String","com.example.lattice.proto.unmarshallMessage"]},{"name":"fun valueOf(value: String): Curve","description":"com.example.lattice.Curve.valueOf","location":"lattice/com.example.lattice/-curve/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Curve","com.example.lattice.Curve.valueOf"]},{"name":"fun valueOf(value: String): Protocol","description":"com.example.lattice.provider.Protocol.valueOf","location":"lattice/com.example.lattice.provider/-protocol/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Protocol","com.example.lattice.provider.Protocol.valueOf"]},{"name":"fun valueOf(value: String): Strategy","description":"com.example.lattice.Strategy.valueOf","location":"lattice/com.example.lattice/-strategy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Strategy","com.example.lattice.Strategy.valueOf"]},{"name":"fun valueOf(value: String): TxTypeEnum","description":"com.example.lattice.model.TxTypeEnum.valueOf","location":"lattice/com.example.lattice.model/-tx-type-enum/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TxTypeEnum","com.example.lattice.model.TxTypeEnum.valueOf"]},{"name":"fun valueOf(value: String): TxVersionEnum","description":"com.example.lattice.model.TxVersionEnum.valueOf","location":"lattice/com.example.lattice.model/-tx-version-enum/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TxVersionEnum","com.example.lattice.model.TxVersionEnum.valueOf"]},{"name":"fun values(): Array<Curve>","description":"com.example.lattice.Curve.values","location":"lattice/com.example.lattice/-curve/values.html","searchKeys":["values","fun values(): Array<Curve>","com.example.lattice.Curve.values"]},{"name":"fun values(): Array<Protocol>","description":"com.example.lattice.provider.Protocol.values","location":"lattice/com.example.lattice.provider/-protocol/values.html","searchKeys":["values","fun values(): Array<Protocol>","com.example.lattice.provider.Protocol.values"]},{"name":"fun values(): Array<Strategy>","description":"com.example.lattice.Strategy.values","location":"lattice/com.example.lattice/-strategy/values.html","searchKeys":["values","fun values(): Array<Strategy>","com.example.lattice.Strategy.values"]},{"name":"fun values(): Array<TxTypeEnum>","description":"com.example.lattice.model.TxTypeEnum.values","location":"lattice/com.example.lattice.model/-tx-type-enum/values.html","searchKeys":["values","fun values(): Array<TxTypeEnum>","com.example.lattice.model.TxTypeEnum.values"]},{"name":"fun values(): Array<TxVersionEnum>","description":"com.example.lattice.model.TxVersionEnum.values","location":"lattice/com.example.lattice.model/-tx-version-enum/values.html","searchKeys":["values","fun values(): Array<TxVersionEnum>","com.example.lattice.model.TxVersionEnum.values"]},{"name":"interface Client","description":"com.example.lattice.provider.Client","location":"lattice/com.example.lattice.provider/-client/index.html","searchKeys":["Client","interface Client","com.example.lattice.provider.Client"]},{"name":"interface HttpApi","description":"com.example.lattice.provider.HttpApi","location":"lattice/com.example.lattice.provider/-http-api/index.html","searchKeys":["HttpApi","interface HttpApi","com.example.lattice.provider.HttpApi"]},{"name":"interface Lattice","description":"com.example.lattice.Lattice","location":"lattice/com.example.lattice/-lattice/index.html","searchKeys":["Lattice","interface Lattice","com.example.lattice.Lattice"]},{"name":"interface TransactionBuilder<T : TransactionBuilder<T>>","description":"com.example.lattice.TransactionBuilder","location":"lattice/com.example.lattice/-transaction-builder/index.html","searchKeys":["TransactionBuilder","interface TransactionBuilder<T : TransactionBuilder<T>>","com.example.lattice.TransactionBuilder"]},{"name":"object Companion","description":"com.example.lattice.CallContractTXBuilder.Companion","location":"lattice/com.example.lattice/-call-contract-t-x-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.example.lattice.CallContractTXBuilder.Companion"]},{"name":"object Companion","description":"com.example.lattice.DeployContractTXBuilder.Companion","location":"lattice/com.example.lattice/-deploy-contract-t-x-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.example.lattice.DeployContractTXBuilder.Companion"]},{"name":"object Companion","description":"com.example.lattice.RetryStrategy.Companion","location":"lattice/com.example.lattice/-retry-strategy/-companion/index.html","searchKeys":["Companion","object Companion","com.example.lattice.RetryStrategy.Companion"]},{"name":"object Companion","description":"com.example.lattice.TransferTXBuilder.Companion","location":"lattice/com.example.lattice/-transfer-t-x-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.example.lattice.TransferTXBuilder.Companion"]},{"name":"object Compiler","description":"com.example.lattice.proto.Compiler","location":"lattice/com.example.lattice.proto/-compiler/index.html","searchKeys":["Compiler","object Compiler","com.example.lattice.proto.Compiler"]},{"name":"object HttpClientFactory","description":"com.example.lattice.provider.HttpClientFactory","location":"lattice/com.example.lattice.provider/-http-client-factory/index.html","searchKeys":["HttpClientFactory","object HttpClientFactory","com.example.lattice.provider.HttpClientFactory"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.lattice.model.JsonRpcPayload.equals","location":"lattice/com.example.lattice.model/-json-rpc-payload/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.lattice.model.JsonRpcPayload.equals"]},{"name":"open override fun build(): Transaction","description":"com.example.lattice.BaseTransactionBuilder.build","location":"lattice/com.example.lattice/-base-transaction-builder/build.html","searchKeys":["build","open override fun build(): Transaction","com.example.lattice.BaseTransactionBuilder.build"]},{"name":"open override fun callContract(contractAddress: String, data: String, payload: String, amount: Long, joule: Long): String","description":"com.example.lattice.LatticeImpl.callContract","location":"lattice/com.example.lattice/-lattice-impl/call-contract.html","searchKeys":["callContract","open override fun callContract(contractAddress: String, data: String, payload: String, amount: Long, joule: Long): String","com.example.lattice.LatticeImpl.callContract"]},{"name":"open override fun callContractWaitReceipt(contractAddress: String, data: String, payload: String, amount: Long, joule: Long, retryPolicy: RetryPolicy<Throwable>): Receipt","description":"com.example.lattice.LatticeImpl.callContractWaitReceipt","location":"lattice/com.example.lattice/-lattice-impl/call-contract-wait-receipt.html","searchKeys":["callContractWaitReceipt","open override fun callContractWaitReceipt(contractAddress: String, data: String, payload: String, amount: Long, joule: Long, retryPolicy: RetryPolicy<Throwable>): Receipt","com.example.lattice.LatticeImpl.callContractWaitReceipt"]},{"name":"open override fun deployContract(data: String, payload: String, amount: Long, joule: Long): String","description":"com.example.lattice.LatticeImpl.deployContract","location":"lattice/com.example.lattice/-lattice-impl/deploy-contract.html","searchKeys":["deployContract","open override fun deployContract(data: String, payload: String, amount: Long, joule: Long): String","com.example.lattice.LatticeImpl.deployContract"]},{"name":"open override fun deployContractWaitReceipt(data: String, payload: String, amount: Long, joule: Long, retryPolicy: RetryPolicy<Throwable>): Receipt","description":"com.example.lattice.LatticeImpl.deployContractWaitReceipt","location":"lattice/com.example.lattice/-lattice-impl/deploy-contract-wait-receipt.html","searchKeys":["deployContractWaitReceipt","open override fun deployContractWaitReceipt(data: String, payload: String, amount: Long, joule: Long, retryPolicy: RetryPolicy<Throwable>): Receipt","com.example.lattice.LatticeImpl.deployContractWaitReceipt"]},{"name":"open override fun getBalanceWithPending(address: Address): Balance","description":"com.example.lattice.provider.HttpApiImpl.getBalanceWithPending","location":"lattice/com.example.lattice.provider/-http-api-impl/get-balance-with-pending.html","searchKeys":["getBalanceWithPending","open override fun getBalanceWithPending(address: Address): Balance","com.example.lattice.provider.HttpApiImpl.getBalanceWithPending"]},{"name":"open override fun getGenesis(): TBlock","description":"com.example.lattice.provider.HttpApiImpl.getGenesis","location":"lattice/com.example.lattice.provider/-http-api-impl/get-genesis.html","searchKeys":["getGenesis","open override fun getGenesis(): TBlock","com.example.lattice.provider.HttpApiImpl.getGenesis"]},{"name":"open override fun getLatestBlock(address: Address): CurrentTDBlock","description":"com.example.lattice.provider.HttpApiImpl.getLatestBlock","location":"lattice/com.example.lattice.provider/-http-api-impl/get-latest-block.html","searchKeys":["getLatestBlock","open override fun getLatestBlock(address: Address): CurrentTDBlock","com.example.lattice.provider.HttpApiImpl.getLatestBlock"]},{"name":"open override fun getLatestTDBlockWithCatch(address: Address): CurrentTDBlock","description":"com.example.lattice.provider.HttpApiImpl.getLatestTDBlockWithCatch","location":"lattice/com.example.lattice.provider/-http-api-impl/get-latest-t-d-block-with-catch.html","searchKeys":["getLatestTDBlockWithCatch","open override fun getLatestTDBlockWithCatch(address: Address): CurrentTDBlock","com.example.lattice.provider.HttpApiImpl.getLatestTDBlockWithCatch"]},{"name":"open override fun getReceipt(hash: String): Receipt","description":"com.example.lattice.provider.HttpApiImpl.getReceipt","location":"lattice/com.example.lattice.provider/-http-api-impl/get-receipt.html","searchKeys":["getReceipt","open override fun getReceipt(hash: String): Receipt","com.example.lattice.provider.HttpApiImpl.getReceipt"]},{"name":"open override fun hashCode(): Int","description":"com.example.lattice.model.JsonRpcPayload.hashCode","location":"lattice/com.example.lattice.model/-json-rpc-payload/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.lattice.model.JsonRpcPayload.hashCode"]},{"name":"open override fun preCallContract(contractAddress: String, data: String, payload: String, amount: Long, joule: Long): Receipt","description":"com.example.lattice.LatticeImpl.preCallContract","location":"lattice/com.example.lattice/-lattice-impl/pre-call-contract.html","searchKeys":["preCallContract","open override fun preCallContract(contractAddress: String, data: String, payload: String, amount: Long, joule: Long): Receipt","com.example.lattice.LatticeImpl.preCallContract"]},{"name":"open override fun preCallContract(unsignedTx: Transaction): Receipt","description":"com.example.lattice.provider.HttpApiImpl.preCallContract","location":"lattice/com.example.lattice.provider/-http-api-impl/pre-call-contract.html","searchKeys":["preCallContract","open override fun preCallContract(unsignedTx: Transaction): Receipt","com.example.lattice.provider.HttpApiImpl.preCallContract"]},{"name":"open override fun refreshTimestamp(): T","description":"com.example.lattice.BaseTransactionBuilder.refreshTimestamp","location":"lattice/com.example.lattice/-base-transaction-builder/refresh-timestamp.html","searchKeys":["refreshTimestamp","open override fun refreshTimestamp(): T","com.example.lattice.BaseTransactionBuilder.refreshTimestamp"]},{"name":"open override fun refreshToken(newToken: String)","description":"com.example.lattice.provider.HttpApiImpl.refreshToken","location":"lattice/com.example.lattice.provider/-http-api-impl/refresh-token.html","searchKeys":["refreshToken","open override fun refreshToken(newToken: String)","com.example.lattice.provider.HttpApiImpl.refreshToken"]},{"name":"open override fun send(payload: JsonRpcPayload, headers: Map<String, String>): String","description":"com.example.lattice.provider.HTTPClient.send","location":"lattice/com.example.lattice.provider/-h-t-t-p-client/send.html","searchKeys":["send","open override fun send(payload: JsonRpcPayload, headers: Map<String, String>): String","com.example.lattice.provider.HTTPClient.send"]},{"name":"open override fun send(payload: JsonRpcPayload, headers: Map<String, String>): String","description":"com.example.lattice.provider.WSClient.send","location":"lattice/com.example.lattice.provider/-w-s-client/send.html","searchKeys":["send","open override fun send(payload: JsonRpcPayload, headers: Map<String, String>): String","com.example.lattice.provider.WSClient.send"]},{"name":"open override fun sendRawTBlock(signedTx: Transaction): String","description":"com.example.lattice.provider.HttpApiImpl.sendRawTBlock","location":"lattice/com.example.lattice.provider/-http-api-impl/send-raw-t-block.html","searchKeys":["sendRawTBlock","open override fun sendRawTBlock(signedTx: Transaction): String","com.example.lattice.provider.HttpApiImpl.sendRawTBlock"]},{"name":"open override fun setAmount(amount: Long): T","description":"com.example.lattice.BaseTransactionBuilder.setAmount","location":"lattice/com.example.lattice/-base-transaction-builder/set-amount.html","searchKeys":["setAmount","open override fun setAmount(amount: Long): T","com.example.lattice.BaseTransactionBuilder.setAmount"]},{"name":"open override fun setBlock(latest: CurrentTDBlock): T","description":"com.example.lattice.BaseTransactionBuilder.setBlock","location":"lattice/com.example.lattice/-base-transaction-builder/set-block.html","searchKeys":["setBlock","open override fun setBlock(latest: CurrentTDBlock): T","com.example.lattice.BaseTransactionBuilder.setBlock"]},{"name":"open override fun setCode(data: String): T","description":"com.example.lattice.BaseTransactionBuilder.setCode","location":"lattice/com.example.lattice/-base-transaction-builder/set-code.html","searchKeys":["setCode","open override fun setCode(data: String): T","com.example.lattice.BaseTransactionBuilder.setCode"]},{"name":"open override fun setJoule(joule: Long): T","description":"com.example.lattice.BaseTransactionBuilder.setJoule","location":"lattice/com.example.lattice/-base-transaction-builder/set-joule.html","searchKeys":["setJoule","open override fun setJoule(joule: Long): T","com.example.lattice.BaseTransactionBuilder.setJoule"]},{"name":"open override fun setLinker(linker: Address): T","description":"com.example.lattice.BaseTransactionBuilder.setLinker","location":"lattice/com.example.lattice/-base-transaction-builder/set-linker.html","searchKeys":["setLinker","open override fun setLinker(linker: Address): T","com.example.lattice.BaseTransactionBuilder.setLinker"]},{"name":"open override fun setOwner(owner: Address): T","description":"com.example.lattice.BaseTransactionBuilder.setOwner","location":"lattice/com.example.lattice/-base-transaction-builder/set-owner.html","searchKeys":["setOwner","open override fun setOwner(owner: Address): T","com.example.lattice.BaseTransactionBuilder.setOwner"]},{"name":"open override fun setPayload(payload: String): T","description":"com.example.lattice.BaseTransactionBuilder.setPayload","location":"lattice/com.example.lattice/-base-transaction-builder/set-payload.html","searchKeys":["setPayload","open override fun setPayload(payload: String): T","com.example.lattice.BaseTransactionBuilder.setPayload"]},{"name":"open override fun transfer(linker: String, payload: String, amount: Long, joule: Long): String","description":"com.example.lattice.LatticeImpl.transfer","location":"lattice/com.example.lattice/-lattice-impl/transfer.html","searchKeys":["transfer","open override fun transfer(linker: String, payload: String, amount: Long, joule: Long): String","com.example.lattice.LatticeImpl.transfer"]},{"name":"open override fun transferWaitReceipt(linker: String, payload: String, amount: Long, joule: Long, retryPolicy: RetryPolicy<Throwable>): Receipt","description":"com.example.lattice.LatticeImpl.transferWaitReceipt","location":"lattice/com.example.lattice/-lattice-impl/transfer-wait-receipt.html","searchKeys":["transferWaitReceipt","open override fun transferWaitReceipt(linker: String, payload: String, amount: Long, joule: Long, retryPolicy: RetryPolicy<Throwable>): Receipt","com.example.lattice.LatticeImpl.transferWaitReceipt"]},{"name":"typealias JsonRpcId = Int","description":"com.example.lattice.model.JsonRpcId","location":"lattice/com.example.lattice.model/-json-rpc-id/index.html","searchKeys":["JsonRpcId","typealias JsonRpcId = Int","com.example.lattice.model.JsonRpcId"]},{"name":"typealias JsonRpcIdentifier = String","description":"com.example.lattice.model.JsonRpcIdentifier","location":"lattice/com.example.lattice.model/-json-rpc-identifier/index.html","searchKeys":["JsonRpcIdentifier","typealias JsonRpcIdentifier = String","com.example.lattice.model.JsonRpcIdentifier"]},{"name":"val accountAddress: String","description":"com.example.lattice.CredentialConfig.accountAddress","location":"lattice/com.example.lattice/-credential-config/account-address.html","searchKeys":["accountAddress","val accountAddress: String","com.example.lattice.CredentialConfig.accountAddress"]},{"name":"val balance: String","description":"com.example.lattice.model.Balance.balance","location":"lattice/com.example.lattice.model/-balance/balance.html","searchKeys":["balance","val balance: String","com.example.lattice.model.Balance.balance"]},{"name":"val body: Map<String, Any>","description":"com.example.lattice.model.BaseRequest.body","location":"lattice/com.example.lattice.model/-base-request/body.html","searchKeys":["body","val body: Map<String, Any>","com.example.lattice.model.BaseRequest.body"]},{"name":"val chainId: Int","description":"com.example.lattice.ChainConfig.chainId","location":"lattice/com.example.lattice/-chain-config/chain-id.html","searchKeys":["chainId","val chainId: Int","com.example.lattice.ChainConfig.chainId"]},{"name":"val chainId: Int","description":"com.example.lattice.provider.HttpApiParams.chainId","location":"lattice/com.example.lattice.provider/-http-api-params/chain-id.html","searchKeys":["chainId","val chainId: Int","com.example.lattice.provider.HttpApiParams.chainId"]},{"name":"val client: OkHttpClient","description":"com.example.lattice.provider.HttpClientFactory.client","location":"lattice/com.example.lattice.provider/-http-client-factory/client.html","searchKeys":["client","val client: OkHttpClient","com.example.lattice.provider.HttpClientFactory.client"]},{"name":"val code: Int","description":"com.example.lattice.model.JsonRpcError.code","location":"lattice/com.example.lattice.model/-json-rpc-error/code.html","searchKeys":["code","val code: Int","com.example.lattice.model.JsonRpcError.code"]},{"name":"val codeHash: String? = null","description":"com.example.lattice.model.Transaction.codeHash","location":"lattice/com.example.lattice.model/-transaction/code-hash.html","searchKeys":["codeHash","val codeHash: String? = null","com.example.lattice.model.Transaction.codeHash"]},{"name":"val curve: Curve","description":"com.example.lattice.ChainConfig.curve","location":"lattice/com.example.lattice/-chain-config/curve.html","searchKeys":["curve","val curve: Curve","com.example.lattice.ChainConfig.curve"]},{"name":"val entries: EnumEntries<Curve>","description":"com.example.lattice.Curve.entries","location":"lattice/com.example.lattice/-curve/entries.html","searchKeys":["entries","val entries: EnumEntries<Curve>","com.example.lattice.Curve.entries"]},{"name":"val entries: EnumEntries<Protocol>","description":"com.example.lattice.provider.Protocol.entries","location":"lattice/com.example.lattice.provider/-protocol/entries.html","searchKeys":["entries","val entries: EnumEntries<Protocol>","com.example.lattice.provider.Protocol.entries"]},{"name":"val entries: EnumEntries<Strategy>","description":"com.example.lattice.Strategy.entries","location":"lattice/com.example.lattice/-strategy/entries.html","searchKeys":["entries","val entries: EnumEntries<Strategy>","com.example.lattice.Strategy.entries"]},{"name":"val entries: EnumEntries<TxTypeEnum>","description":"com.example.lattice.model.TxTypeEnum.entries","location":"lattice/com.example.lattice.model/-tx-type-enum/entries.html","searchKeys":["entries","val entries: EnumEntries<TxTypeEnum>","com.example.lattice.model.TxTypeEnum.entries"]},{"name":"val entries: EnumEntries<TxVersionEnum>","description":"com.example.lattice.model.TxVersionEnum.entries","location":"lattice/com.example.lattice.model/-tx-version-enum/entries.html","searchKeys":["entries","val entries: EnumEntries<TxVersionEnum>","com.example.lattice.model.TxVersionEnum.entries"]},{"name":"val error: JsonRpcError?","description":"com.example.lattice.model.JsonRpcResponse.error","location":"lattice/com.example.lattice.model/-json-rpc-response/error.html","searchKeys":["error","val error: JsonRpcError?","com.example.lattice.model.JsonRpcResponse.error"]},{"name":"val headers: Map<String, String>? = null","description":"com.example.lattice.model.BaseRequest.headers","location":"lattice/com.example.lattice.model/-base-request/headers.html","searchKeys":["headers","val headers: Map<String, String>? = null","com.example.lattice.model.BaseRequest.headers"]},{"name":"val hex: String","description":"com.example.lattice.model.TxTypeEnum.hex","location":"lattice/com.example.lattice.model/-tx-type-enum/hex.html","searchKeys":["hex","val hex: String","com.example.lattice.model.TxTypeEnum.hex"]},{"name":"val id: JsonRpcId","description":"com.example.lattice.model.JsonRpcResponse.id","location":"lattice/com.example.lattice.model/-json-rpc-response/id.html","searchKeys":["id","val id: JsonRpcId","com.example.lattice.model.JsonRpcResponse.id"]},{"name":"val id: JsonRpcId = 1","description":"com.example.lattice.model.JsonRpcPayload.id","location":"lattice/com.example.lattice.model/-json-rpc-payload/id.html","searchKeys":["id","val id: JsonRpcId = 1","com.example.lattice.model.JsonRpcPayload.id"]},{"name":"val interval: Int","description":"com.example.lattice.Options.interval","location":"lattice/com.example.lattice/-options/interval.html","searchKeys":["interval","val interval: Int","com.example.lattice.Options.interval"]},{"name":"val jsonRpc: JsonRpcIdentifier","description":"com.example.lattice.model.JsonRpcPayload.jsonRpc","location":"lattice/com.example.lattice.model/-json-rpc-payload/json-rpc.html","searchKeys":["jsonRpc","val jsonRpc: JsonRpcIdentifier","com.example.lattice.model.JsonRpcPayload.jsonRpc"]},{"name":"val jsonRpc: JsonRpcIdentifier","description":"com.example.lattice.model.JsonRpcResponse.jsonRpc","location":"lattice/com.example.lattice.model/-json-rpc-response/json-rpc.html","searchKeys":["jsonRpc","val jsonRpc: JsonRpcIdentifier","com.example.lattice.model.JsonRpcResponse.jsonRpc"]},{"name":"val message: String","description":"com.example.lattice.model.JsonRpcError.message","location":"lattice/com.example.lattice.model/-json-rpc-error/message.html","searchKeys":["message","val message: String","com.example.lattice.model.JsonRpcError.message"]},{"name":"val method: String","description":"com.example.lattice.model.JsonRpcPayload.method","location":"lattice/com.example.lattice.model/-json-rpc-payload/method.html","searchKeys":["method","val method: String","com.example.lattice.model.JsonRpcPayload.method"]},{"name":"val params: Array<Any>","description":"com.example.lattice.model.JsonRpcPayload.params","location":"lattice/com.example.lattice.model/-json-rpc-payload/params.html","searchKeys":["params","val params: Array<Any>","com.example.lattice.model.JsonRpcPayload.params"]},{"name":"val passphrase: String? = null","description":"com.example.lattice.CredentialConfig.passphrase","location":"lattice/com.example.lattice/-credential-config/passphrase.html","searchKeys":["passphrase","val passphrase: String? = null","com.example.lattice.CredentialConfig.passphrase"]},{"name":"val pending: String","description":"com.example.lattice.model.Balance.pending","location":"lattice/com.example.lattice.model/-balance/pending.html","searchKeys":["pending","val pending: String","com.example.lattice.model.Balance.pending"]},{"name":"val privateKey: String","description":"com.example.lattice.CredentialConfig.privateKey","location":"lattice/com.example.lattice/-credential-config/private-key.html","searchKeys":["privateKey","val privateKey: String","com.example.lattice.CredentialConfig.privateKey"]},{"name":"val result: T?","description":"com.example.lattice.model.JsonRpcResponse.result","location":"lattice/com.example.lattice.model/-json-rpc-response/result.html","searchKeys":["result","val result: T?","com.example.lattice.model.JsonRpcResponse.result"]},{"name":"val tokenLess: Boolean = true","description":"com.example.lattice.ChainConfig.tokenLess","location":"lattice/com.example.lattice/-chain-config/token-less.html","searchKeys":["tokenLess","val tokenLess: Boolean = true","com.example.lattice.ChainConfig.tokenLess"]},{"name":"val total: String","description":"com.example.lattice.model.Balance.total","location":"lattice/com.example.lattice.model/-balance/total.html","searchKeys":["total","val total: String","com.example.lattice.model.Balance.total"]},{"name":"val type: TxTypeEnum","description":"com.example.lattice.model.Transaction.type","location":"lattice/com.example.lattice.model/-transaction/type.html","searchKeys":["type","val type: TxTypeEnum","com.example.lattice.model.Transaction.type"]},{"name":"val url: String","description":"com.example.lattice.ConnectingNodeConfig.url","location":"lattice/com.example.lattice/-connecting-node-config/url.html","searchKeys":["url","val url: String","com.example.lattice.ConnectingNodeConfig.url"]},{"name":"val url: URL","description":"com.example.lattice.model.BaseRequest.url","location":"lattice/com.example.lattice.model/-base-request/url.html","searchKeys":["url","val url: URL","com.example.lattice.model.BaseRequest.url"]},{"name":"val url: URL","description":"com.example.lattice.provider.HttpApiParams.url","location":"lattice/com.example.lattice.provider/-http-api-params/url.html","searchKeys":["url","val url: URL","com.example.lattice.provider.HttpApiParams.url"]},{"name":"val value: String","description":"com.example.lattice.provider.URL.value","location":"lattice/com.example.lattice.provider/-u-r-l/value.html","searchKeys":["value","val value: String","com.example.lattice.provider.URL.value"]},{"name":"var amount: Long","description":"com.example.lattice.model.Transaction.amount","location":"lattice/com.example.lattice.model/-transaction/amount.html","searchKeys":["amount","var amount: Long","com.example.lattice.model.Transaction.amount"]},{"name":"var code: String?","description":"com.example.lattice.model.Transaction.code","location":"lattice/com.example.lattice.model/-transaction/code.html","searchKeys":["code","var code: String?","com.example.lattice.model.Transaction.code"]},{"name":"var daemonHash: String","description":"com.example.lattice.model.Transaction.daemonHash","location":"lattice/com.example.lattice.model/-transaction/daemon-hash.html","searchKeys":["daemonHash","var daemonHash: String","com.example.lattice.model.Transaction.daemonHash"]},{"name":"var difficulty: Int?","description":"com.example.lattice.model.Transaction.difficulty","location":"lattice/com.example.lattice.model/-transaction/difficulty.html","searchKeys":["difficulty","var difficulty: Int?","com.example.lattice.model.Transaction.difficulty"]},{"name":"var hub: Array<String>","description":"com.example.lattice.model.Transaction.hub","location":"lattice/com.example.lattice.model/-transaction/hub.html","searchKeys":["hub","var hub: Array<String>","com.example.lattice.model.Transaction.hub"]},{"name":"var income: Long?","description":"com.example.lattice.model.Transaction.income","location":"lattice/com.example.lattice.model/-transaction/income.html","searchKeys":["income","var income: Long?","com.example.lattice.model.Transaction.income"]},{"name":"var joule: Long","description":"com.example.lattice.model.Transaction.joule","location":"lattice/com.example.lattice.model/-transaction/joule.html","searchKeys":["joule","var joule: Long","com.example.lattice.model.Transaction.joule"]},{"name":"var linker: Address?","description":"com.example.lattice.model.Transaction.linker","location":"lattice/com.example.lattice.model/-transaction/linker.html","searchKeys":["linker","var linker: Address?","com.example.lattice.model.Transaction.linker"]},{"name":"var logger: Logger","description":"com.example.lattice.logger","location":"lattice/com.example.lattice/logger.html","searchKeys":["logger","var logger: Logger","com.example.lattice.logger"]},{"name":"var number: Long","description":"com.example.lattice.model.Transaction.number","location":"lattice/com.example.lattice.model/-transaction/number.html","searchKeys":["number","var number: Long","com.example.lattice.model.Transaction.number"]},{"name":"var owner: Address","description":"com.example.lattice.model.Transaction.owner","location":"lattice/com.example.lattice.model/-transaction/owner.html","searchKeys":["owner","var owner: Address","com.example.lattice.model.Transaction.owner"]},{"name":"var parentHash: String","description":"com.example.lattice.model.Transaction.parentHash","location":"lattice/com.example.lattice.model/-transaction/parent-hash.html","searchKeys":["parentHash","var parentHash: String","com.example.lattice.model.Transaction.parentHash"]},{"name":"var payload: String?","description":"com.example.lattice.model.Transaction.payload","location":"lattice/com.example.lattice.model/-transaction/payload.html","searchKeys":["payload","var payload: String?","com.example.lattice.model.Transaction.payload"]},{"name":"var proofOfWork: String?","description":"com.example.lattice.model.Transaction.proofOfWork","location":"lattice/com.example.lattice.model/-transaction/proof-of-work.html","searchKeys":["proofOfWork","var proofOfWork: String?","com.example.lattice.model.Transaction.proofOfWork"]},{"name":"var sign: String?","description":"com.example.lattice.model.Transaction.sign","location":"lattice/com.example.lattice.model/-transaction/sign.html","searchKeys":["sign","var sign: String?","com.example.lattice.model.Transaction.sign"]},{"name":"var timestamp: Long","description":"com.example.lattice.model.Transaction.timestamp","location":"lattice/com.example.lattice.model/-transaction/timestamp.html","searchKeys":["timestamp","var timestamp: Long","com.example.lattice.model.Transaction.timestamp"]},{"name":"var token: String?","description":"com.example.lattice.provider.HttpApiParams.token","location":"lattice/com.example.lattice.provider/-http-api-params/token.html","searchKeys":["token","var token: String?","com.example.lattice.provider.HttpApiParams.token"]},{"name":"var version: Int","description":"com.example.lattice.model.Transaction.version","location":"lattice/com.example.lattice.model/-transaction/version.html","searchKeys":["version","var version: Int","com.example.lattice.model.Transaction.version"]},{"name":"class IllegalRLPException(msg: String) : IllegalArgumentException","description":"com.example.rlp.IllegalRLPException","location":"rlp/com.example.rlp/-illegal-r-l-p-exception/index.html","searchKeys":["IllegalRLPException","class IllegalRLPException(msg: String) : IllegalArgumentException","com.example.rlp.IllegalRLPException"]},{"name":"constructor(bytes: ByteArray)","description":"com.example.rlp.RLPElement.RLPElement","location":"rlp/com.example.rlp/-r-l-p-element/-r-l-p-element.html","searchKeys":["RLPElement","constructor(bytes: ByteArray)","com.example.rlp.RLPElement.RLPElement"]},{"name":"constructor(element: List<RLPType>)","description":"com.example.rlp.RLPList.RLPList","location":"rlp/com.example.rlp/-r-l-p-list/-r-l-p-list.html","searchKeys":["RLPList","constructor(element: List<RLPType>)","com.example.rlp.RLPList.RLPList"]},{"name":"constructor(msg: String)","description":"com.example.rlp.IllegalRLPException.IllegalRLPException","location":"rlp/com.example.rlp/-illegal-r-l-p-exception/-illegal-r-l-p-exception.html","searchKeys":["IllegalRLPException","constructor(msg: String)","com.example.rlp.IllegalRLPException.IllegalRLPException"]},{"name":"data class RLPElement(val bytes: ByteArray) : RLPType","description":"com.example.rlp.RLPElement","location":"rlp/com.example.rlp/-r-l-p-element/index.html","searchKeys":["RLPElement","data class RLPElement(val bytes: ByteArray) : RLPType","com.example.rlp.RLPElement"]},{"name":"data class RLPList(val element: List<RLPType>) : RLPType","description":"com.example.rlp.RLPList","location":"rlp/com.example.rlp/-r-l-p-list/index.html","searchKeys":["RLPList","data class RLPList(val element: List<RLPType>) : RLPType","com.example.rlp.RLPList"]},{"name":"fun Array<*>.toRLP(): RLPList","description":"com.example.rlp.toRLP","location":"rlp/com.example.rlp/to-r-l-p.html","searchKeys":["toRLP","fun Array<*>.toRLP(): RLPList","com.example.rlp.toRLP"]},{"name":"fun BigInteger.toRLP(): RLPElement","description":"com.example.rlp.toRLP","location":"rlp/com.example.rlp/to-r-l-p.html","searchKeys":["toRLP","fun BigInteger.toRLP(): RLPElement","com.example.rlp.toRLP"]},{"name":"fun Byte.toRLP(): RLPElement","description":"com.example.rlp.toRLP","location":"rlp/com.example.rlp/to-r-l-p.html","searchKeys":["toRLP","fun Byte.toRLP(): RLPElement","com.example.rlp.toRLP"]},{"name":"fun ByteArray.decodeRLP(): RLPType","description":"com.example.rlp.decodeRLP","location":"rlp/com.example.rlp/decode-r-l-p.html","searchKeys":["decodeRLP","fun ByteArray.decodeRLP(): RLPType","com.example.rlp.decodeRLP"]},{"name":"fun ByteArray.toRLP(): RLPElement","description":"com.example.rlp.toRLP","location":"rlp/com.example.rlp/to-r-l-p.html","searchKeys":["toRLP","fun ByteArray.toRLP(): RLPElement","com.example.rlp.toRLP"]},{"name":"fun Int.toRLP(): RLPElement","description":"com.example.rlp.toRLP","location":"rlp/com.example.rlp/to-r-l-p.html","searchKeys":["toRLP","fun Int.toRLP(): RLPElement","com.example.rlp.toRLP"]},{"name":"fun RLPElement.toByteFromRLP(): Byte","description":"com.example.rlp.toByteFromRLP","location":"rlp/com.example.rlp/to-byte-from-r-l-p.html","searchKeys":["toByteFromRLP","fun RLPElement.toByteFromRLP(): Byte","com.example.rlp.toByteFromRLP"]},{"name":"fun RLPElement.toIntFromRLP(): Int","description":"com.example.rlp.toIntFromRLP","location":"rlp/com.example.rlp/to-int-from-r-l-p.html","searchKeys":["toIntFromRLP","fun RLPElement.toIntFromRLP(): Int","com.example.rlp.toIntFromRLP"]},{"name":"fun RLPElement.toStringFromRLP(): String","description":"com.example.rlp.toStringFromRLP","location":"rlp/com.example.rlp/to-string-from-r-l-p.html","searchKeys":["toStringFromRLP","fun RLPElement.toStringFromRLP(): String","com.example.rlp.toStringFromRLP"]},{"name":"fun RLPElement.toUnsignedBigIntegerFromRLP(): BigInteger","description":"com.example.rlp.toUnsignedBigIntegerFromRLP","location":"rlp/com.example.rlp/to-unsigned-big-integer-from-r-l-p.html","searchKeys":["toUnsignedBigIntegerFromRLP","fun RLPElement.toUnsignedBigIntegerFromRLP(): BigInteger","com.example.rlp.toUnsignedBigIntegerFromRLP"]},{"name":"fun RLPType.encode(): ByteArray","description":"com.example.rlp.encode","location":"rlp/com.example.rlp/encode.html","searchKeys":["encode","fun RLPType.encode(): ByteArray","com.example.rlp.encode"]},{"name":"fun String.toRLP(): RLPElement","description":"com.example.rlp.toRLP","location":"rlp/com.example.rlp/to-r-l-p.html","searchKeys":["toRLP","fun String.toRLP(): RLPElement","com.example.rlp.toRLP"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.rlp.RLPElement.equals","location":"rlp/com.example.rlp/-r-l-p-element/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.rlp.RLPElement.equals"]},{"name":"open override fun hashCode(): Int","description":"com.example.rlp.RLPElement.hashCode","location":"rlp/com.example.rlp/-r-l-p-element/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.rlp.RLPElement.hashCode"]},{"name":"sealed class RLPType","description":"com.example.rlp.RLPType","location":"rlp/com.example.rlp/-r-l-p-type/index.html","searchKeys":["RLPType","sealed class RLPType","com.example.rlp.RLPType"]},{"name":"val bytes: ByteArray","description":"com.example.rlp.RLPElement.bytes","location":"rlp/com.example.rlp/-r-l-p-element/bytes.html","searchKeys":["bytes","val bytes: ByteArray","com.example.rlp.RLPElement.bytes"]},{"name":"val element: List<RLPType>","description":"com.example.rlp.RLPList.element","location":"rlp/com.example.rlp/-r-l-p-list/element.html","searchKeys":["element","val element: List<RLPType>","com.example.rlp.RLPList.element"]},{"name":"ADDRESS","description":"com.example.abi.model.Types.ADDRESS","location":"abi/com.example.abi.model/-types/-a-d-d-r-e-s-s/index.html","searchKeys":["ADDRESS","ADDRESS","com.example.abi.model.Types.ADDRESS"]},{"name":"BOOL","description":"com.example.abi.model.Types.BOOL","location":"abi/com.example.abi.model/-types/-b-o-o-l/index.html","searchKeys":["BOOL","BOOL","com.example.abi.model.Types.BOOL"]},{"name":"BYTE","description":"com.example.abi.model.Types.BYTE","location":"abi/com.example.abi.model/-types/-b-y-t-e/index.html","searchKeys":["BYTE","BYTE","com.example.abi.model.Types.BYTE"]},{"name":"BYTES1","description":"com.example.abi.model.Types.BYTES1","location":"abi/com.example.abi.model/-types/-b-y-t-e-s1/index.html","searchKeys":["BYTES1","BYTES1","com.example.abi.model.Types.BYTES1"]},{"name":"BYTES10","description":"com.example.abi.model.Types.BYTES10","location":"abi/com.example.abi.model/-types/-b-y-t-e-s10/index.html","searchKeys":["BYTES10","BYTES10","com.example.abi.model.Types.BYTES10"]},{"name":"BYTES11","description":"com.example.abi.model.Types.BYTES11","location":"abi/com.example.abi.model/-types/-b-y-t-e-s11/index.html","searchKeys":["BYTES11","BYTES11","com.example.abi.model.Types.BYTES11"]},{"name":"BYTES12","description":"com.example.abi.model.Types.BYTES12","location":"abi/com.example.abi.model/-types/-b-y-t-e-s12/index.html","searchKeys":["BYTES12","BYTES12","com.example.abi.model.Types.BYTES12"]},{"name":"BYTES13","description":"com.example.abi.model.Types.BYTES13","location":"abi/com.example.abi.model/-types/-b-y-t-e-s13/index.html","searchKeys":["BYTES13","BYTES13","com.example.abi.model.Types.BYTES13"]},{"name":"BYTES14","description":"com.example.abi.model.Types.BYTES14","location":"abi/com.example.abi.model/-types/-b-y-t-e-s14/index.html","searchKeys":["BYTES14","BYTES14","com.example.abi.model.Types.BYTES14"]},{"name":"BYTES15","description":"com.example.abi.model.Types.BYTES15","location":"abi/com.example.abi.model/-types/-b-y-t-e-s15/index.html","searchKeys":["BYTES15","BYTES15","com.example.abi.model.Types.BYTES15"]},{"name":"BYTES16","description":"com.example.abi.model.Types.BYTES16","location":"abi/com.example.abi.model/-types/-b-y-t-e-s16/index.html","searchKeys":["BYTES16","BYTES16","com.example.abi.model.Types.BYTES16"]},{"name":"BYTES17","description":"com.example.abi.model.Types.BYTES17","location":"abi/com.example.abi.model/-types/-b-y-t-e-s17/index.html","searchKeys":["BYTES17","BYTES17","com.example.abi.model.Types.BYTES17"]},{"name":"BYTES18","description":"com.example.abi.model.Types.BYTES18","location":"abi/com.example.abi.model/-types/-b-y-t-e-s18/index.html","searchKeys":["BYTES18","BYTES18","com.example.abi.model.Types.BYTES18"]},{"name":"BYTES19","description":"com.example.abi.model.Types.BYTES19","location":"abi/com.example.abi.model/-types/-b-y-t-e-s19/index.html","searchKeys":["BYTES19","BYTES19","com.example.abi.model.Types.BYTES19"]},{"name":"BYTES2","description":"com.example.abi.model.Types.BYTES2","location":"abi/com.example.abi.model/-types/-b-y-t-e-s2/index.html","searchKeys":["BYTES2","BYTES2","com.example.abi.model.Types.BYTES2"]},{"name":"BYTES20","description":"com.example.abi.model.Types.BYTES20","location":"abi/com.example.abi.model/-types/-b-y-t-e-s20/index.html","searchKeys":["BYTES20","BYTES20","com.example.abi.model.Types.BYTES20"]},{"name":"BYTES21","description":"com.example.abi.model.Types.BYTES21","location":"abi/com.example.abi.model/-types/-b-y-t-e-s21/index.html","searchKeys":["BYTES21","BYTES21","com.example.abi.model.Types.BYTES21"]},{"name":"BYTES22","description":"com.example.abi.model.Types.BYTES22","location":"abi/com.example.abi.model/-types/-b-y-t-e-s22/index.html","searchKeys":["BYTES22","BYTES22","com.example.abi.model.Types.BYTES22"]},{"name":"BYTES23","description":"com.example.abi.model.Types.BYTES23","location":"abi/com.example.abi.model/-types/-b-y-t-e-s23/index.html","searchKeys":["BYTES23","BYTES23","com.example.abi.model.Types.BYTES23"]},{"name":"BYTES24","description":"com.example.abi.model.Types.BYTES24","location":"abi/com.example.abi.model/-types/-b-y-t-e-s24/index.html","searchKeys":["BYTES24","BYTES24","com.example.abi.model.Types.BYTES24"]},{"name":"BYTES25","description":"com.example.abi.model.Types.BYTES25","location":"abi/com.example.abi.model/-types/-b-y-t-e-s25/index.html","searchKeys":["BYTES25","BYTES25","com.example.abi.model.Types.BYTES25"]},{"name":"BYTES26","description":"com.example.abi.model.Types.BYTES26","location":"abi/com.example.abi.model/-types/-b-y-t-e-s26/index.html","searchKeys":["BYTES26","BYTES26","com.example.abi.model.Types.BYTES26"]},{"name":"BYTES27","description":"com.example.abi.model.Types.BYTES27","location":"abi/com.example.abi.model/-types/-b-y-t-e-s27/index.html","searchKeys":["BYTES27","BYTES27","com.example.abi.model.Types.BYTES27"]},{"name":"BYTES28","description":"com.example.abi.model.Types.BYTES28","location":"abi/com.example.abi.model/-types/-b-y-t-e-s28/index.html","searchKeys":["BYTES28","BYTES28","com.example.abi.model.Types.BYTES28"]},{"name":"BYTES29","description":"com.example.abi.model.Types.BYTES29","location":"abi/com.example.abi.model/-types/-b-y-t-e-s29/index.html","searchKeys":["BYTES29","BYTES29","com.example.abi.model.Types.BYTES29"]},{"name":"BYTES3","description":"com.example.abi.model.Types.BYTES3","location":"abi/com.example.abi.model/-types/-b-y-t-e-s3/index.html","searchKeys":["BYTES3","BYTES3","com.example.abi.model.Types.BYTES3"]},{"name":"BYTES30","description":"com.example.abi.model.Types.BYTES30","location":"abi/com.example.abi.model/-types/-b-y-t-e-s30/index.html","searchKeys":["BYTES30","BYTES30","com.example.abi.model.Types.BYTES30"]},{"name":"BYTES31","description":"com.example.abi.model.Types.BYTES31","location":"abi/com.example.abi.model/-types/-b-y-t-e-s31/index.html","searchKeys":["BYTES31","BYTES31","com.example.abi.model.Types.BYTES31"]},{"name":"BYTES32","description":"com.example.abi.model.Types.BYTES32","location":"abi/com.example.abi.model/-types/-b-y-t-e-s32/index.html","searchKeys":["BYTES32","BYTES32","com.example.abi.model.Types.BYTES32"]},{"name":"BYTES4","description":"com.example.abi.model.Types.BYTES4","location":"abi/com.example.abi.model/-types/-b-y-t-e-s4/index.html","searchKeys":["BYTES4","BYTES4","com.example.abi.model.Types.BYTES4"]},{"name":"BYTES5","description":"com.example.abi.model.Types.BYTES5","location":"abi/com.example.abi.model/-types/-b-y-t-e-s5/index.html","searchKeys":["BYTES5","BYTES5","com.example.abi.model.Types.BYTES5"]},{"name":"BYTES6","description":"com.example.abi.model.Types.BYTES6","location":"abi/com.example.abi.model/-types/-b-y-t-e-s6/index.html","searchKeys":["BYTES6","BYTES6","com.example.abi.model.Types.BYTES6"]},{"name":"BYTES7","description":"com.example.abi.model.Types.BYTES7","location":"abi/com.example.abi.model/-types/-b-y-t-e-s7/index.html","searchKeys":["BYTES7","BYTES7","com.example.abi.model.Types.BYTES7"]},{"name":"BYTES8","description":"com.example.abi.model.Types.BYTES8","location":"abi/com.example.abi.model/-types/-b-y-t-e-s8/index.html","searchKeys":["BYTES8","BYTES8","com.example.abi.model.Types.BYTES8"]},{"name":"BYTES9","description":"com.example.abi.model.Types.BYTES9","location":"abi/com.example.abi.model/-types/-b-y-t-e-s9/index.html","searchKeys":["BYTES9","BYTES9","com.example.abi.model.Types.BYTES9"]},{"name":"DynamicArray","description":"com.example.abi.model.Types.DynamicArray","location":"abi/com.example.abi.model/-types/-dynamic-array/index.html","searchKeys":["DynamicArray","DynamicArray","com.example.abi.model.Types.DynamicArray"]},{"name":"FixedArray","description":"com.example.abi.model.Types.FixedArray","location":"abi/com.example.abi.model/-types/-fixed-array/index.html","searchKeys":["FixedArray","FixedArray","com.example.abi.model.Types.FixedArray"]},{"name":"INT","description":"com.example.abi.model.Types.INT","location":"abi/com.example.abi.model/-types/-i-n-t/index.html","searchKeys":["INT","INT","com.example.abi.model.Types.INT"]},{"name":"INT256","description":"com.example.abi.model.Types.INT256","location":"abi/com.example.abi.model/-types/-i-n-t256/index.html","searchKeys":["INT256","INT256","com.example.abi.model.Types.INT256"]},{"name":"INT32","description":"com.example.abi.model.Types.INT32","location":"abi/com.example.abi.model/-types/-i-n-t32/index.html","searchKeys":["INT32","INT32","com.example.abi.model.Types.INT32"]},{"name":"INT8","description":"com.example.abi.model.Types.INT8","location":"abi/com.example.abi.model/-types/-i-n-t8/index.html","searchKeys":["INT8","INT8","com.example.abi.model.Types.INT8"]},{"name":"STRING","description":"com.example.abi.model.Types.STRING","location":"abi/com.example.abi.model/-types/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","com.example.abi.model.Types.STRING"]},{"name":"TUPLE","description":"com.example.abi.model.Types.TUPLE","location":"abi/com.example.abi.model/-types/-t-u-p-l-e/index.html","searchKeys":["TUPLE","TUPLE","com.example.abi.model.Types.TUPLE"]},{"name":"UINT","description":"com.example.abi.model.Types.UINT","location":"abi/com.example.abi.model/-types/-u-i-n-t/index.html","searchKeys":["UINT","UINT","com.example.abi.model.Types.UINT"]},{"name":"UINT128","description":"com.example.abi.model.Types.UINT128","location":"abi/com.example.abi.model/-types/-u-i-n-t128/index.html","searchKeys":["UINT128","UINT128","com.example.abi.model.Types.UINT128"]},{"name":"UINT16","description":"com.example.abi.model.Types.UINT16","location":"abi/com.example.abi.model/-types/-u-i-n-t16/index.html","searchKeys":["UINT16","UINT16","com.example.abi.model.Types.UINT16"]},{"name":"UINT192","description":"com.example.abi.model.Types.UINT192","location":"abi/com.example.abi.model/-types/-u-i-n-t192/index.html","searchKeys":["UINT192","UINT192","com.example.abi.model.Types.UINT192"]},{"name":"UINT224","description":"com.example.abi.model.Types.UINT224","location":"abi/com.example.abi.model/-types/-u-i-n-t224/index.html","searchKeys":["UINT224","UINT224","com.example.abi.model.Types.UINT224"]},{"name":"UINT24","description":"com.example.abi.model.Types.UINT24","location":"abi/com.example.abi.model/-types/-u-i-n-t24/index.html","searchKeys":["UINT24","UINT24","com.example.abi.model.Types.UINT24"]},{"name":"UINT256","description":"com.example.abi.model.Types.UINT256","location":"abi/com.example.abi.model/-types/-u-i-n-t256/index.html","searchKeys":["UINT256","UINT256","com.example.abi.model.Types.UINT256"]},{"name":"UINT32","description":"com.example.abi.model.Types.UINT32","location":"abi/com.example.abi.model/-types/-u-i-n-t32/index.html","searchKeys":["UINT32","UINT32","com.example.abi.model.Types.UINT32"]},{"name":"UINT64","description":"com.example.abi.model.Types.UINT64","location":"abi/com.example.abi.model/-types/-u-i-n-t64/index.html","searchKeys":["UINT64","UINT64","com.example.abi.model.Types.UINT64"]},{"name":"UINT8","description":"com.example.abi.model.Types.UINT8","location":"abi/com.example.abi.model/-types/-u-i-n-t8/index.html","searchKeys":["UINT8","UINT8","com.example.abi.model.Types.UINT8"]},{"name":"UINT80","description":"com.example.abi.model.Types.UINT80","location":"abi/com.example.abi.model/-types/-u-i-n-t80/index.html","searchKeys":["UINT80","UINT80","com.example.abi.model.Types.UINT80"]},{"name":"UINT88","description":"com.example.abi.model.Types.UINT88","location":"abi/com.example.abi.model/-types/-u-i-n-t88/index.html","searchKeys":["UINT88","UINT88","com.example.abi.model.Types.UINT88"]},{"name":"UINT96","description":"com.example.abi.model.Types.UINT96","location":"abi/com.example.abi.model/-types/-u-i-n-t96/index.html","searchKeys":["UINT96","UINT96","com.example.abi.model.Types.UINT96"]},{"name":"class FixedArray<T : Type<*>>(size: Int, values: List<T>) : StaticArray<T> ","description":"com.example.abi.model.FixedArray","location":"abi/com.example.abi.model/-fixed-array/index.html","searchKeys":["FixedArray","class FixedArray<T : Type<*>>(size: Int, values: List<T>) : StaticArray<T> ","com.example.abi.model.FixedArray"]},{"name":"class IntNumber(value: BigInteger, size: Int) : IntType","description":"com.example.abi.model.IntNumber","location":"abi/com.example.abi.model/-int-number/index.html","searchKeys":["IntNumber","class IntNumber(value: BigInteger, size: Int) : IntType","com.example.abi.model.IntNumber"]},{"name":"class UintNumber(value: BigInteger, size: Int) : IntType","description":"com.example.abi.model.UintNumber","location":"abi/com.example.abi.model/-uint-number/index.html","searchKeys":["UintNumber","class UintNumber(value: BigInteger, size: Int) : IntType","com.example.abi.model.UintNumber"]},{"name":"const val SOL_DYNAMIC_ARRAY_REGEX: String","description":"com.example.abi.SOL_DYNAMIC_ARRAY_REGEX","location":"abi/com.example.abi/-s-o-l_-d-y-n-a-m-i-c_-a-r-r-a-y_-r-e-g-e-x.html","searchKeys":["SOL_DYNAMIC_ARRAY_REGEX","const val SOL_DYNAMIC_ARRAY_REGEX: String","com.example.abi.SOL_DYNAMIC_ARRAY_REGEX"]},{"name":"const val SOL_FIXED_ARRAY_REGEX: String","description":"com.example.abi.SOL_FIXED_ARRAY_REGEX","location":"abi/com.example.abi/-s-o-l_-f-i-x-e-d_-a-r-r-a-y_-r-e-g-e-x.html","searchKeys":["SOL_FIXED_ARRAY_REGEX","const val SOL_FIXED_ARRAY_REGEX: String","com.example.abi.SOL_FIXED_ARRAY_REGEX"]},{"name":"const val SOL_TY_BYTES_REGEX: String","description":"com.example.abi.SOL_TY_BYTES_REGEX","location":"abi/com.example.abi/-s-o-l_-t-y_-b-y-t-e-s_-r-e-g-e-x.html","searchKeys":["SOL_TY_BYTES_REGEX","const val SOL_TY_BYTES_REGEX: String","com.example.abi.SOL_TY_BYTES_REGEX"]},{"name":"const val SOL_TY_INT_REGEX: String","description":"com.example.abi.SOL_TY_INT_REGEX","location":"abi/com.example.abi/-s-o-l_-t-y_-i-n-t_-r-e-g-e-x.html","searchKeys":["SOL_TY_INT_REGEX","const val SOL_TY_INT_REGEX: String","com.example.abi.SOL_TY_INT_REGEX"]},{"name":"const val SOL_TY_UINT_REGEX: String","description":"com.example.abi.SOL_TY_UINT_REGEX","location":"abi/com.example.abi/-s-o-l_-t-y_-u-i-n-t_-r-e-g-e-x.html","searchKeys":["SOL_TY_UINT_REGEX","const val SOL_TY_UINT_REGEX: String","com.example.abi.SOL_TY_UINT_REGEX"]},{"name":"constructor(abi: String)","description":"com.example.abi.LatticeAbi.LatticeAbi","location":"abi/com.example.abi/-lattice-abi/-lattice-abi.html","searchKeys":["LatticeAbi","constructor(abi: String)","com.example.abi.LatticeAbi.LatticeAbi"]},{"name":"constructor(abi: String, methodName: String? = null, method: EthereumABIElement)","description":"com.example.abi.LatticeFunction.LatticeFunction","location":"abi/com.example.abi/-lattice-function/-lattice-function.html","searchKeys":["LatticeFunction","constructor(abi: String, methodName: String? = null, method: EthereumABIElement)","com.example.abi.LatticeFunction.LatticeFunction"]},{"name":"constructor(size: Int, values: List<T>)","description":"com.example.abi.model.FixedArray.FixedArray","location":"abi/com.example.abi.model/-fixed-array/-fixed-array.html","searchKeys":["FixedArray","constructor(size: Int, values: List<T>)","com.example.abi.model.FixedArray.FixedArray"]},{"name":"constructor(size: Int, vararg values: T)","description":"com.example.abi.model.FixedArray.FixedArray","location":"abi/com.example.abi.model/-fixed-array/-fixed-array.html","searchKeys":["FixedArray","constructor(size: Int, vararg values: T)","com.example.abi.model.FixedArray.FixedArray"]},{"name":"constructor(value: BigInteger, size: Int)","description":"com.example.abi.model.IntNumber.IntNumber","location":"abi/com.example.abi.model/-int-number/-int-number.html","searchKeys":["IntNumber","constructor(value: BigInteger, size: Int)","com.example.abi.model.IntNumber.IntNumber"]},{"name":"constructor(value: BigInteger, size: Int)","description":"com.example.abi.model.UintNumber.UintNumber","location":"abi/com.example.abi.model/-uint-number/-uint-number.html","searchKeys":["UintNumber","constructor(value: BigInteger, size: Int)","com.example.abi.model.UintNumber.UintNumber"]},{"name":"data class LatticeAbi(val abi: String)","description":"com.example.abi.LatticeAbi","location":"abi/com.example.abi/-lattice-abi/index.html","searchKeys":["LatticeAbi","data class LatticeAbi(val abi: String)","com.example.abi.LatticeAbi"]},{"name":"data class LatticeFunction(val abi: String, val methodName: String? = null, val method: EthereumABIElement)","description":"com.example.abi.LatticeFunction","location":"abi/com.example.abi/-lattice-function/index.html","searchKeys":["LatticeFunction","data class LatticeFunction(val abi: String, val methodName: String? = null, val method: EthereumABIElement)","com.example.abi.LatticeFunction"]},{"name":"enum Types : Enum<Types> ","description":"com.example.abi.model.Types","location":"abi/com.example.abi.model/-types/index.html","searchKeys":["Types","enum Types : Enum<Types> ","com.example.abi.model.Types"]},{"name":"fun AbiDefinition.isConstructor(): Boolean","description":"com.example.abi.isConstructor","location":"abi/com.example.abi/is-constructor.html","searchKeys":["isConstructor","fun AbiDefinition.isConstructor(): Boolean","com.example.abi.isConstructor"]},{"name":"fun AbiDefinition.isFunction(): Boolean","description":"com.example.abi.isFunction","location":"abi/com.example.abi/is-function.html","searchKeys":["isFunction","fun AbiDefinition.isFunction(): Boolean","com.example.abi.isFunction"]},{"name":"fun EthereumABIElement.isConstructor(): Boolean","description":"com.example.abi.isConstructor","location":"abi/com.example.abi/is-constructor.html","searchKeys":["isConstructor","fun EthereumABIElement.isConstructor(): Boolean","com.example.abi.isConstructor"]},{"name":"fun EthereumABIElement.isFunction(): Boolean","description":"com.example.abi.isFunction","location":"abi/com.example.abi/is-function.html","searchKeys":["isFunction","fun EthereumABIElement.isFunction(): Boolean","com.example.abi.isFunction"]},{"name":"fun LatticeAbi.getConstructor(): LatticeFunction","description":"com.example.abi.getConstructor","location":"abi/com.example.abi/get-constructor.html","searchKeys":["getConstructor","fun LatticeAbi.getConstructor(): LatticeFunction","com.example.abi.getConstructor"]},{"name":"fun LatticeAbi.getFunction(methodName: String): LatticeFunction","description":"com.example.abi.getFunction","location":"abi/com.example.abi/get-function.html","searchKeys":["getFunction","fun LatticeAbi.getFunction(methodName: String): LatticeFunction","com.example.abi.getFunction"]},{"name":"fun LatticeFunction.decode(rawCode: String): List<Type<*>>","description":"com.example.abi.decode","location":"abi/com.example.abi/decode.html","searchKeys":["decode","fun LatticeFunction.decode(rawCode: String): List<Type<*>>","com.example.abi.decode"]},{"name":"fun LatticeFunction.decodeReturn(rawCode: String): List<Type<*>>","description":"com.example.abi.decodeReturn","location":"abi/com.example.abi/decode-return.html","searchKeys":["decodeReturn","fun LatticeFunction.decodeReturn(rawCode: String): List<Type<*>>","com.example.abi.decodeReturn"]},{"name":"fun LatticeFunction.encode(args: Array<Any>): String","description":"com.example.abi.encode","location":"abi/com.example.abi/encode.html","searchKeys":["encode","fun LatticeFunction.encode(args: Array<Any>): String","com.example.abi.encode"]},{"name":"fun LatticeFunction.getTypeReferences(): Pair<List<TypeReference<Type<*>>>, List<TypeReference<Type<*>>>>","description":"com.example.abi.getTypeReferences","location":"abi/com.example.abi/get-type-references.html","searchKeys":["getTypeReferences","fun LatticeFunction.getTypeReferences(): Pair<List<TypeReference<Type<*>>>, List<TypeReference<Type<*>>>>","com.example.abi.getTypeReferences"]},{"name":"fun List<AbiDefinition>.filter(methodName: String?): AbiDefinition","description":"com.example.abi.filter","location":"abi/com.example.abi/filter.html","searchKeys":["filter","fun List<AbiDefinition>.filter(methodName: String?): AbiDefinition","com.example.abi.filter"]},{"name":"fun List<EthereumABIElement>.filter(methodName: String? = null): EthereumABIElement","description":"com.example.abi.filter","location":"abi/com.example.abi/filter.html","searchKeys":["filter","fun List<EthereumABIElement>.filter(methodName: String? = null): EthereumABIElement","com.example.abi.filter"]},{"name":"fun bytesSize(ty: String): Int","description":"com.example.abi.bytesSize","location":"abi/com.example.abi/bytes-size.html","searchKeys":["bytesSize","fun bytesSize(ty: String): Int","com.example.abi.bytesSize"]},{"name":"fun convertArgument(namedType: EthereumNamedType, arg: Any?): Type<*>","description":"com.example.abi.convertArgument","location":"abi/com.example.abi/convert-argument.html","searchKeys":["convertArgument","fun convertArgument(namedType: EthereumNamedType, arg: Any?): Type<*>","com.example.abi.convertArgument"]},{"name":"fun convertArguments(types: List<EthereumNamedType>?, args: Array<Any>): List<Type<*>>","description":"com.example.abi.convertArguments","location":"abi/com.example.abi/convert-arguments.html","searchKeys":["convertArguments","fun convertArguments(types: List<EthereumNamedType>?, args: Array<Any>): List<Type<*>>","com.example.abi.convertArguments"]},{"name":"fun dynamicArrayElemType(ty: String): String","description":"com.example.abi.dynamicArrayElemType","location":"abi/com.example.abi/dynamic-array-elem-type.html","searchKeys":["dynamicArrayElemType","fun dynamicArrayElemType(ty: String): String","com.example.abi.dynamicArrayElemType"]},{"name":"fun fixedArrayElemType(ty: String): String","description":"com.example.abi.fixedArrayElemType","location":"abi/com.example.abi/fixed-array-elem-type.html","searchKeys":["fixedArrayElemType","fun fixedArrayElemType(ty: String): String","com.example.abi.fixedArrayElemType"]},{"name":"fun fixedArraySize(ty: String): Int","description":"com.example.abi.fixedArraySize","location":"abi/com.example.abi/fixed-array-size.html","searchKeys":["fixedArraySize","fun fixedArraySize(ty: String): Int","com.example.abi.fixedArraySize"]},{"name":"fun getMethods(): List<EthereumABIElement>","description":"com.example.abi.LatticeAbi.getMethods","location":"abi/com.example.abi/-lattice-abi/get-methods.html","searchKeys":["getMethods","fun getMethods(): List<EthereumABIElement>","com.example.abi.LatticeAbi.getMethods"]},{"name":"fun intSize(ty: String): Int","description":"com.example.abi.intSize","location":"abi/com.example.abi/int-size.html","searchKeys":["intSize","fun intSize(ty: String): Int","com.example.abi.intSize"]},{"name":"fun main()","description":"com.example.abi.model.main","location":"abi/com.example.abi.model/main.html","searchKeys":["main","fun main()","com.example.abi.model.main"]},{"name":"fun toJsonString(obj: Any): String","description":"com.example.abi.Json.toJsonString","location":"abi/com.example.abi/-json/to-json-string.html","searchKeys":["toJsonString","fun toJsonString(obj: Any): String","com.example.abi.Json.toJsonString"]},{"name":"fun uintSize(ty: String): Int","description":"com.example.abi.uintSize","location":"abi/com.example.abi/uint-size.html","searchKeys":["uintSize","fun uintSize(ty: String): Int","com.example.abi.uintSize"]},{"name":"fun valueOf(value: String): Types","description":"com.example.abi.model.Types.valueOf","location":"abi/com.example.abi.model/-types/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Types","com.example.abi.model.Types.valueOf"]},{"name":"fun values(): Array<Types>","description":"com.example.abi.model.Types.values","location":"abi/com.example.abi.model/-types/values.html","searchKeys":["values","fun values(): Array<Types>","com.example.abi.model.Types.values"]},{"name":"inline fun <T> toList(json: String): List<T>","description":"com.example.abi.Json.toList","location":"abi/com.example.abi/-json/to-list.html","searchKeys":["toList","inline fun <T> toList(json: String): List<T>","com.example.abi.Json.toList"]},{"name":"object Json","description":"com.example.abi.Json","location":"abi/com.example.abi/-json/index.html","searchKeys":["Json","object Json","com.example.abi.Json"]},{"name":"open override fun getTypeAsString(): String","description":"com.example.abi.model.IntNumber.getTypeAsString","location":"abi/com.example.abi.model/-int-number/get-type-as-string.html","searchKeys":["getTypeAsString","open override fun getTypeAsString(): String","com.example.abi.model.IntNumber.getTypeAsString"]},{"name":"open override fun getTypeAsString(): String","description":"com.example.abi.model.UintNumber.getTypeAsString","location":"abi/com.example.abi.model/-uint-number/get-type-as-string.html","searchKeys":["getTypeAsString","open override fun getTypeAsString(): String","com.example.abi.model.UintNumber.getTypeAsString"]},{"name":"val MAPPER: JsonMapper","description":"com.example.abi.Json.MAPPER","location":"abi/com.example.abi/-json/-m-a-p-p-e-r.html","searchKeys":["MAPPER","val MAPPER: JsonMapper","com.example.abi.Json.MAPPER"]},{"name":"val abi: String","description":"com.example.abi.LatticeAbi.abi","location":"abi/com.example.abi/-lattice-abi/abi.html","searchKeys":["abi","val abi: String","com.example.abi.LatticeAbi.abi"]},{"name":"val abi: String","description":"com.example.abi.LatticeFunction.abi","location":"abi/com.example.abi/-lattice-function/abi.html","searchKeys":["abi","val abi: String","com.example.abi.LatticeFunction.abi"]},{"name":"val entries: EnumEntries<Types>","description":"com.example.abi.model.Types.entries","location":"abi/com.example.abi.model/-types/entries.html","searchKeys":["entries","val entries: EnumEntries<Types>","com.example.abi.model.Types.entries"]},{"name":"val method: EthereumABIElement","description":"com.example.abi.LatticeFunction.method","location":"abi/com.example.abi/-lattice-function/method.html","searchKeys":["method","val method: EthereumABIElement","com.example.abi.LatticeFunction.method"]},{"name":"val methodName: String? = null","description":"com.example.abi.LatticeFunction.methodName","location":"abi/com.example.abi/-lattice-function/method-name.html","searchKeys":["methodName","val methodName: String? = null","com.example.abi.LatticeFunction.methodName"]},{"name":"val value: String? = null","description":"com.example.abi.model.Types.value","location":"abi/com.example.abi.model/-types/value.html","searchKeys":["value","val value: String? = null","com.example.abi.model.Types.value"]},{"name":"EN","description":"com.example.mnemonic.model.Language.EN","location":"mnemonic/com.example.mnemonic.model/-language/-e-n/index.html","searchKeys":["EN","EN","com.example.mnemonic.model.Language.EN"]},{"name":"ES","description":"com.example.mnemonic.model.Language.ES","location":"mnemonic/com.example.mnemonic.model/-language/-e-s/index.html","searchKeys":["ES","ES","com.example.mnemonic.model.Language.ES"]},{"name":"FR","description":"com.example.mnemonic.model.Language.FR","location":"mnemonic/com.example.mnemonic.model/-language/-f-r/index.html","searchKeys":["FR","FR","com.example.mnemonic.model.Language.FR"]},{"name":"IT","description":"com.example.mnemonic.model.Language.IT","location":"mnemonic/com.example.mnemonic.model/-language/-i-t/index.html","searchKeys":["IT","IT","com.example.mnemonic.model.Language.IT"]},{"name":"JA","description":"com.example.mnemonic.model.Language.JA","location":"mnemonic/com.example.mnemonic.model/-language/-j-a/index.html","searchKeys":["JA","JA","com.example.mnemonic.model.Language.JA"]},{"name":"KO","description":"com.example.mnemonic.model.Language.KO","location":"mnemonic/com.example.mnemonic.model/-language/-k-o/index.html","searchKeys":["KO","KO","com.example.mnemonic.model.Language.KO"]},{"name":"ZH_HANS","description":"com.example.mnemonic.model.Language.ZH_HANS","location":"mnemonic/com.example.mnemonic.model/-language/-z-h_-h-a-n-s/index.html","searchKeys":["ZH_HANS","ZH_HANS","com.example.mnemonic.model.Language.ZH_HANS"]},{"name":"ZH_HANT","description":"com.example.mnemonic.model.Language.ZH_HANT","location":"mnemonic/com.example.mnemonic.model/-language/-z-h_-h-a-n-t/index.html","searchKeys":["ZH_HANT","ZH_HANT","com.example.mnemonic.model.Language.ZH_HANT"]},{"name":"constructor(entropy: ByteArray)","description":"com.example.mnemonic.Entropy.Entropy","location":"mnemonic/com.example.mnemonic/-entropy/-entropy.html","searchKeys":["Entropy","constructor(entropy: ByteArray)","com.example.mnemonic.Entropy.Entropy"]},{"name":"constructor(keyPair: ECKeyPair, chainCode: ByteArray, depth: Byte, parentFingerprint: Int, sequence: Int, versionBytes: ByteArray)","description":"com.example.mnemonic.model.ExtendedKey.ExtendedKey","location":"mnemonic/com.example.mnemonic.model/-extended-key/-extended-key.html","searchKeys":["ExtendedKey","constructor(keyPair: ECKeyPair, chainCode: ByteArray, depth: Byte, parentFingerprint: Int, sequence: Int, versionBytes: ByteArray)","com.example.mnemonic.model.ExtendedKey.ExtendedKey"]},{"name":"constructor(phrase: String)","description":"com.example.mnemonic.Mnemonic.Mnemonic","location":"mnemonic/com.example.mnemonic/-mnemonic/-mnemonic.html","searchKeys":["Mnemonic","constructor(phrase: String)","com.example.mnemonic.Mnemonic.Mnemonic"]},{"name":"constructor(phrase: String)","description":"com.example.mnemonic.model.MnemonicWords.MnemonicWords","location":"mnemonic/com.example.mnemonic.model/-mnemonic-words/-mnemonic-words.html","searchKeys":["MnemonicWords","constructor(phrase: String)","com.example.mnemonic.model.MnemonicWords.MnemonicWords"]},{"name":"constructor(phrases: Array<String>)","description":"com.example.mnemonic.model.MnemonicWords.MnemonicWords","location":"mnemonic/com.example.mnemonic.model/-mnemonic-words/-mnemonic-words.html","searchKeys":["MnemonicWords","constructor(phrases: Array<String>)","com.example.mnemonic.model.MnemonicWords.MnemonicWords"]},{"name":"constructor(seed: ByteArray)","description":"com.example.mnemonic.model.Seed.Seed","location":"mnemonic/com.example.mnemonic.model/-seed/-seed.html","searchKeys":["Seed","constructor(seed: ByteArray)","com.example.mnemonic.model.Seed.Seed"]},{"name":"constructor(words: Collection<String>)","description":"com.example.mnemonic.model.MnemonicWords.MnemonicWords","location":"mnemonic/com.example.mnemonic.model/-mnemonic-words/-mnemonic-words.html","searchKeys":["MnemonicWords","constructor(words: Collection<String>)","com.example.mnemonic.model.MnemonicWords.MnemonicWords"]},{"name":"data class Entropy(val entropy: ByteArray)","description":"com.example.mnemonic.Entropy","location":"mnemonic/com.example.mnemonic/-entropy/index.html","searchKeys":["Entropy","data class Entropy(val entropy: ByteArray)","com.example.mnemonic.Entropy"]},{"name":"data class ExtendedKey(val keyPair: ECKeyPair, chainCode: ByteArray, depth: Byte, parentFingerprint: Int, sequence: Int, versionBytes: ByteArray)","description":"com.example.mnemonic.model.ExtendedKey","location":"mnemonic/com.example.mnemonic.model/-extended-key/index.html","searchKeys":["ExtendedKey","data class ExtendedKey(val keyPair: ECKeyPair, chainCode: ByteArray, depth: Byte, parentFingerprint: Int, sequence: Int, versionBytes: ByteArray)","com.example.mnemonic.model.ExtendedKey"]},{"name":"data class Mnemonic(val phrase: String)","description":"com.example.mnemonic.Mnemonic","location":"mnemonic/com.example.mnemonic/-mnemonic/index.html","searchKeys":["Mnemonic","data class Mnemonic(val phrase: String)","com.example.mnemonic.Mnemonic"]},{"name":"data class MnemonicWords(val words: Collection<String>)","description":"com.example.mnemonic.model.MnemonicWords","location":"mnemonic/com.example.mnemonic.model/-mnemonic-words/index.html","searchKeys":["MnemonicWords","data class MnemonicWords(val words: Collection<String>)","com.example.mnemonic.model.MnemonicWords"]},{"name":"data class Seed(val seed: ByteArray)","description":"com.example.mnemonic.model.Seed","location":"mnemonic/com.example.mnemonic.model/-seed/index.html","searchKeys":["Seed","data class Seed(val seed: ByteArray)","com.example.mnemonic.model.Seed"]},{"name":"enum Language : Enum<Language> ","description":"com.example.mnemonic.model.Language","location":"mnemonic/com.example.mnemonic.model/-language/index.html","searchKeys":["Language","enum Language : Enum<Language> ","com.example.mnemonic.model.Language"]},{"name":"fun ECKeyPair.computeFingerPrint(isGM: Boolean = true): Int","description":"com.example.mnemonic.model.computeFingerPrint","location":"mnemonic/com.example.mnemonic.model/compute-finger-print.html","searchKeys":["computeFingerPrint","fun ECKeyPair.computeFingerPrint(isGM: Boolean = true): Int","com.example.mnemonic.model.computeFingerPrint"]},{"name":"fun Entropy.toMnemonic(lang: Language = Language.ZH_HANS): Mnemonic","description":"com.example.mnemonic.toMnemonic","location":"mnemonic/com.example.mnemonic/to-mnemonic.html","searchKeys":["toMnemonic","fun Entropy.toMnemonic(lang: Language = Language.ZH_HANS): Mnemonic","com.example.mnemonic.toMnemonic"]},{"name":"fun ExtendedKey.generateChildKey(element: BIP44Element, isGM: Boolean = true): ExtendedKey","description":"com.example.mnemonic.model.generateChildKey","location":"mnemonic/com.example.mnemonic.model/generate-child-key.html","searchKeys":["generateChildKey","fun ExtendedKey.generateChildKey(element: BIP44Element, isGM: Boolean = true): ExtendedKey","com.example.mnemonic.model.generateChildKey"]},{"name":"fun Language.toWordList(): List<String>","description":"com.example.mnemonic.model.toWordList","location":"mnemonic/com.example.mnemonic.model/to-word-list.html","searchKeys":["toWordList","fun Language.toWordList(): List<String>","com.example.mnemonic.model.toWordList"]},{"name":"fun Mnemonic.toEntropy(lang: Language): Entropy","description":"com.example.mnemonic.toEntropy","location":"mnemonic/com.example.mnemonic/to-entropy.html","searchKeys":["toEntropy","fun Mnemonic.toEntropy(lang: Language): Entropy","com.example.mnemonic.toEntropy"]},{"name":"fun Mnemonic.toMnemonicWords(): MnemonicWords","description":"com.example.mnemonic.toMnemonicWords","location":"mnemonic/com.example.mnemonic/to-mnemonic-words.html","searchKeys":["toMnemonicWords","fun Mnemonic.toMnemonicWords(): MnemonicWords","com.example.mnemonic.toMnemonicWords"]},{"name":"fun MnemonicWords.toEntropy(lang: Language): Entropy","description":"com.example.mnemonic.toEntropy","location":"mnemonic/com.example.mnemonic/to-entropy.html","searchKeys":["toEntropy","fun MnemonicWords.toEntropy(lang: Language): Entropy","com.example.mnemonic.toEntropy"]},{"name":"fun MnemonicWords.toExtendedKey(path: String = DEFAULT_PATH, saltPhrase: String = \"\", isGM: Boolean = true): ExtendedKey","description":"com.example.mnemonic.toExtendedKey","location":"mnemonic/com.example.mnemonic/to-extended-key.html","searchKeys":["toExtendedKey","fun MnemonicWords.toExtendedKey(path: String = DEFAULT_PATH, saltPhrase: String = \"\", isGM: Boolean = true): ExtendedKey","com.example.mnemonic.toExtendedKey"]},{"name":"fun MnemonicWords.toSeed(password: String? = \"\"): Seed","description":"com.example.mnemonic.toSeed","location":"mnemonic/com.example.mnemonic/to-seed.html","searchKeys":["toSeed","fun MnemonicWords.toSeed(password: String? = \"\"): Seed","com.example.mnemonic.toSeed"]},{"name":"fun MnemonicWords.validate(lang: Language): Boolean","description":"com.example.mnemonic.model.validate","location":"mnemonic/com.example.mnemonic.model/validate.html","searchKeys":["validate","fun MnemonicWords.validate(lang: Language): Boolean","com.example.mnemonic.model.validate"]},{"name":"fun Seed.toExtendedKey(publicKeyOnly: Boolean = false, isGM: Boolean = true, testnet: Boolean = false): ExtendedKey","description":"com.example.mnemonic.model.toExtendedKey","location":"mnemonic/com.example.mnemonic.model/to-extended-key.html","searchKeys":["toExtendedKey","fun Seed.toExtendedKey(publicKeyOnly: Boolean = false, isGM: Boolean = true, testnet: Boolean = false): ExtendedKey","com.example.mnemonic.model.toExtendedKey"]},{"name":"fun Seed.toKey(path: String, isGM: Boolean = true, testnet: Boolean = false): ExtendedKey","description":"com.example.mnemonic.model.toKey","location":"mnemonic/com.example.mnemonic.model/to-key.html","searchKeys":["toKey","fun Seed.toKey(path: String, isGM: Boolean = true, testnet: Boolean = false): ExtendedKey","com.example.mnemonic.model.toKey"]},{"name":"fun binarySearch(element: String, fromIndex: Int = 0, toIndex: Int): Int","description":"com.example.mnemonic.wordlist.zhhans.binarySearch","location":"mnemonic/com.example.mnemonic.wordlist.zhhans/binary-search.html","searchKeys":["binarySearch","fun binarySearch(element: String, fromIndex: Int = 0, toIndex: Int): Int","com.example.mnemonic.wordlist.zhhans.binarySearch"]},{"name":"fun compareValue(a: String, b: String): Int","description":"com.example.mnemonic.wordlist.zhhans.compareValue","location":"mnemonic/com.example.mnemonic.wordlist.zhhans/compare-value.html","searchKeys":["compareValue","fun compareValue(a: String, b: String): Int","com.example.mnemonic.wordlist.zhhans.compareValue"]},{"name":"fun generate(strength: Int = 128, lang: Language = Language.ZH_HANS): Mnemonic","description":"com.example.mnemonic.Mnemonic.Companion.generate","location":"mnemonic/com.example.mnemonic/-mnemonic/-companion/generate.html","searchKeys":["generate","fun generate(strength: Int = 128, lang: Language = Language.ZH_HANS): Mnemonic","com.example.mnemonic.Mnemonic.Companion.generate"]},{"name":"fun main()","description":"com.example.mnemonic.wordlist.zhhans.main","location":"mnemonic/com.example.mnemonic.wordlist.zhhans/main.html","searchKeys":["main","fun main()","com.example.mnemonic.wordlist.zhhans.main"]},{"name":"fun serialize(publicKeyOnly: Boolean = false): String","description":"com.example.mnemonic.model.ExtendedKey.serialize","location":"mnemonic/com.example.mnemonic.model/-extended-key/serialize.html","searchKeys":["serialize","fun serialize(publicKeyOnly: Boolean = false): String","com.example.mnemonic.model.ExtendedKey.serialize"]},{"name":"fun valueOf(value: String): Language","description":"com.example.mnemonic.model.Language.valueOf","location":"mnemonic/com.example.mnemonic.model/-language/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Language","com.example.mnemonic.model.Language.valueOf"]},{"name":"fun values(): Array<Language>","description":"com.example.mnemonic.model.Language.values","location":"mnemonic/com.example.mnemonic.model/-language/values.html","searchKeys":["values","fun values(): Array<Language>","com.example.mnemonic.model.Language.values"]},{"name":"object Companion","description":"com.example.mnemonic.Mnemonic.Companion","location":"mnemonic/com.example.mnemonic/-mnemonic/-companion/index.html","searchKeys":["Companion","object Companion","com.example.mnemonic.Mnemonic.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.mnemonic.Entropy.equals","location":"mnemonic/com.example.mnemonic/-entropy/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.mnemonic.Entropy.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.mnemonic.model.ExtendedKey.equals","location":"mnemonic/com.example.mnemonic.model/-extended-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.mnemonic.model.ExtendedKey.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.mnemonic.model.Seed.equals","location":"mnemonic/com.example.mnemonic.model/-seed/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.mnemonic.model.Seed.equals"]},{"name":"open override fun hashCode(): Int","description":"com.example.mnemonic.Entropy.hashCode","location":"mnemonic/com.example.mnemonic/-entropy/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.mnemonic.Entropy.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.example.mnemonic.model.ExtendedKey.hashCode","location":"mnemonic/com.example.mnemonic.model/-extended-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.mnemonic.model.ExtendedKey.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.example.mnemonic.model.Seed.hashCode","location":"mnemonic/com.example.mnemonic.model/-seed/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.mnemonic.model.Seed.hashCode"]},{"name":"open override fun toString(): String","description":"com.example.mnemonic.model.MnemonicWords.toString","location":"mnemonic/com.example.mnemonic.model/-mnemonic-words/to-string.html","searchKeys":["toString","open override fun toString(): String","com.example.mnemonic.model.MnemonicWords.toString"]},{"name":"val WORDLIST_CHINESE_SIMPLIFIED: List<String>","description":"com.example.mnemonic.wordlist.zhhans.WORDLIST_CHINESE_SIMPLIFIED","location":"mnemonic/com.example.mnemonic.wordlist.zhhans/-w-o-r-d-l-i-s-t_-c-h-i-n-e-s-e_-s-i-m-p-l-i-f-i-e-d.html","searchKeys":["WORDLIST_CHINESE_SIMPLIFIED","val WORDLIST_CHINESE_SIMPLIFIED: List<String>","com.example.mnemonic.wordlist.zhhans.WORDLIST_CHINESE_SIMPLIFIED"]},{"name":"val WORDLIST_CHINESE_TRADITIONAL: List<String>","description":"com.example.mnemonic.wordlist.zhhant.WORDLIST_CHINESE_TRADITIONAL","location":"mnemonic/com.example.mnemonic.wordlist.zhhant/-w-o-r-d-l-i-s-t_-c-h-i-n-e-s-e_-t-r-a-d-i-t-i-o-n-a-l.html","searchKeys":["WORDLIST_CHINESE_TRADITIONAL","val WORDLIST_CHINESE_TRADITIONAL: List<String>","com.example.mnemonic.wordlist.zhhant.WORDLIST_CHINESE_TRADITIONAL"]},{"name":"val WORDLIST_ENGLISH: List<String>","description":"com.example.mnemonic.wordlist.en.WORDLIST_ENGLISH","location":"mnemonic/com.example.mnemonic.wordlist.en/-w-o-r-d-l-i-s-t_-e-n-g-l-i-s-h.html","searchKeys":["WORDLIST_ENGLISH","val WORDLIST_ENGLISH: List<String>","com.example.mnemonic.wordlist.en.WORDLIST_ENGLISH"]},{"name":"val WORDLIST_FRENCH: List<String>","description":"com.example.mnemonic.wordlist.fr.WORDLIST_FRENCH","location":"mnemonic/com.example.mnemonic.wordlist.fr/-w-o-r-d-l-i-s-t_-f-r-e-n-c-h.html","searchKeys":["WORDLIST_FRENCH","val WORDLIST_FRENCH: List<String>","com.example.mnemonic.wordlist.fr.WORDLIST_FRENCH"]},{"name":"val WORDLIST_ITALIAN: List<String>","description":"com.example.mnemonic.wordlist.it.WORDLIST_ITALIAN","location":"mnemonic/com.example.mnemonic.wordlist.it/-w-o-r-d-l-i-s-t_-i-t-a-l-i-a-n.html","searchKeys":["WORDLIST_ITALIAN","val WORDLIST_ITALIAN: List<String>","com.example.mnemonic.wordlist.it.WORDLIST_ITALIAN"]},{"name":"val WORDLIST_JAPANESE: List<String>","description":"com.example.mnemonic.wordlist.ja.WORDLIST_JAPANESE","location":"mnemonic/com.example.mnemonic.wordlist.ja/-w-o-r-d-l-i-s-t_-j-a-p-a-n-e-s-e.html","searchKeys":["WORDLIST_JAPANESE","val WORDLIST_JAPANESE: List<String>","com.example.mnemonic.wordlist.ja.WORDLIST_JAPANESE"]},{"name":"val WORDLIST_KOREAN: List<String>","description":"com.example.mnemonic.wordlist.ko.WORDLIST_KOREAN","location":"mnemonic/com.example.mnemonic.wordlist.ko/-w-o-r-d-l-i-s-t_-k-o-r-e-a-n.html","searchKeys":["WORDLIST_KOREAN","val WORDLIST_KOREAN: List<String>","com.example.mnemonic.wordlist.ko.WORDLIST_KOREAN"]},{"name":"val WORDLIST_SPANISH: List<String>","description":"com.example.mnemonic.wordlist.es.WORDLIST_SPANISH","location":"mnemonic/com.example.mnemonic.wordlist.es/-w-o-r-d-l-i-s-t_-s-p-a-n-i-s-h.html","searchKeys":["WORDLIST_SPANISH","val WORDLIST_SPANISH: List<String>","com.example.mnemonic.wordlist.es.WORDLIST_SPANISH"]},{"name":"val entries: EnumEntries<Language>","description":"com.example.mnemonic.model.Language.entries","location":"mnemonic/com.example.mnemonic.model/-language/entries.html","searchKeys":["entries","val entries: EnumEntries<Language>","com.example.mnemonic.model.Language.entries"]},{"name":"val entropy: ByteArray","description":"com.example.mnemonic.Entropy.entropy","location":"mnemonic/com.example.mnemonic/-entropy/entropy.html","searchKeys":["entropy","val entropy: ByteArray","com.example.mnemonic.Entropy.entropy"]},{"name":"val keyPair: ECKeyPair","description":"com.example.mnemonic.model.ExtendedKey.keyPair","location":"mnemonic/com.example.mnemonic.model/-extended-key/key-pair.html","searchKeys":["keyPair","val keyPair: ECKeyPair","com.example.mnemonic.model.ExtendedKey.keyPair"]},{"name":"val phrase: String","description":"com.example.mnemonic.Mnemonic.phrase","location":"mnemonic/com.example.mnemonic/-mnemonic/phrase.html","searchKeys":["phrase","val phrase: String","com.example.mnemonic.Mnemonic.phrase"]},{"name":"val seed: ByteArray","description":"com.example.mnemonic.model.Seed.seed","location":"mnemonic/com.example.mnemonic.model/-seed/seed.html","searchKeys":["seed","val seed: ByteArray","com.example.mnemonic.model.Seed.seed"]},{"name":"val words: Collection<String>","description":"com.example.mnemonic.model.MnemonicWords.words","location":"mnemonic/com.example.mnemonic.model/-mnemonic-words/words.html","searchKeys":["words","val words: Collection<String>","com.example.mnemonic.model.MnemonicWords.words"]},{"name":"const val ADDRESS: String","description":"com.example.model.RegExpr.ADDRESS","location":"model/com.example.model/-reg-expr/-a-d-d-r-e-s-s.html","searchKeys":["ADDRESS","const val ADDRESS: String","com.example.model.RegExpr.ADDRESS"]},{"name":"const val ADDRESS_LENGTH_IN_HEX: Int = 40","description":"com.example.model.ADDRESS_LENGTH_IN_HEX","location":"model/com.example.model/-a-d-d-r-e-s-s_-l-e-n-g-t-h_-i-n_-h-e-x.html","searchKeys":["ADDRESS_LENGTH_IN_HEX","const val ADDRESS_LENGTH_IN_HEX: Int = 40","com.example.model.ADDRESS_LENGTH_IN_HEX"]},{"name":"const val COMPRESSED_PUBLIC_KEY_HEX: String","description":"com.example.model.RegExpr.COMPRESSED_PUBLIC_KEY_HEX","location":"model/com.example.model/-reg-expr/-c-o-m-p-r-e-s-s-e-d_-p-u-b-l-i-c_-k-e-y_-h-e-x.html","searchKeys":["COMPRESSED_PUBLIC_KEY_HEX","const val COMPRESSED_PUBLIC_KEY_HEX: String","com.example.model.RegExpr.COMPRESSED_PUBLIC_KEY_HEX"]},{"name":"const val ETHEREUM_ADDRESS: String","description":"com.example.model.RegExpr.ETHEREUM_ADDRESS","location":"model/com.example.model/-reg-expr/-e-t-h-e-r-e-u-m_-a-d-d-r-e-s-s.html","searchKeys":["ETHEREUM_ADDRESS","const val ETHEREUM_ADDRESS: String","com.example.model.RegExpr.ETHEREUM_ADDRESS"]},{"name":"const val HEX_PREFIX: String","description":"com.example.model.HEX_PREFIX","location":"model/com.example.model/-h-e-x_-p-r-e-f-i-x.html","searchKeys":["HEX_PREFIX","const val HEX_PREFIX: String","com.example.model.HEX_PREFIX"]},{"name":"const val LATTICE_ADDRESS_PREFIX: String","description":"com.example.model.LATTICE_ADDRESS_PREFIX","location":"model/com.example.model/-l-a-t-t-i-c-e_-a-d-d-r-e-s-s_-p-r-e-f-i-x.html","searchKeys":["LATTICE_ADDRESS_PREFIX","const val LATTICE_ADDRESS_PREFIX: String","com.example.model.LATTICE_ADDRESS_PREFIX"]},{"name":"const val PRIVATE_KEY_HEX: String","description":"com.example.model.RegExpr.PRIVATE_KEY_HEX","location":"model/com.example.model/-reg-expr/-p-r-i-v-a-t-e_-k-e-y_-h-e-x.html","searchKeys":["PRIVATE_KEY_HEX","const val PRIVATE_KEY_HEX: String","com.example.model.RegExpr.PRIVATE_KEY_HEX"]},{"name":"const val PRIVATE_KEY_SIZE: Int = 32","description":"com.example.model.PRIVATE_KEY_SIZE","location":"model/com.example.model/-p-r-i-v-a-t-e_-k-e-y_-s-i-z-e.html","searchKeys":["PRIVATE_KEY_SIZE","const val PRIVATE_KEY_SIZE: Int = 32","com.example.model.PRIVATE_KEY_SIZE"]},{"name":"const val PUBLIC_KEY_LENGTH_IN_HEX: Int","description":"com.example.model.PUBLIC_KEY_LENGTH_IN_HEX","location":"model/com.example.model/-p-u-b-l-i-c_-k-e-y_-l-e-n-g-t-h_-i-n_-h-e-x.html","searchKeys":["PUBLIC_KEY_LENGTH_IN_HEX","const val PUBLIC_KEY_LENGTH_IN_HEX: Int","com.example.model.PUBLIC_KEY_LENGTH_IN_HEX"]},{"name":"const val PUBLIC_KEY_SIZE: Int = 64","description":"com.example.model.PUBLIC_KEY_SIZE","location":"model/com.example.model/-p-u-b-l-i-c_-k-e-y_-s-i-z-e.html","searchKeys":["PUBLIC_KEY_SIZE","const val PUBLIC_KEY_SIZE: Int = 64","com.example.model.PUBLIC_KEY_SIZE"]},{"name":"constructor(addr: String)","description":"com.example.model.Address.Address","location":"model/com.example.model/-address/-address.html","searchKeys":["Address","constructor(addr: String)","com.example.model.Address.Address"]},{"name":"constructor(addr: String)","description":"com.example.model.EthereumAddress.EthereumAddress","location":"model/com.example.model/-ethereum-address/-ethereum-address.html","searchKeys":["EthereumAddress","constructor(addr: String)","com.example.model.EthereumAddress.EthereumAddress"]},{"name":"constructor(contractAddress: String, contractRet: String, dblockHash: String, dblockNumber: Int, events: Array<Any>, jouleUsed: Long, receiptIndex: Int, success: Boolean, tblockHash: String, confirmTime: Long)","description":"com.example.model.block.Receipt.Receipt","location":"model/com.example.model.block/-receipt/-receipt.html","searchKeys":["Receipt","constructor(contractAddress: String, contractRet: String, dblockHash: String, dblockNumber: Int, events: Array<Any>, jouleUsed: Long, receiptIndex: Int, success: Boolean, tblockHash: String, confirmTime: Long)","com.example.model.block.Receipt.Receipt"]},{"name":"constructor(currentDBlockHash: String, currentTBlockHash: String, currentTBlockNumber: Long)","description":"com.example.model.block.CurrentTDBlock.CurrentTDBlock","location":"model/com.example.model.block/-current-t-d-block/-current-t-d-block.html","searchKeys":["CurrentTDBlock","constructor(currentDBlockHash: String, currentTBlockHash: String, currentTBlockNumber: Long)","com.example.model.block.CurrentTDBlock.CurrentTDBlock"]},{"name":"constructor(key: BigInteger)","description":"com.example.model.PrivateKey.PrivateKey","location":"model/com.example.model/-private-key/-private-key.html","searchKeys":["PrivateKey","constructor(key: BigInteger)","com.example.model.PrivateKey.PrivateKey"]},{"name":"constructor(key: BigInteger)","description":"com.example.model.PublicKey.PublicKey","location":"model/com.example.model/-public-key/-public-key.html","searchKeys":["PublicKey","constructor(key: BigInteger)","com.example.model.PublicKey.PublicKey"]},{"name":"constructor(number: Long, parentHash: String, daemonHash: String)","description":"com.example.model.block.TBlock.TBlock","location":"model/com.example.model.block/-t-block/-t-block.html","searchKeys":["TBlock","constructor(number: Long, parentHash: String, daemonHash: String)","com.example.model.block.TBlock.TBlock"]},{"name":"constructor(number: Long, parentHash: String, daemonHash: String, timestamp: Long, owner: String, linker: String, type: String, hub: Array<String>? = emptyArray(), code: String? = null, codeHash: String? = null, payload: String? = \"0x00\", amount: Long = 0, income: Long? = null, joule: Long = 0, sign: String? = null, proofOfWork: String? = null, version: Int? = null, difficulty: Int? = 0)","description":"com.example.model.block.SendTBlock.SendTBlock","location":"model/com.example.model.block/-send-t-block/-send-t-block.html","searchKeys":["SendTBlock","constructor(number: Long, parentHash: String, daemonHash: String, timestamp: Long, owner: String, linker: String, type: String, hub: Array<String>? = emptyArray(), code: String? = null, codeHash: String? = null, payload: String? = \"0x00\", amount: Long = 0, income: Long? = null, joule: Long = 0, sign: String? = null, proofOfWork: String? = null, version: Int? = null, difficulty: Int? = 0)","com.example.model.block.SendTBlock.SendTBlock"]},{"name":"constructor(privateKey: ByteArray)","description":"com.example.model.PrivateKey.PrivateKey","location":"model/com.example.model/-private-key/-private-key.html","searchKeys":["PrivateKey","constructor(privateKey: ByteArray)","com.example.model.PrivateKey.PrivateKey"]},{"name":"constructor(privateKey: PrivateKey, publicKey: PublicKey)","description":"com.example.model.ECKeyPair.ECKeyPair","location":"model/com.example.model/-e-c-key-pair/-e-c-key-pair.html","searchKeys":["ECKeyPair","constructor(privateKey: PrivateKey, publicKey: PublicKey)","com.example.model.ECKeyPair.ECKeyPair"]},{"name":"constructor(privateKeyHex: HexString)","description":"com.example.model.PrivateKey.PrivateKey","location":"model/com.example.model/-private-key/-private-key.html","searchKeys":["PrivateKey","constructor(privateKeyHex: HexString)","com.example.model.PrivateKey.PrivateKey"]},{"name":"constructor(publicKey: ByteArray)","description":"com.example.model.PublicKey.PublicKey","location":"model/com.example.model/-public-key/-public-key.html","searchKeys":["PublicKey","constructor(publicKey: ByteArray)","com.example.model.PublicKey.PublicKey"]},{"name":"constructor(publicKeyHexString: String)","description":"com.example.model.PublicKey.PublicKey","location":"model/com.example.model/-public-key/-public-key.html","searchKeys":["PublicKey","constructor(publicKeyHexString: String)","com.example.model.PublicKey.PublicKey"]},{"name":"constructor(r: BigInteger = BigInteger.ZERO, s: BigInteger = BigInteger.ZERO, v: BigInteger = BigInteger.ZERO, e: BigInteger = BigInteger.ZERO)","description":"com.example.model.SignatureData.SignatureData","location":"model/com.example.model/-signature-data/-signature-data.html","searchKeys":["SignatureData","constructor(r: BigInteger = BigInteger.ZERO, s: BigInteger = BigInteger.ZERO, v: BigInteger = BigInteger.ZERO, e: BigInteger = BigInteger.ZERO)","com.example.model.SignatureData.SignatureData"]},{"name":"constructor(value: String)","description":"com.example.model.Hash.Hash","location":"model/com.example.model/-hash/-hash.html","searchKeys":["Hash","constructor(value: String)","com.example.model.Hash.Hash"]},{"name":"data class Address(val addr: String)","description":"com.example.model.Address","location":"model/com.example.model/-address/index.html","searchKeys":["Address","data class Address(val addr: String)","com.example.model.Address"]},{"name":"data class CurrentTDBlock(var currentDBlockHash: String, var currentTBlockHash: String, var currentTBlockNumber: Long)","description":"com.example.model.block.CurrentTDBlock","location":"model/com.example.model.block/-current-t-d-block/index.html","searchKeys":["CurrentTDBlock","data class CurrentTDBlock(var currentDBlockHash: String, var currentTBlockHash: String, var currentTBlockNumber: Long)","com.example.model.block.CurrentTDBlock"]},{"name":"data class ECKeyPair(val privateKey: PrivateKey, val publicKey: PublicKey)","description":"com.example.model.ECKeyPair","location":"model/com.example.model/-e-c-key-pair/index.html","searchKeys":["ECKeyPair","data class ECKeyPair(val privateKey: PrivateKey, val publicKey: PublicKey)","com.example.model.ECKeyPair"]},{"name":"data class EthereumAddress(addr: String)","description":"com.example.model.EthereumAddress","location":"model/com.example.model/-ethereum-address/index.html","searchKeys":["EthereumAddress","data class EthereumAddress(addr: String)","com.example.model.EthereumAddress"]},{"name":"data class PrivateKey(val key: BigInteger)","description":"com.example.model.PrivateKey","location":"model/com.example.model/-private-key/index.html","searchKeys":["PrivateKey","data class PrivateKey(val key: BigInteger)","com.example.model.PrivateKey"]},{"name":"data class PublicKey(val key: BigInteger)","description":"com.example.model.PublicKey","location":"model/com.example.model/-public-key/index.html","searchKeys":["PublicKey","data class PublicKey(val key: BigInteger)","com.example.model.PublicKey"]},{"name":"data class Receipt(val contractAddress: String, var contractRet: String, val dblockHash: String, val dblockNumber: Int, val events: Array<Any>, val jouleUsed: Long, val receiptIndex: Int, val success: Boolean, var tblockHash: String, var confirmTime: Long)","description":"com.example.model.block.Receipt","location":"model/com.example.model.block/-receipt/index.html","searchKeys":["Receipt","data class Receipt(val contractAddress: String, var contractRet: String, val dblockHash: String, val dblockNumber: Int, val events: Array<Any>, val jouleUsed: Long, val receiptIndex: Int, val success: Boolean, var tblockHash: String, var confirmTime: Long)","com.example.model.block.Receipt"]},{"name":"data class SendTBlock(val number: Long, val parentHash: String, val daemonHash: String, val timestamp: Long, val owner: String, val linker: String, val type: String, val hub: Array<String>? = emptyArray(), val code: String? = null, val codeHash: String? = null, val payload: String? = \"0x00\", val amount: Long = 0, val income: Long? = null, val joule: Long = 0, val sign: String? = null, val proofOfWork: String? = null, val version: Int? = null, val difficulty: Int? = 0)","description":"com.example.model.block.SendTBlock","location":"model/com.example.model.block/-send-t-block/index.html","searchKeys":["SendTBlock","data class SendTBlock(val number: Long, val parentHash: String, val daemonHash: String, val timestamp: Long, val owner: String, val linker: String, val type: String, val hub: Array<String>? = emptyArray(), val code: String? = null, val codeHash: String? = null, val payload: String? = \"0x00\", val amount: Long = 0, val income: Long? = null, val joule: Long = 0, val sign: String? = null, val proofOfWork: String? = null, val version: Int? = null, val difficulty: Int? = 0)","com.example.model.block.SendTBlock"]},{"name":"data class SignatureData(var r: BigInteger = BigInteger.ZERO, var s: BigInteger = BigInteger.ZERO, var v: BigInteger = BigInteger.ZERO, var e: BigInteger = BigInteger.ZERO)","description":"com.example.model.SignatureData","location":"model/com.example.model/-signature-data/index.html","searchKeys":["SignatureData","data class SignatureData(var r: BigInteger = BigInteger.ZERO, var s: BigInteger = BigInteger.ZERO, var v: BigInteger = BigInteger.ZERO, var e: BigInteger = BigInteger.ZERO)","com.example.model.SignatureData"]},{"name":"data class TBlock(val number: Long, val parentHash: String, val daemonHash: String)","description":"com.example.model.block.TBlock","location":"model/com.example.model.block/-t-block/index.html","searchKeys":["TBlock","data class TBlock(val number: Long, val parentHash: String, val daemonHash: String)","com.example.model.block.TBlock"]},{"name":"fun Address.toEthereumAddress(): String","description":"com.example.model.toEthereumAddress","location":"model/com.example.model/to-ethereum-address.html","searchKeys":["toEthereumAddress","fun Address.toEthereumAddress(): String","com.example.model.toEthereumAddress"]},{"name":"fun BigInteger.toBytesPadded(length: Int): ByteArray","description":"com.example.model.extension.toBytesPadded","location":"model/com.example.model.extension/to-bytes-padded.html","searchKeys":["toBytesPadded","fun BigInteger.toBytesPadded(length: Int): ByteArray","com.example.model.extension.toBytesPadded"]},{"name":"fun BigInteger.toHexString(): String","description":"com.example.model.extension.toHexString","location":"model/com.example.model.extension/to-hex-string.html","searchKeys":["toHexString","fun BigInteger.toHexString(): String","com.example.model.extension.toHexString"]},{"name":"fun BigInteger.toHexStringNoPrefix(): String","description":"com.example.model.extension.toHexStringNoPrefix","location":"model/com.example.model.extension/to-hex-string-no-prefix.html","searchKeys":["toHexStringNoPrefix","fun BigInteger.toHexStringNoPrefix(): String","com.example.model.extension.toHexStringNoPrefix"]},{"name":"fun BigInteger.toHexStringZeroPadded(size: Int, withPrefix: Boolean = true): String","description":"com.example.model.extension.toHexStringZeroPadded","location":"model/com.example.model.extension/to-hex-string-zero-padded.html","searchKeys":["toHexStringZeroPadded","fun BigInteger.toHexStringZeroPadded(size: Int, withPrefix: Boolean = true): String","com.example.model.extension.toHexStringZeroPadded"]},{"name":"fun BooleanArray.toByteArray(len: Int = size / 8): ByteArray","description":"com.example.model.extension.toByteArray","location":"model/com.example.model.extension/to-byte-array.html","searchKeys":["toByteArray","fun BooleanArray.toByteArray(len: Int = size / 8): ByteArray","com.example.model.extension.toByteArray"]},{"name":"fun ByteArray.hash(gm: Boolean = true): ByteArray","description":"com.example.model.extension.hash","location":"model/com.example.model.extension/hash.html","searchKeys":["hash","fun ByteArray.hash(gm: Boolean = true): ByteArray","com.example.model.extension.hash"]},{"name":"fun ByteArray.removeLeadingZero(): ByteArray","description":"com.example.model.extension.removeLeadingZero","location":"model/com.example.model.extension/remove-leading-zero.html","searchKeys":["removeLeadingZero","fun ByteArray.removeLeadingZero(): ByteArray","com.example.model.extension.removeLeadingZero"]},{"name":"fun ByteArray.stripZeros(): ByteArray","description":"com.example.model.extension.stripZeros","location":"model/com.example.model.extension/strip-zeros.html","searchKeys":["stripZeros","fun ByteArray.stripZeros(): ByteArray","com.example.model.extension.stripZeros"]},{"name":"fun ByteArray.toBigInteger(): BigInteger","description":"com.example.model.extension.toBigInteger","location":"model/com.example.model.extension/to-big-integer.html","searchKeys":["toBigInteger","fun ByteArray.toBigInteger(): BigInteger","com.example.model.extension.toBigInteger"]},{"name":"fun ByteArray.toBigInteger(offset: Int, length: Int): BigInteger","description":"com.example.model.extension.toBigInteger","location":"model/com.example.model.extension/to-big-integer.html","searchKeys":["toBigInteger","fun ByteArray.toBigInteger(offset: Int, length: Int): BigInteger","com.example.model.extension.toBigInteger"]},{"name":"fun ByteArray.toBitArray(): BooleanArray","description":"com.example.model.extension.toBitArray","location":"model/com.example.model.extension/to-bit-array.html","searchKeys":["toBitArray","fun ByteArray.toBitArray(): BooleanArray","com.example.model.extension.toBitArray"]},{"name":"fun ByteArray.toBytes32Array(): Array<String>","description":"com.example.model.extension.toBytes32Array","location":"model/com.example.model.extension/to-bytes32-array.html","searchKeys":["toBytes32Array","fun ByteArray.toBytes32Array(): Array<String>","com.example.model.extension.toBytes32Array"]},{"name":"fun ByteArray.toFixedLengthByteArray(fixedSize: Int, fillByte: Byte = 0): ByteArray","description":"com.example.model.extension.toFixedLengthByteArray","location":"model/com.example.model.extension/to-fixed-length-byte-array.html","searchKeys":["toFixedLengthByteArray","fun ByteArray.toFixedLengthByteArray(fixedSize: Int, fillByte: Byte = 0): ByteArray","com.example.model.extension.toFixedLengthByteArray"]},{"name":"fun ByteArray.toHexString(): String","description":"com.example.model.extension.toHexString","location":"model/com.example.model.extension/to-hex-string.html","searchKeys":["toHexString","fun ByteArray.toHexString(): String","com.example.model.extension.toHexString"]},{"name":"fun ECKeyPair.toAddress(isGM: Boolean = true): Address","description":"com.example.model.toAddress","location":"model/com.example.model/to-address.html","searchKeys":["toAddress","fun ECKeyPair.toAddress(isGM: Boolean = true): Address","com.example.model.toAddress"]},{"name":"fun EthereumAddress.toAddress(prefix: String = \"01\"): Address","description":"com.example.model.toAddress","location":"model/com.example.model/to-address.html","searchKeys":["toAddress","fun EthereumAddress.toAddress(prefix: String = \"01\"): Address","com.example.model.toAddress"]},{"name":"fun HexString.hash(gm: Boolean = true): ByteArray","description":"com.example.model.extension.hash","location":"model/com.example.model.extension/hash.html","searchKeys":["hash","fun HexString.hash(gm: Boolean = true): ByteArray","com.example.model.extension.hash"]},{"name":"fun HexString.hexToBigInteger(): BigInteger","description":"com.example.model.extension.hexToBigInteger","location":"model/com.example.model.extension/hex-to-big-integer.html","searchKeys":["hexToBigInteger","fun HexString.hexToBigInteger(): BigInteger","com.example.model.extension.hexToBigInteger"]},{"name":"fun HexString.maybeHexToBigInteger(): BigInteger","description":"com.example.model.extension.maybeHexToBigInteger","location":"model/com.example.model.extension/maybe-hex-to-big-integer.html","searchKeys":["maybeHexToBigInteger","fun HexString.maybeHexToBigInteger(): BigInteger","com.example.model.extension.maybeHexToBigInteger"]},{"name":"fun Int.toByteArray(): ByteArray","description":"com.example.model.extension.toByteArray","location":"model/com.example.model.extension/to-byte-array.html","searchKeys":["toByteArray","fun Int.toByteArray(): ByteArray","com.example.model.extension.toByteArray"]},{"name":"fun Int.toMinimalByteArray(): ByteArray","description":"com.example.model.extension.toMinimalByteArray","location":"model/com.example.model.extension/to-minimal-byte-array.html","searchKeys":["toMinimalByteArray","fun Int.toMinimalByteArray(): ByteArray","com.example.model.extension.toMinimalByteArray"]},{"name":"fun Long.toByteArray(): ByteArray","description":"com.example.model.extension.toByteArray","location":"model/com.example.model.extension/to-byte-array.html","searchKeys":["toByteArray","fun Long.toByteArray(): ByteArray","com.example.model.extension.toByteArray"]},{"name":"fun PublicKey.toAddress(isGM: Boolean = true): Address","description":"com.example.model.toAddress","location":"model/com.example.model/to-address.html","searchKeys":["toAddress","fun PublicKey.toAddress(isGM: Boolean = true): Address","com.example.model.toAddress"]},{"name":"fun PublicKey.toEthereumAddress(isGM: Boolean = true): EthereumAddress","description":"com.example.model.toEthereumAddress","location":"model/com.example.model/to-ethereum-address.html","searchKeys":["toEthereumAddress","fun PublicKey.toEthereumAddress(isGM: Boolean = true): EthereumAddress","com.example.model.toEthereumAddress"]},{"name":"fun SignatureData.toHex(prefix: String = HEX_PREFIX): String","description":"com.example.model.toHex","location":"model/com.example.model/to-hex.html","searchKeys":["toHex","fun SignatureData.toHex(prefix: String = HEX_PREFIX): String","com.example.model.toHex"]},{"name":"fun TBlock.toCurrentTDBlock(): CurrentTDBlock","description":"com.example.model.block.toCurrentTDBlock","location":"model/com.example.model.block/to-current-t-d-block.html","searchKeys":["toCurrentTDBlock","fun TBlock.toCurrentTDBlock(): CurrentTDBlock","com.example.model.block.toCurrentTDBlock"]},{"name":"fun check(data: String, prefix: String): String","description":"com.example.model.Base58.check","location":"model/com.example.model/-base58/check.html","searchKeys":["check","fun check(data: String, prefix: String): String","com.example.model.Base58.check"]},{"name":"fun decode(input: String): ByteArray","description":"com.example.model.Base58.decode","location":"model/com.example.model/-base58/decode.html","searchKeys":["decode","fun decode(input: String): ByteArray","com.example.model.Base58.decode"]},{"name":"fun decodeToBigInteger(input: String): BigInteger","description":"com.example.model.Base58.decodeToBigInteger","location":"model/com.example.model/-base58/decode-to-big-integer.html","searchKeys":["decodeToBigInteger","fun decodeToBigInteger(input: String): BigInteger","com.example.model.Base58.decodeToBigInteger"]},{"name":"fun encode(input: ByteArray): String","description":"com.example.model.Base58.encode","location":"model/com.example.model/-base58/encode.html","searchKeys":["encode","fun encode(input: ByteArray): String","com.example.model.Base58.encode"]},{"name":"fun fromHexString(signature: String): SignatureData","description":"com.example.model.SignatureData.Companion.fromHexString","location":"model/com.example.model/-signature-data/-companion/from-hex-string.html","searchKeys":["fromHexString","fun fromHexString(signature: String): SignatureData","com.example.model.SignatureData.Companion.fromHexString"]},{"name":"fun zeroBlock(): CurrentTDBlock","description":"com.example.model.block.CurrentTDBlock.Companion.zeroBlock","location":"model/com.example.model.block/-current-t-d-block/-companion/zero-block.html","searchKeys":["zeroBlock","fun zeroBlock(): CurrentTDBlock","com.example.model.block.CurrentTDBlock.Companion.zeroBlock"]},{"name":"object Base58","description":"com.example.model.Base58","location":"model/com.example.model/-base58/index.html","searchKeys":["Base58","object Base58","com.example.model.Base58"]},{"name":"object Companion","description":"com.example.model.SignatureData.Companion","location":"model/com.example.model/-signature-data/-companion/index.html","searchKeys":["Companion","object Companion","com.example.model.SignatureData.Companion"]},{"name":"object Companion","description":"com.example.model.block.CurrentTDBlock.Companion","location":"model/com.example.model.block/-current-t-d-block/-companion/index.html","searchKeys":["Companion","object Companion","com.example.model.block.CurrentTDBlock.Companion"]},{"name":"object RegExpr","description":"com.example.model.RegExpr","location":"model/com.example.model/-reg-expr/index.html","searchKeys":["RegExpr","object RegExpr","com.example.model.RegExpr"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.model.Address.equals","location":"model/com.example.model/-address/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.model.Address.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.example.model.EthereumAddress.equals","location":"model/com.example.model/-ethereum-address/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.example.model.EthereumAddress.equals"]},{"name":"open override fun hashCode(): Int","description":"com.example.model.Address.hashCode","location":"model/com.example.model/-address/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.model.Address.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.example.model.EthereumAddress.hashCode","location":"model/com.example.model/-ethereum-address/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.example.model.EthereumAddress.hashCode"]},{"name":"open override fun toString(): String","description":"com.example.model.Address.toString","location":"model/com.example.model/-address/to-string.html","searchKeys":["toString","open override fun toString(): String","com.example.model.Address.toString"]},{"name":"open override fun toString(): String","description":"com.example.model.EthereumAddress.toString","location":"model/com.example.model/-ethereum-address/to-string.html","searchKeys":["toString","open override fun toString(): String","com.example.model.EthereumAddress.toString"]},{"name":"open override fun toString(): String","description":"com.example.model.PublicKey.toString","location":"model/com.example.model/-public-key/to-string.html","searchKeys":["toString","open override fun toString(): String","com.example.model.PublicKey.toString"]},{"name":"val addr: String","description":"com.example.model.Address.addr","location":"model/com.example.model/-address/addr.html","searchKeys":["addr","val addr: String","com.example.model.Address.addr"]},{"name":"val address: String","description":"com.example.model.Address.address","location":"model/com.example.model/-address/address.html","searchKeys":["address","val address: String","com.example.model.Address.address"]},{"name":"val amount: Long = 0","description":"com.example.model.block.SendTBlock.amount","location":"model/com.example.model.block/-send-t-block/amount.html","searchKeys":["amount","val amount: Long = 0","com.example.model.block.SendTBlock.amount"]},{"name":"val cleanAddress: String","description":"com.example.model.Address.cleanAddress","location":"model/com.example.model/-address/clean-address.html","searchKeys":["cleanAddress","val cleanAddress: String","com.example.model.Address.cleanAddress"]},{"name":"val cleanHex: String","description":"com.example.model.EthereumAddress.cleanHex","location":"model/com.example.model/-ethereum-address/clean-hex.html","searchKeys":["cleanHex","val cleanHex: String","com.example.model.EthereumAddress.cleanHex"]},{"name":"val code: String? = null","description":"com.example.model.block.SendTBlock.code","location":"model/com.example.model.block/-send-t-block/code.html","searchKeys":["code","val code: String? = null","com.example.model.block.SendTBlock.code"]},{"name":"val codeHash: String? = null","description":"com.example.model.block.SendTBlock.codeHash","location":"model/com.example.model.block/-send-t-block/code-hash.html","searchKeys":["codeHash","val codeHash: String? = null","com.example.model.block.SendTBlock.codeHash"]},{"name":"val contractAddress: String","description":"com.example.model.block.Receipt.contractAddress","location":"model/com.example.model.block/-receipt/contract-address.html","searchKeys":["contractAddress","val contractAddress: String","com.example.model.block.Receipt.contractAddress"]},{"name":"val daemonHash: String","description":"com.example.model.block.SendTBlock.daemonHash","location":"model/com.example.model.block/-send-t-block/daemon-hash.html","searchKeys":["daemonHash","val daemonHash: String","com.example.model.block.SendTBlock.daemonHash"]},{"name":"val daemonHash: String","description":"com.example.model.block.TBlock.daemonHash","location":"model/com.example.model.block/-t-block/daemon-hash.html","searchKeys":["daemonHash","val daemonHash: String","com.example.model.block.TBlock.daemonHash"]},{"name":"val dblockHash: String","description":"com.example.model.block.Receipt.dblockHash","location":"model/com.example.model.block/-receipt/dblock-hash.html","searchKeys":["dblockHash","val dblockHash: String","com.example.model.block.Receipt.dblockHash"]},{"name":"val dblockNumber: Int","description":"com.example.model.block.Receipt.dblockNumber","location":"model/com.example.model.block/-receipt/dblock-number.html","searchKeys":["dblockNumber","val dblockNumber: Int","com.example.model.block.Receipt.dblockNumber"]},{"name":"val difficulty: Int? = 0","description":"com.example.model.block.SendTBlock.difficulty","location":"model/com.example.model.block/-send-t-block/difficulty.html","searchKeys":["difficulty","val difficulty: Int? = 0","com.example.model.block.SendTBlock.difficulty"]},{"name":"val events: Array<Any>","description":"com.example.model.block.Receipt.events","location":"model/com.example.model.block/-receipt/events.html","searchKeys":["events","val events: Array<Any>","com.example.model.block.Receipt.events"]},{"name":"val hex: String","description":"com.example.model.EthereumAddress.hex","location":"model/com.example.model/-ethereum-address/hex.html","searchKeys":["hex","val hex: String","com.example.model.EthereumAddress.hex"]},{"name":"val hub: Array<String>?","description":"com.example.model.block.SendTBlock.hub","location":"model/com.example.model.block/-send-t-block/hub.html","searchKeys":["hub","val hub: Array<String>?","com.example.model.block.SendTBlock.hub"]},{"name":"val income: Long? = null","description":"com.example.model.block.SendTBlock.income","location":"model/com.example.model.block/-send-t-block/income.html","searchKeys":["income","val income: Long? = null","com.example.model.block.SendTBlock.income"]},{"name":"val joule: Long = 0","description":"com.example.model.block.SendTBlock.joule","location":"model/com.example.model.block/-send-t-block/joule.html","searchKeys":["joule","val joule: Long = 0","com.example.model.block.SendTBlock.joule"]},{"name":"val jouleUsed: Long","description":"com.example.model.block.Receipt.jouleUsed","location":"model/com.example.model.block/-receipt/joule-used.html","searchKeys":["jouleUsed","val jouleUsed: Long","com.example.model.block.Receipt.jouleUsed"]},{"name":"val key: BigInteger","description":"com.example.model.PrivateKey.key","location":"model/com.example.model/-private-key/key.html","searchKeys":["key","val key: BigInteger","com.example.model.PrivateKey.key"]},{"name":"val key: BigInteger","description":"com.example.model.PublicKey.key","location":"model/com.example.model/-public-key/key.html","searchKeys":["key","val key: BigInteger","com.example.model.PublicKey.key"]},{"name":"val linker: String","description":"com.example.model.block.SendTBlock.linker","location":"model/com.example.model.block/-send-t-block/linker.html","searchKeys":["linker","val linker: String","com.example.model.block.SendTBlock.linker"]},{"name":"val number: Long","description":"com.example.model.block.SendTBlock.number","location":"model/com.example.model.block/-send-t-block/number.html","searchKeys":["number","val number: Long","com.example.model.block.SendTBlock.number"]},{"name":"val number: Long","description":"com.example.model.block.TBlock.number","location":"model/com.example.model.block/-t-block/number.html","searchKeys":["number","val number: Long","com.example.model.block.TBlock.number"]},{"name":"val owner: String","description":"com.example.model.block.SendTBlock.owner","location":"model/com.example.model.block/-send-t-block/owner.html","searchKeys":["owner","val owner: String","com.example.model.block.SendTBlock.owner"]},{"name":"val parentHash: String","description":"com.example.model.block.SendTBlock.parentHash","location":"model/com.example.model.block/-send-t-block/parent-hash.html","searchKeys":["parentHash","val parentHash: String","com.example.model.block.SendTBlock.parentHash"]},{"name":"val parentHash: String","description":"com.example.model.block.TBlock.parentHash","location":"model/com.example.model.block/-t-block/parent-hash.html","searchKeys":["parentHash","val parentHash: String","com.example.model.block.TBlock.parentHash"]},{"name":"val payload: String?","description":"com.example.model.block.SendTBlock.payload","location":"model/com.example.model.block/-send-t-block/payload.html","searchKeys":["payload","val payload: String?","com.example.model.block.SendTBlock.payload"]},{"name":"val privateKey: PrivateKey","description":"com.example.model.ECKeyPair.privateKey","location":"model/com.example.model/-e-c-key-pair/private-key.html","searchKeys":["privateKey","val privateKey: PrivateKey","com.example.model.ECKeyPair.privateKey"]},{"name":"val proofOfWork: String? = null","description":"com.example.model.block.SendTBlock.proofOfWork","location":"model/com.example.model.block/-send-t-block/proof-of-work.html","searchKeys":["proofOfWork","val proofOfWork: String? = null","com.example.model.block.SendTBlock.proofOfWork"]},{"name":"val publicKey: PublicKey","description":"com.example.model.ECKeyPair.publicKey","location":"model/com.example.model/-e-c-key-pair/public-key.html","searchKeys":["publicKey","val publicKey: PublicKey","com.example.model.ECKeyPair.publicKey"]},{"name":"val receiptIndex: Int","description":"com.example.model.block.Receipt.receiptIndex","location":"model/com.example.model.block/-receipt/receipt-index.html","searchKeys":["receiptIndex","val receiptIndex: Int","com.example.model.block.Receipt.receiptIndex"]},{"name":"val sign: String? = null","description":"com.example.model.block.SendTBlock.sign","location":"model/com.example.model.block/-send-t-block/sign.html","searchKeys":["sign","val sign: String? = null","com.example.model.block.SendTBlock.sign"]},{"name":"val success: Boolean","description":"com.example.model.block.Receipt.success","location":"model/com.example.model.block/-receipt/success.html","searchKeys":["success","val success: Boolean","com.example.model.block.Receipt.success"]},{"name":"val timestamp: Long","description":"com.example.model.block.SendTBlock.timestamp","location":"model/com.example.model.block/-send-t-block/timestamp.html","searchKeys":["timestamp","val timestamp: Long","com.example.model.block.SendTBlock.timestamp"]},{"name":"val type: String","description":"com.example.model.block.SendTBlock.type","location":"model/com.example.model.block/-send-t-block/type.html","searchKeys":["type","val type: String","com.example.model.block.SendTBlock.type"]},{"name":"val value: String","description":"com.example.model.Hash.value","location":"model/com.example.model/-hash/value.html","searchKeys":["value","val value: String","com.example.model.Hash.value"]},{"name":"val version: Int? = null","description":"com.example.model.block.SendTBlock.version","location":"model/com.example.model.block/-send-t-block/version.html","searchKeys":["version","val version: Int? = null","com.example.model.block.SendTBlock.version"]},{"name":"value class Hash(val value: String)","description":"com.example.model.Hash","location":"model/com.example.model/-hash/index.html","searchKeys":["Hash","value class Hash(val value: String)","com.example.model.Hash"]},{"name":"var confirmTime: Long","description":"com.example.model.block.Receipt.confirmTime","location":"model/com.example.model.block/-receipt/confirm-time.html","searchKeys":["confirmTime","var confirmTime: Long","com.example.model.block.Receipt.confirmTime"]},{"name":"var contractRet: String","description":"com.example.model.block.Receipt.contractRet","location":"model/com.example.model.block/-receipt/contract-ret.html","searchKeys":["contractRet","var contractRet: String","com.example.model.block.Receipt.contractRet"]},{"name":"var currentDBlockHash: String","description":"com.example.model.block.CurrentTDBlock.currentDBlockHash","location":"model/com.example.model.block/-current-t-d-block/current-d-block-hash.html","searchKeys":["currentDBlockHash","var currentDBlockHash: String","com.example.model.block.CurrentTDBlock.currentDBlockHash"]},{"name":"var currentTBlockHash: String","description":"com.example.model.block.CurrentTDBlock.currentTBlockHash","location":"model/com.example.model.block/-current-t-d-block/current-t-block-hash.html","searchKeys":["currentTBlockHash","var currentTBlockHash: String","com.example.model.block.CurrentTDBlock.currentTBlockHash"]},{"name":"var currentTBlockNumber: Long","description":"com.example.model.block.CurrentTDBlock.currentTBlockNumber","location":"model/com.example.model.block/-current-t-d-block/current-t-block-number.html","searchKeys":["currentTBlockNumber","var currentTBlockNumber: Long","com.example.model.block.CurrentTDBlock.currentTBlockNumber"]},{"name":"var e: BigInteger","description":"com.example.model.SignatureData.e","location":"model/com.example.model/-signature-data/e.html","searchKeys":["e","var e: BigInteger","com.example.model.SignatureData.e"]},{"name":"var r: BigInteger","description":"com.example.model.SignatureData.r","location":"model/com.example.model/-signature-data/r.html","searchKeys":["r","var r: BigInteger","com.example.model.SignatureData.r"]},{"name":"var s: BigInteger","description":"com.example.model.SignatureData.s","location":"model/com.example.model/-signature-data/s.html","searchKeys":["s","var s: BigInteger","com.example.model.SignatureData.s"]},{"name":"var tblockHash: String","description":"com.example.model.block.Receipt.tblockHash","location":"model/com.example.model.block/-receipt/tblock-hash.html","searchKeys":["tblockHash","var tblockHash: String","com.example.model.block.Receipt.tblockHash"]},{"name":"var v: BigInteger","description":"com.example.model.SignatureData.v","location":"model/com.example.model/-signature-data/v.html","searchKeys":["v","var v: BigInteger","com.example.model.SignatureData.v"]},{"name":"CDC","description":"com.example.crypto.api.cipher.AESCipher.Mode.CDC","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/-c-d-c/index.html","searchKeys":["CDC","CDC","com.example.crypto.api.cipher.AESCipher.Mode.CDC"]},{"name":"CTR","description":"com.example.crypto.api.cipher.AESCipher.Mode.CTR","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/-c-t-r/index.html","searchKeys":["CTR","CTR","com.example.crypto.api.cipher.AESCipher.Mode.CTR"]},{"name":"DECRYPTION","description":"com.example.crypto.api.cipher.AESCipher.Operation.DECRYPTION","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-operation/-d-e-c-r-y-p-t-i-o-n/index.html","searchKeys":["DECRYPTION","DECRYPTION","com.example.crypto.api.cipher.AESCipher.Operation.DECRYPTION"]},{"name":"ENCRYPTION","description":"com.example.crypto.api.cipher.AESCipher.Operation.ENCRYPTION","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-operation/-e-n-c-r-y-p-t-i-o-n/index.html","searchKeys":["ENCRYPTION","ENCRYPTION","com.example.crypto.api.cipher.AESCipher.Operation.ENCRYPTION"]},{"name":"NoPadding","description":"com.example.crypto.api.cipher.AESCipher.Padding.NoPadding","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/-no-padding/index.html","searchKeys":["NoPadding","NoPadding","com.example.crypto.api.cipher.AESCipher.Padding.NoPadding"]},{"name":"PKCS5Padding","description":"com.example.crypto.api.cipher.AESCipher.Padding.PKCS5Padding","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/-p-k-c-s5-padding/index.html","searchKeys":["PKCS5Padding","PKCS5Padding","com.example.crypto.api.cipher.AESCipher.Padding.PKCS5Padding"]},{"name":"abstract fun add(p: CurvePoint): CurvePoint","description":"com.example.crypto.api.ec.CurvePoint.add","location":"crypto/com.example.crypto.api.ec/-curve-point/add.html","searchKeys":["add","abstract fun add(p: CurvePoint): CurvePoint","com.example.crypto.api.ec.CurvePoint.add"]},{"name":"abstract fun createPoint(x: BigInteger, y: BigInteger): CurvePoint","description":"com.example.crypto.api.ec.Curve.createPoint","location":"crypto/com.example.crypto.api.ec/-curve/create-point.html","searchKeys":["createPoint","abstract fun createPoint(x: BigInteger, y: BigInteger): CurvePoint","com.example.crypto.api.ec.Curve.createPoint"]},{"name":"abstract fun decodePoint(bytes: ByteArray): CurvePoint","description":"com.example.crypto.api.ec.Curve.decodePoint","location":"crypto/com.example.crypto.api.ec/-curve/decode-point.html","searchKeys":["decodePoint","abstract fun decodePoint(bytes: ByteArray): CurvePoint","com.example.crypto.api.ec.Curve.decodePoint"]},{"name":"abstract fun derive(pass: ByteArray, salt: ByteArray?, iterations: Int = 2048, digestParams: DigestParams = DigestParams.Sha512): ByteArray","description":"com.example.crypto.api.kdf.PBKDF2.derive","location":"crypto/com.example.crypto.api.kdf/-p-b-k-d-f2/derive.html","searchKeys":["derive","abstract fun derive(pass: ByteArray, salt: ByteArray?, iterations: Int = 2048, digestParams: DigestParams = DigestParams.Sha512): ByteArray","com.example.crypto.api.kdf.PBKDF2.derive"]},{"name":"abstract fun derive(pass: CharArray, salt: ByteArray?, iterations: Int = 2048, digestParams: DigestParams = DigestParams.Sha512): ByteArray","description":"com.example.crypto.api.kdf.PBKDF2.derive","location":"crypto/com.example.crypto.api.kdf/-p-b-k-d-f2/derive.html","searchKeys":["derive","abstract fun derive(pass: CharArray, salt: ByteArray?, iterations: Int = 2048, digestParams: DigestParams = DigestParams.Sha512): ByteArray","com.example.crypto.api.kdf.PBKDF2.derive"]},{"name":"abstract fun derive(password: ByteArray, salt: ByteArray?, n: Int, r: Int, p: Int, dkLen: Int): ByteArray","description":"com.example.crypto.api.kdf.SCrypt.derive","location":"crypto/com.example.crypto.api.kdf/-s-crypt/derive.html","searchKeys":["derive","abstract fun derive(password: ByteArray, salt: ByteArray?, n: Int, r: Int, p: Int, dkLen: Int): ByteArray","com.example.crypto.api.kdf.SCrypt.derive"]},{"name":"abstract fun encoded(compressed: Boolean = false): ByteArray","description":"com.example.crypto.api.ec.CurvePoint.encoded","location":"crypto/com.example.crypto.api.ec/-curve-point/encoded.html","searchKeys":["encoded","abstract fun encoded(compressed: Boolean = false): ByteArray","com.example.crypto.api.ec.CurvePoint.encoded"]},{"name":"abstract fun generate(): ECKeyPair","description":"com.example.crypto.api.ec.KeyPairGenerator.generate","location":"crypto/com.example.crypto.api.ec/-key-pair-generator/generate.html","searchKeys":["generate","abstract fun generate(): ECKeyPair","com.example.crypto.api.ec.KeyPairGenerator.generate"]},{"name":"abstract fun generate(data: ByteArray): ByteArray","description":"com.example.crypto.api.mac.Hmac.generate","location":"crypto/com.example.crypto.api.mac/-hmac/generate.html","searchKeys":["generate","abstract fun generate(data: ByteArray): ByteArray","com.example.crypto.api.mac.Hmac.generate"]},{"name":"abstract fun hash(message: ByteArray): String","description":"com.example.crypto.api.hashing.Hash.hash","location":"crypto/com.example.crypto.api.hashing/-hash/hash.html","searchKeys":["hash","abstract fun hash(message: ByteArray): String","com.example.crypto.api.hashing.Hash.hash"]},{"name":"abstract fun init(key: ByteArray, digestParams: DigestParams = DigestParams.Sha512): Hmac","description":"com.example.crypto.api.mac.Hmac.init","location":"crypto/com.example.crypto.api.mac/-hmac/init.html","searchKeys":["init","abstract fun init(key: ByteArray, digestParams: DigestParams = DigestParams.Sha512): Hmac","com.example.crypto.api.mac.Hmac.init"]},{"name":"abstract fun init(mode: AESCipher.Mode, padding: AESCipher.Padding, operation: AESCipher.Operation, key: ByteArray, iv: ByteArray): AESCipher","description":"com.example.crypto.api.cipher.AESCipher.init","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/init.html","searchKeys":["init","abstract fun init(mode: AESCipher.Mode, padding: AESCipher.Padding, operation: AESCipher.Operation, key: ByteArray, iv: ByteArray): AESCipher","com.example.crypto.api.cipher.AESCipher.init"]},{"name":"abstract fun isInfinity(): Boolean","description":"com.example.crypto.api.ec.CurvePoint.isInfinity","location":"crypto/com.example.crypto.api.ec/-curve-point/is-infinity.html","searchKeys":["isInfinity","abstract fun isInfinity(): Boolean","com.example.crypto.api.ec.CurvePoint.isInfinity"]},{"name":"abstract fun mul(n: BigInteger): CurvePoint","description":"com.example.crypto.api.ec.CurvePoint.mul","location":"crypto/com.example.crypto.api.ec/-curve-point/mul.html","searchKeys":["mul","abstract fun mul(n: BigInteger): CurvePoint","com.example.crypto.api.ec.CurvePoint.mul"]},{"name":"abstract fun normalize(): CurvePoint","description":"com.example.crypto.api.ec.CurvePoint.normalize","location":"crypto/com.example.crypto.api.ec/-curve-point/normalize.html","searchKeys":["normalize","abstract fun normalize(): CurvePoint","com.example.crypto.api.ec.CurvePoint.normalize"]},{"name":"abstract fun performOperation(data: ByteArray): ByteArray","description":"com.example.crypto.api.cipher.AESCipher.performOperation","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/perform-operation.html","searchKeys":["performOperation","abstract fun performOperation(data: ByteArray): ByteArray","com.example.crypto.api.cipher.AESCipher.performOperation"]},{"name":"abstract fun publicFromPrivate(privateKey: BigInteger): BigInteger","description":"com.example.crypto.api.ec.Signer.publicFromPrivate","location":"crypto/com.example.crypto.api.ec/-signer/public-from-private.html","searchKeys":["publicFromPrivate","abstract fun publicFromPrivate(privateKey: BigInteger): BigInteger","com.example.crypto.api.ec.Signer.publicFromPrivate"]},{"name":"abstract fun recover(recId: Int, message: ByteArray, signature: SignatureData): BigInteger?","description":"com.example.crypto.api.ec.Signer.recover","location":"crypto/com.example.crypto.api.ec/-signer/recover.html","searchKeys":["recover","abstract fun recover(recId: Int, message: ByteArray, signature: SignatureData): BigInteger?","com.example.crypto.api.ec.Signer.recover"]},{"name":"abstract fun sign(message: ByteArray, privateKey: BigInteger): SignatureData","description":"com.example.crypto.api.ec.Signer.sign","location":"crypto/com.example.crypto.api.ec/-signer/sign.html","searchKeys":["sign","abstract fun sign(message: ByteArray, privateKey: BigInteger): SignatureData","com.example.crypto.api.ec.Signer.sign"]},{"name":"abstract fun verify(message: ByteArray, signatureData: SignatureData, publicKey: BigInteger): Boolean","description":"com.example.crypto.api.ec.Signer.verify","location":"crypto/com.example.crypto.api.ec/-signer/verify.html","searchKeys":["verify","abstract fun verify(message: ByteArray, signatureData: SignatureData, publicKey: BigInteger): Boolean","com.example.crypto.api.ec.Signer.verify"]},{"name":"abstract val g: CurvePoint","description":"com.example.crypto.api.ec.Curve.g","location":"crypto/com.example.crypto.api.ec/-curve/g.html","searchKeys":["g","abstract val g: CurvePoint","com.example.crypto.api.ec.Curve.g"]},{"name":"abstract val n: BigInteger","description":"com.example.crypto.api.ec.Curve.n","location":"crypto/com.example.crypto.api.ec/-curve/n.html","searchKeys":["n","abstract val n: BigInteger","com.example.crypto.api.ec.Curve.n"]},{"name":"abstract val x: BigInteger","description":"com.example.crypto.api.ec.CurvePoint.x","location":"crypto/com.example.crypto.api.ec/-curve-point/x.html","searchKeys":["x","abstract val x: BigInteger","com.example.crypto.api.ec.CurvePoint.x"]},{"name":"abstract val y: BigInteger","description":"com.example.crypto.api.ec.CurvePoint.y","location":"crypto/com.example.crypto.api.ec/-curve-point/y.html","searchKeys":["y","abstract val y: BigInteger","com.example.crypto.api.ec.CurvePoint.y"]},{"name":"class AESCipherImpl : AESCipher","description":"com.example.crypto.impl.cipher.AESCipherImpl","location":"crypto/com.example.crypto.impl.cipher/-a-e-s-cipher-impl/index.html","searchKeys":["AESCipherImpl","class AESCipherImpl : AESCipher","com.example.crypto.impl.cipher.AESCipherImpl"]},{"name":"class EllipticCurve(curveParams: X9ECParameters) : Curve","description":"com.example.crypto.impl.ec.EllipticCurve","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve/index.html","searchKeys":["EllipticCurve","class EllipticCurve(curveParams: X9ECParameters) : Curve","com.example.crypto.impl.ec.EllipticCurve"]},{"name":"class EllipticCurveKeyPairGenerator(curveName: String) : KeyPairGenerator","description":"com.example.crypto.impl.ec.EllipticCurveKeyPairGenerator","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-key-pair-generator/index.html","searchKeys":["EllipticCurveKeyPairGenerator","class EllipticCurveKeyPairGenerator(curveName: String) : KeyPairGenerator","com.example.crypto.impl.ec.EllipticCurveKeyPairGenerator"]},{"name":"class EllipticCurvePoint(ecPoint: ECPoint) : CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurvePoint","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/index.html","searchKeys":["EllipticCurvePoint","class EllipticCurvePoint(ecPoint: ECPoint) : CurvePoint","com.example.crypto.impl.ec.EllipticCurvePoint"]},{"name":"class EllipticCurveSigner(curveName: String) : Signer","description":"com.example.crypto.impl.ec.EllipticCurveSigner","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-signer/index.html","searchKeys":["EllipticCurveSigner","class EllipticCurveSigner(curveName: String) : Signer","com.example.crypto.impl.ec.EllipticCurveSigner"]},{"name":"class HashImpl(gm: Boolean) : Hash","description":"com.example.crypto.impl.hashing.HashImpl","location":"crypto/com.example.crypto.impl.hashing/-hash-impl/index.html","searchKeys":["HashImpl","class HashImpl(gm: Boolean) : Hash","com.example.crypto.impl.hashing.HashImpl"]},{"name":"class HmacImpl : Hmac","description":"com.example.crypto.impl.hmac.HmacImpl","location":"crypto/com.example.crypto.impl.hmac/-hmac-impl/index.html","searchKeys":["HmacImpl","class HmacImpl : Hmac","com.example.crypto.impl.hmac.HmacImpl"]},{"name":"class LinuxSecureRandom : SecureRandomSpi","description":"com.example.crypto.LinuxSecureRandom","location":"crypto/com.example.crypto/-linux-secure-random/index.html","searchKeys":["LinuxSecureRandom","class LinuxSecureRandom : SecureRandomSpi","com.example.crypto.LinuxSecureRandom"]},{"name":"class PBKDF2Impl : PBKDF2","description":"com.example.crypto.impl.kdf.PBKDF2Impl","location":"crypto/com.example.crypto.impl.kdf/-p-b-k-d-f2-impl/index.html","searchKeys":["PBKDF2Impl","class PBKDF2Impl : PBKDF2","com.example.crypto.impl.kdf.PBKDF2Impl"]},{"name":"class SCryptImpl : SCrypt","description":"com.example.crypto.impl.kdf.SCryptImpl","location":"crypto/com.example.crypto.impl.kdf/-s-crypt-impl/index.html","searchKeys":["SCryptImpl","class SCryptImpl : SCrypt","com.example.crypto.impl.kdf.SCryptImpl"]},{"name":"const val secp256k1: String","description":"com.example.crypto.impl.ec.secp256k1","location":"crypto/com.example.crypto.impl.ec/secp256k1.html","searchKeys":["secp256k1","const val secp256k1: String","com.example.crypto.impl.ec.secp256k1"]},{"name":"const val sm2p256v1: String","description":"com.example.crypto.impl.ec.sm2p256v1","location":"crypto/com.example.crypto.impl.ec/sm2p256v1.html","searchKeys":["sm2p256v1","const val sm2p256v1: String","com.example.crypto.impl.ec.sm2p256v1"]},{"name":"constructor()","description":"com.example.crypto.LinuxSecureRandom.LinuxSecureRandom","location":"crypto/com.example.crypto/-linux-secure-random/-linux-secure-random.html","searchKeys":["LinuxSecureRandom","constructor()","com.example.crypto.LinuxSecureRandom.LinuxSecureRandom"]},{"name":"constructor()","description":"com.example.crypto.impl.cipher.AESCipherImpl.AESCipherImpl","location":"crypto/com.example.crypto.impl.cipher/-a-e-s-cipher-impl/-a-e-s-cipher-impl.html","searchKeys":["AESCipherImpl","constructor()","com.example.crypto.impl.cipher.AESCipherImpl.AESCipherImpl"]},{"name":"constructor()","description":"com.example.crypto.impl.hmac.HmacImpl.HmacImpl","location":"crypto/com.example.crypto.impl.hmac/-hmac-impl/-hmac-impl.html","searchKeys":["HmacImpl","constructor()","com.example.crypto.impl.hmac.HmacImpl.HmacImpl"]},{"name":"constructor()","description":"com.example.crypto.impl.kdf.PBKDF2Impl.PBKDF2Impl","location":"crypto/com.example.crypto.impl.kdf/-p-b-k-d-f2-impl/-p-b-k-d-f2-impl.html","searchKeys":["PBKDF2Impl","constructor()","com.example.crypto.impl.kdf.PBKDF2Impl.PBKDF2Impl"]},{"name":"constructor()","description":"com.example.crypto.impl.kdf.SCryptImpl.SCryptImpl","location":"crypto/com.example.crypto.impl.kdf/-s-crypt-impl/-s-crypt-impl.html","searchKeys":["SCryptImpl","constructor()","com.example.crypto.impl.kdf.SCryptImpl.SCryptImpl"]},{"name":"constructor(curveName: String)","description":"com.example.crypto.impl.ec.EllipticCurveKeyPairGenerator.EllipticCurveKeyPairGenerator","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-key-pair-generator/-elliptic-curve-key-pair-generator.html","searchKeys":["EllipticCurveKeyPairGenerator","constructor(curveName: String)","com.example.crypto.impl.ec.EllipticCurveKeyPairGenerator.EllipticCurveKeyPairGenerator"]},{"name":"constructor(curveName: String)","description":"com.example.crypto.impl.ec.EllipticCurveSigner.EllipticCurveSigner","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-signer/-elliptic-curve-signer.html","searchKeys":["EllipticCurveSigner","constructor(curveName: String)","com.example.crypto.impl.ec.EllipticCurveSigner.EllipticCurveSigner"]},{"name":"constructor(curveParams: X9ECParameters)","description":"com.example.crypto.impl.ec.EllipticCurve.EllipticCurve","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve/-elliptic-curve.html","searchKeys":["EllipticCurve","constructor(curveParams: X9ECParameters)","com.example.crypto.impl.ec.EllipticCurve.EllipticCurve"]},{"name":"constructor(ecPoint: ECPoint)","description":"com.example.crypto.impl.ec.EllipticCurvePoint.EllipticCurvePoint","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/-elliptic-curve-point.html","searchKeys":["EllipticCurvePoint","constructor(ecPoint: ECPoint)","com.example.crypto.impl.ec.EllipticCurvePoint.EllipticCurvePoint"]},{"name":"constructor(gm: Boolean)","description":"com.example.crypto.impl.hashing.HashImpl.HashImpl","location":"crypto/com.example.crypto.impl.hashing/-hash-impl/-hash-impl.html","searchKeys":["HashImpl","constructor(gm: Boolean)","com.example.crypto.impl.hashing.HashImpl.HashImpl"]},{"name":"constructor(r: BigInteger, s: BigInteger)","description":"com.example.crypto.api.ec.ECDSASignature.ECDSASignature","location":"crypto/com.example.crypto.api.ec/-e-c-d-s-a-signature/-e-c-d-s-a-signature.html","searchKeys":["ECDSASignature","constructor(r: BigInteger, s: BigInteger)","com.example.crypto.api.ec.ECDSASignature.ECDSASignature"]},{"name":"data class ECDSASignature(val r: BigInteger, val s: BigInteger)","description":"com.example.crypto.api.ec.ECDSASignature","location":"crypto/com.example.crypto.api.ec/-e-c-d-s-a-signature/index.html","searchKeys":["ECDSASignature","data class ECDSASignature(val r: BigInteger, val s: BigInteger)","com.example.crypto.api.ec.ECDSASignature"]},{"name":"enum Mode : Enum<AESCipher.Mode> ","description":"com.example.crypto.api.cipher.AESCipher.Mode","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/index.html","searchKeys":["Mode","enum Mode : Enum<AESCipher.Mode> ","com.example.crypto.api.cipher.AESCipher.Mode"]},{"name":"enum Operation : Enum<AESCipher.Operation> ","description":"com.example.crypto.api.cipher.AESCipher.Operation","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-operation/index.html","searchKeys":["Operation","enum Operation : Enum<AESCipher.Operation> ","com.example.crypto.api.cipher.AESCipher.Operation"]},{"name":"enum Padding : Enum<AESCipher.Padding> ","description":"com.example.crypto.api.cipher.AESCipher.Padding","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/index.html","searchKeys":["Padding","enum Padding : Enum<AESCipher.Padding> ","com.example.crypto.api.cipher.AESCipher.Padding"]},{"name":"fun CurvePoint.toPublicKey(): PublicKey","description":"com.example.crypto.api.ec.toPublicKey","location":"crypto/com.example.crypto.api.ec/to-public-key.html","searchKeys":["toPublicKey","fun CurvePoint.toPublicKey(): PublicKey","com.example.crypto.api.ec.toPublicKey"]},{"name":"fun DigestParams.toDigest(): Digest","description":"com.example.crypto.impl.kdf.PBKDF2Impl.toDigest","location":"crypto/com.example.crypto.impl.kdf/-p-b-k-d-f2-impl/to-digest.html","searchKeys":["toDigest","fun DigestParams.toDigest(): Digest","com.example.crypto.impl.kdf.PBKDF2Impl.toDigest"]},{"name":"fun ECKeyPair.getCompressedPublicKey(gm: Boolean = true): ByteArray","description":"com.example.crypto.getCompressedPublicKey","location":"crypto/com.example.crypto/get-compressed-public-key.html","searchKeys":["getCompressedPublicKey","fun ECKeyPair.getCompressedPublicKey(gm: Boolean = true): ByteArray","com.example.crypto.getCompressedPublicKey"]},{"name":"fun ECKeyPair.signMessage(message: ByteArray, gm: Boolean = true): SignatureData","description":"com.example.crypto.signMessage","location":"crypto/com.example.crypto/sign-message.html","searchKeys":["signMessage","fun ECKeyPair.signMessage(message: ByteArray, gm: Boolean = true): SignatureData","com.example.crypto.signMessage"]},{"name":"fun PrivateKey.toECKeyPair(isGM: Boolean = true): ECKeyPair","description":"com.example.crypto.extension.toECKeyPair","location":"crypto/com.example.crypto.extension/to-e-c-key-pair.html","searchKeys":["toECKeyPair","fun PrivateKey.toECKeyPair(isGM: Boolean = true): ECKeyPair","com.example.crypto.extension.toECKeyPair"]},{"name":"fun PrivateKey.toPublicKey(isGM: Boolean = true): PublicKey","description":"com.example.crypto.extension.toPublicKey","location":"crypto/com.example.crypto.extension/to-public-key.html","searchKeys":["toPublicKey","fun PrivateKey.toPublicKey(isGM: Boolean = true): PublicKey","com.example.crypto.extension.toPublicKey"]},{"name":"fun PublicKey.verifySignature(message: ByteArray, signature: SignatureData, gm: Boolean): Boolean","description":"com.example.crypto.verifySignature","location":"crypto/com.example.crypto/verify-signature.html","searchKeys":["verifySignature","fun PublicKey.verifySignature(message: ByteArray, signature: SignatureData, gm: Boolean): Boolean","com.example.crypto.verifySignature"]},{"name":"fun convertStringToPrivateKey(privateKeyString: String): PrivateKey","description":"com.example.crypto.convertStringToPrivateKey","location":"crypto/com.example.crypto/convert-string-to-private-key.html","searchKeys":["convertStringToPrivateKey","fun convertStringToPrivateKey(privateKeyString: String): PrivateKey","com.example.crypto.convertStringToPrivateKey"]},{"name":"fun createKeyPair(gm: Boolean = true): ECKeyPair","description":"com.example.crypto.createKeyPair","location":"crypto/com.example.crypto/create-key-pair.html","searchKeys":["createKeyPair","fun createKeyPair(gm: Boolean = true): ECKeyPair","com.example.crypto.createKeyPair"]},{"name":"fun decompressKey(publicBytes: ByteArray, gm: Boolean = true): ByteArray","description":"com.example.crypto.decompressKey","location":"crypto/com.example.crypto/decompress-key.html","searchKeys":["decompressKey","fun decompressKey(publicBytes: ByteArray, gm: Boolean = true): ByteArray","com.example.crypto.decompressKey"]},{"name":"fun getCurveParams(name: String): X9ECParameters","description":"com.example.crypto.impl.ec.getCurveParams","location":"crypto/com.example.crypto.impl.ec/get-curve-params.html","searchKeys":["getCurveParams","fun getCurveParams(name: String): X9ECParameters","com.example.crypto.impl.ec.getCurveParams"]},{"name":"fun getDomainParams(name: String): ECDomainParameters","description":"com.example.crypto.impl.ec.getDomainParams","location":"crypto/com.example.crypto.impl.ec/get-domain-params.html","searchKeys":["getDomainParams","fun getDomainParams(name: String): ECDomainParameters","com.example.crypto.impl.ec.getDomainParams"]},{"name":"fun publicKeyFromPrivate(privateKey: PrivateKey, gm: Boolean): PublicKey","description":"com.example.crypto.publicKeyFromPrivate","location":"crypto/com.example.crypto/public-key-from-private.html","searchKeys":["publicKeyFromPrivate","fun publicKeyFromPrivate(privateKey: PrivateKey, gm: Boolean): PublicKey","com.example.crypto.publicKeyFromPrivate"]},{"name":"fun secureRandom(): SecureRandom","description":"com.example.crypto.SecureRandomUtils.secureRandom","location":"crypto/com.example.crypto/-secure-random-utils/secure-random.html","searchKeys":["secureRandom","fun secureRandom(): SecureRandom","com.example.crypto.SecureRandomUtils.secureRandom"]},{"name":"fun signedMessageToKey(message: ByteArray, signature: SignatureData): PublicKey","description":"com.example.crypto.signedMessageToKey","location":"crypto/com.example.crypto/signed-message-to-key.html","searchKeys":["signedMessageToKey","fun signedMessageToKey(message: ByteArray, signature: SignatureData): PublicKey","com.example.crypto.signedMessageToKey"]},{"name":"fun valueOf(value: String): AESCipher.Mode","description":"com.example.crypto.api.cipher.AESCipher.Mode.valueOf","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AESCipher.Mode","com.example.crypto.api.cipher.AESCipher.Mode.valueOf"]},{"name":"fun valueOf(value: String): AESCipher.Operation","description":"com.example.crypto.api.cipher.AESCipher.Operation.valueOf","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-operation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AESCipher.Operation","com.example.crypto.api.cipher.AESCipher.Operation.valueOf"]},{"name":"fun valueOf(value: String): AESCipher.Padding","description":"com.example.crypto.api.cipher.AESCipher.Padding.valueOf","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AESCipher.Padding","com.example.crypto.api.cipher.AESCipher.Padding.valueOf"]},{"name":"fun values(): Array<AESCipher.Mode>","description":"com.example.crypto.api.cipher.AESCipher.Mode.values","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/values.html","searchKeys":["values","fun values(): Array<AESCipher.Mode>","com.example.crypto.api.cipher.AESCipher.Mode.values"]},{"name":"fun values(): Array<AESCipher.Operation>","description":"com.example.crypto.api.cipher.AESCipher.Operation.values","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-operation/values.html","searchKeys":["values","fun values(): Array<AESCipher.Operation>","com.example.crypto.api.cipher.AESCipher.Operation.values"]},{"name":"fun values(): Array<AESCipher.Padding>","description":"com.example.crypto.api.cipher.AESCipher.Padding.values","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/values.html","searchKeys":["values","fun values(): Array<AESCipher.Padding>","com.example.crypto.api.cipher.AESCipher.Padding.values"]},{"name":"interface AESCipher","description":"com.example.crypto.api.cipher.AESCipher","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/index.html","searchKeys":["AESCipher","interface AESCipher","com.example.crypto.api.cipher.AESCipher"]},{"name":"interface Curve","description":"com.example.crypto.api.ec.Curve","location":"crypto/com.example.crypto.api.ec/-curve/index.html","searchKeys":["Curve","interface Curve","com.example.crypto.api.ec.Curve"]},{"name":"interface CurvePoint","description":"com.example.crypto.api.ec.CurvePoint","location":"crypto/com.example.crypto.api.ec/-curve-point/index.html","searchKeys":["CurvePoint","interface CurvePoint","com.example.crypto.api.ec.CurvePoint"]},{"name":"interface Hash","description":"com.example.crypto.api.hashing.Hash","location":"crypto/com.example.crypto.api.hashing/-hash/index.html","searchKeys":["Hash","interface Hash","com.example.crypto.api.hashing.Hash"]},{"name":"interface Hmac","description":"com.example.crypto.api.mac.Hmac","location":"crypto/com.example.crypto.api.mac/-hmac/index.html","searchKeys":["Hmac","interface Hmac","com.example.crypto.api.mac.Hmac"]},{"name":"interface KeyPairGenerator","description":"com.example.crypto.api.ec.KeyPairGenerator","location":"crypto/com.example.crypto.api.ec/-key-pair-generator/index.html","searchKeys":["KeyPairGenerator","interface KeyPairGenerator","com.example.crypto.api.ec.KeyPairGenerator"]},{"name":"interface PBKDF2","description":"com.example.crypto.api.kdf.PBKDF2","location":"crypto/com.example.crypto.api.kdf/-p-b-k-d-f2/index.html","searchKeys":["PBKDF2","interface PBKDF2","com.example.crypto.api.kdf.PBKDF2"]},{"name":"interface SCrypt","description":"com.example.crypto.api.kdf.SCrypt","location":"crypto/com.example.crypto.api.kdf/-s-crypt/index.html","searchKeys":["SCrypt","interface SCrypt","com.example.crypto.api.kdf.SCrypt"]},{"name":"interface Signer","description":"com.example.crypto.api.ec.Signer","location":"crypto/com.example.crypto.api.ec/-signer/index.html","searchKeys":["Signer","interface Signer","com.example.crypto.api.ec.Signer"]},{"name":"object Companion","description":"com.example.crypto.LinuxSecureRandom.Companion","location":"crypto/com.example.crypto/-linux-secure-random/-companion/index.html","searchKeys":["Companion","object Companion","com.example.crypto.LinuxSecureRandom.Companion"]},{"name":"object CryptoAPI","description":"com.example.crypto.api.CryptoAPI","location":"crypto/com.example.crypto.api/-crypto-a-p-i/index.html","searchKeys":["CryptoAPI","object CryptoAPI","com.example.crypto.api.CryptoAPI"]},{"name":"object SecureRandomUtils","description":"com.example.crypto.SecureRandomUtils","location":"crypto/com.example.crypto/-secure-random-utils/index.html","searchKeys":["SecureRandomUtils","object SecureRandomUtils","com.example.crypto.SecureRandomUtils"]},{"name":"object Sha256 : DigestParams","description":"com.example.crypto.impl.hashing.DigestParams.Sha256","location":"crypto/com.example.crypto.impl.hashing/-digest-params/-sha256/index.html","searchKeys":["Sha256","object Sha256 : DigestParams","com.example.crypto.impl.hashing.DigestParams.Sha256"]},{"name":"object Sha512 : DigestParams","description":"com.example.crypto.impl.hashing.DigestParams.Sha512","location":"crypto/com.example.crypto.impl.hashing/-digest-params/-sha512/index.html","searchKeys":["Sha512","object Sha512 : DigestParams","com.example.crypto.impl.hashing.DigestParams.Sha512"]},{"name":"open override fun add(p: CurvePoint): CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurvePoint.add","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/add.html","searchKeys":["add","open override fun add(p: CurvePoint): CurvePoint","com.example.crypto.impl.ec.EllipticCurvePoint.add"]},{"name":"open override fun createPoint(x: BigInteger, y: BigInteger): CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurve.createPoint","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve/create-point.html","searchKeys":["createPoint","open override fun createPoint(x: BigInteger, y: BigInteger): CurvePoint","com.example.crypto.impl.ec.EllipticCurve.createPoint"]},{"name":"open override fun decodePoint(bytes: ByteArray): CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurve.decodePoint","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve/decode-point.html","searchKeys":["decodePoint","open override fun decodePoint(bytes: ByteArray): CurvePoint","com.example.crypto.impl.ec.EllipticCurve.decodePoint"]},{"name":"open override fun derive(pass: ByteArray, salt: ByteArray?, iterations: Int, digestParams: DigestParams): ByteArray","description":"com.example.crypto.impl.kdf.PBKDF2Impl.derive","location":"crypto/com.example.crypto.impl.kdf/-p-b-k-d-f2-impl/derive.html","searchKeys":["derive","open override fun derive(pass: ByteArray, salt: ByteArray?, iterations: Int, digestParams: DigestParams): ByteArray","com.example.crypto.impl.kdf.PBKDF2Impl.derive"]},{"name":"open override fun derive(pass: CharArray, salt: ByteArray?, iterations: Int, digestParams: DigestParams): ByteArray","description":"com.example.crypto.impl.kdf.PBKDF2Impl.derive","location":"crypto/com.example.crypto.impl.kdf/-p-b-k-d-f2-impl/derive.html","searchKeys":["derive","open override fun derive(pass: CharArray, salt: ByteArray?, iterations: Int, digestParams: DigestParams): ByteArray","com.example.crypto.impl.kdf.PBKDF2Impl.derive"]},{"name":"open override fun derive(password: ByteArray, salt: ByteArray?, n: Int, r: Int, p: Int, dkLen: Int): ByteArray","description":"com.example.crypto.impl.kdf.SCryptImpl.derive","location":"crypto/com.example.crypto.impl.kdf/-s-crypt-impl/derive.html","searchKeys":["derive","open override fun derive(password: ByteArray, salt: ByteArray?, n: Int, r: Int, p: Int, dkLen: Int): ByteArray","com.example.crypto.impl.kdf.SCryptImpl.derive"]},{"name":"open override fun encoded(compressed: Boolean): ByteArray","description":"com.example.crypto.impl.ec.EllipticCurvePoint.encoded","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/encoded.html","searchKeys":["encoded","open override fun encoded(compressed: Boolean): ByteArray","com.example.crypto.impl.ec.EllipticCurvePoint.encoded"]},{"name":"open override fun generate(): ECKeyPair","description":"com.example.crypto.impl.ec.EllipticCurveKeyPairGenerator.generate","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-key-pair-generator/generate.html","searchKeys":["generate","open override fun generate(): ECKeyPair","com.example.crypto.impl.ec.EllipticCurveKeyPairGenerator.generate"]},{"name":"open override fun generate(data: ByteArray): ByteArray","description":"com.example.crypto.impl.hmac.HmacImpl.generate","location":"crypto/com.example.crypto.impl.hmac/-hmac-impl/generate.html","searchKeys":["generate","open override fun generate(data: ByteArray): ByteArray","com.example.crypto.impl.hmac.HmacImpl.generate"]},{"name":"open override fun hash(message: ByteArray): String","description":"com.example.crypto.impl.hashing.HashImpl.hash","location":"crypto/com.example.crypto.impl.hashing/-hash-impl/hash.html","searchKeys":["hash","open override fun hash(message: ByteArray): String","com.example.crypto.impl.hashing.HashImpl.hash"]},{"name":"open override fun init(key: ByteArray, digestParams: DigestParams): Hmac","description":"com.example.crypto.impl.hmac.HmacImpl.init","location":"crypto/com.example.crypto.impl.hmac/-hmac-impl/init.html","searchKeys":["init","open override fun init(key: ByteArray, digestParams: DigestParams): Hmac","com.example.crypto.impl.hmac.HmacImpl.init"]},{"name":"open override fun init(mode: AESCipher.Mode, padding: AESCipher.Padding, operation: AESCipher.Operation, key: ByteArray, iv: ByteArray): AESCipher","description":"com.example.crypto.impl.cipher.AESCipherImpl.init","location":"crypto/com.example.crypto.impl.cipher/-a-e-s-cipher-impl/init.html","searchKeys":["init","open override fun init(mode: AESCipher.Mode, padding: AESCipher.Padding, operation: AESCipher.Operation, key: ByteArray, iv: ByteArray): AESCipher","com.example.crypto.impl.cipher.AESCipherImpl.init"]},{"name":"open override fun isInfinity(): Boolean","description":"com.example.crypto.impl.ec.EllipticCurvePoint.isInfinity","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/is-infinity.html","searchKeys":["isInfinity","open override fun isInfinity(): Boolean","com.example.crypto.impl.ec.EllipticCurvePoint.isInfinity"]},{"name":"open override fun mul(n: BigInteger): CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurvePoint.mul","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/mul.html","searchKeys":["mul","open override fun mul(n: BigInteger): CurvePoint","com.example.crypto.impl.ec.EllipticCurvePoint.mul"]},{"name":"open override fun normalize(): CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurvePoint.normalize","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/normalize.html","searchKeys":["normalize","open override fun normalize(): CurvePoint","com.example.crypto.impl.ec.EllipticCurvePoint.normalize"]},{"name":"open override fun performOperation(data: ByteArray): ByteArray","description":"com.example.crypto.impl.cipher.AESCipherImpl.performOperation","location":"crypto/com.example.crypto.impl.cipher/-a-e-s-cipher-impl/perform-operation.html","searchKeys":["performOperation","open override fun performOperation(data: ByteArray): ByteArray","com.example.crypto.impl.cipher.AESCipherImpl.performOperation"]},{"name":"open override fun publicFromPrivate(privateKey: BigInteger): BigInteger","description":"com.example.crypto.impl.ec.EllipticCurveSigner.publicFromPrivate","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-signer/public-from-private.html","searchKeys":["publicFromPrivate","open override fun publicFromPrivate(privateKey: BigInteger): BigInteger","com.example.crypto.impl.ec.EllipticCurveSigner.publicFromPrivate"]},{"name":"open override fun recover(recId: Int, message: ByteArray, signature: SignatureData): BigInteger?","description":"com.example.crypto.impl.ec.EllipticCurveSigner.recover","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-signer/recover.html","searchKeys":["recover","open override fun recover(recId: Int, message: ByteArray, signature: SignatureData): BigInteger?","com.example.crypto.impl.ec.EllipticCurveSigner.recover"]},{"name":"open override fun sign(message: ByteArray, privateKey: BigInteger): SignatureData","description":"com.example.crypto.impl.ec.EllipticCurveSigner.sign","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-signer/sign.html","searchKeys":["sign","open override fun sign(message: ByteArray, privateKey: BigInteger): SignatureData","com.example.crypto.impl.ec.EllipticCurveSigner.sign"]},{"name":"open override fun verify(message: ByteArray, signatureData: SignatureData, publicKey: BigInteger): Boolean","description":"com.example.crypto.impl.ec.EllipticCurveSigner.verify","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-signer/verify.html","searchKeys":["verify","open override fun verify(message: ByteArray, signatureData: SignatureData, publicKey: BigInteger): Boolean","com.example.crypto.impl.ec.EllipticCurveSigner.verify"]},{"name":"open override val g: CurvePoint","description":"com.example.crypto.impl.ec.EllipticCurve.g","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve/g.html","searchKeys":["g","open override val g: CurvePoint","com.example.crypto.impl.ec.EllipticCurve.g"]},{"name":"open override val n: BigInteger","description":"com.example.crypto.impl.ec.EllipticCurve.n","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve/n.html","searchKeys":["n","open override val n: BigInteger","com.example.crypto.impl.ec.EllipticCurve.n"]},{"name":"open override val x: BigInteger","description":"com.example.crypto.impl.ec.EllipticCurvePoint.x","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/x.html","searchKeys":["x","open override val x: BigInteger","com.example.crypto.impl.ec.EllipticCurvePoint.x"]},{"name":"open override val y: BigInteger","description":"com.example.crypto.impl.ec.EllipticCurvePoint.y","location":"crypto/com.example.crypto.impl.ec/-elliptic-curve-point/y.html","searchKeys":["y","open override val y: BigInteger","com.example.crypto.impl.ec.EllipticCurvePoint.y"]},{"name":"sealed class DigestParams","description":"com.example.crypto.impl.hashing.DigestParams","location":"crypto/com.example.crypto.impl.hashing/-digest-params/index.html","searchKeys":["DigestParams","sealed class DigestParams","com.example.crypto.impl.hashing.DigestParams"]},{"name":"val aesCipher: AESCipherImpl","description":"com.example.crypto.api.CryptoAPI.aesCipher","location":"crypto/com.example.crypto.api/-crypto-a-p-i/aes-cipher.html","searchKeys":["aesCipher","val aesCipher: AESCipherImpl","com.example.crypto.api.CryptoAPI.aesCipher"]},{"name":"val code: String","description":"com.example.crypto.api.cipher.AESCipher.Mode.code","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/code.html","searchKeys":["code","val code: String","com.example.crypto.api.cipher.AESCipher.Mode.code"]},{"name":"val entries: EnumEntries<AESCipher.Mode>","description":"com.example.crypto.api.cipher.AESCipher.Mode.entries","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<AESCipher.Mode>","com.example.crypto.api.cipher.AESCipher.Mode.entries"]},{"name":"val entries: EnumEntries<AESCipher.Operation>","description":"com.example.crypto.api.cipher.AESCipher.Operation.entries","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-operation/entries.html","searchKeys":["entries","val entries: EnumEntries<AESCipher.Operation>","com.example.crypto.api.cipher.AESCipher.Operation.entries"]},{"name":"val entries: EnumEntries<AESCipher.Padding>","description":"com.example.crypto.api.cipher.AESCipher.Padding.entries","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/entries.html","searchKeys":["entries","val entries: EnumEntries<AESCipher.Padding>","com.example.crypto.api.cipher.AESCipher.Padding.entries"]},{"name":"val hmac: HmacImpl","description":"com.example.crypto.api.CryptoAPI.hmac","location":"crypto/com.example.crypto.api/-crypto-a-p-i/hmac.html","searchKeys":["hmac","val hmac: HmacImpl","com.example.crypto.api.CryptoAPI.hmac"]},{"name":"val keySize: Int","description":"com.example.crypto.impl.hashing.DigestParams.keySize","location":"crypto/com.example.crypto.impl.hashing/-digest-params/key-size.html","searchKeys":["keySize","val keySize: Int","com.example.crypto.impl.hashing.DigestParams.keySize"]},{"name":"val pbkdf2: PBKDF2Impl","description":"com.example.crypto.api.CryptoAPI.pbkdf2","location":"crypto/com.example.crypto.api/-crypto-a-p-i/pbkdf2.html","searchKeys":["pbkdf2","val pbkdf2: PBKDF2Impl","com.example.crypto.api.CryptoAPI.pbkdf2"]},{"name":"val r: BigInteger","description":"com.example.crypto.api.ec.ECDSASignature.r","location":"crypto/com.example.crypto.api.ec/-e-c-d-s-a-signature/r.html","searchKeys":["r","val r: BigInteger","com.example.crypto.api.ec.ECDSASignature.r"]},{"name":"val s: BigInteger","description":"com.example.crypto.api.ec.ECDSASignature.s","location":"crypto/com.example.crypto.api.ec/-e-c-d-s-a-signature/s.html","searchKeys":["s","val s: BigInteger","com.example.crypto.api.ec.ECDSASignature.s"]},{"name":"val scrypt: SCryptImpl","description":"com.example.crypto.api.CryptoAPI.scrypt","location":"crypto/com.example.crypto.api/-crypto-a-p-i/scrypt.html","searchKeys":["scrypt","val scrypt: SCryptImpl","com.example.crypto.api.CryptoAPI.scrypt"]},{"name":"val secP256K1KeyPairGenerator: KeyPairGenerator","description":"com.example.crypto.api.CryptoAPI.secP256K1KeyPairGenerator","location":"crypto/com.example.crypto.api/-crypto-a-p-i/sec-p256-k1-key-pair-generator.html","searchKeys":["secP256K1KeyPairGenerator","val secP256K1KeyPairGenerator: KeyPairGenerator","com.example.crypto.api.CryptoAPI.secP256K1KeyPairGenerator"]},{"name":"val secP256K1Signer: Signer","description":"com.example.crypto.api.CryptoAPI.secP256K1Signer","location":"crypto/com.example.crypto.api/-crypto-a-p-i/sec-p256-k1-signer.html","searchKeys":["secP256K1Signer","val secP256K1Signer: Signer","com.example.crypto.api.CryptoAPI.secP256K1Signer"]},{"name":"val sm2P256V1KeyPairGenerator: KeyPairGenerator","description":"com.example.crypto.api.CryptoAPI.sm2P256V1KeyPairGenerator","location":"crypto/com.example.crypto.api/-crypto-a-p-i/sm2-p256-v1-key-pair-generator.html","searchKeys":["sm2P256V1KeyPairGenerator","val sm2P256V1KeyPairGenerator: KeyPairGenerator","com.example.crypto.api.CryptoAPI.sm2P256V1KeyPairGenerator"]},{"name":"val sm2P256V1Signer: Signer","description":"com.example.crypto.api.CryptoAPI.sm2P256V1Signer","location":"crypto/com.example.crypto.api/-crypto-a-p-i/sm2-p256-v1-signer.html","searchKeys":["sm2P256V1Signer","val sm2P256V1Signer: Signer","com.example.crypto.api.CryptoAPI.sm2P256V1Signer"]},{"name":"val value: String","description":"com.example.crypto.api.cipher.AESCipher.Padding.value","location":"crypto/com.example.crypto.api.cipher/-a-e-s-cipher/-padding/value.html","searchKeys":["value","val value: String","com.example.crypto.api.cipher.AESCipher.Padding.value"]}]